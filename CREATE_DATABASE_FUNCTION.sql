-- Run this ENTIRE script in Supabase SQL Editor
-- This creates a database function that will work WITHOUT Edge Functions

-- Create the chat function
CREATE OR REPLACE FUNCTION niv_chat(
  user_message TEXT,
  session_id TEXT DEFAULT 'default'
)
RETURNS JSON
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  response_json JSON;
  ai_response TEXT;
BEGIN
  -- Generate AI response (for now, a helpful static response)
  ai_response := 'I understand you need help with: ' || user_message || 
                 '. As your AI PR strategist, I can assist with press releases, media lists, strategic planning, and crisis management. What specific aspect would you like to focus on?';
  
  -- Build response JSON
  response_json := json_build_object(
    'response', ai_response,
    'message', ai_response,
    'chatMessage', ai_response,
    'shouldSave', CASE 
      WHEN user_message ILIKE '%press release%' OR 
           user_message ILIKE '%media%' OR 
           user_message ILIKE '%strategy%' OR
           user_message ILIKE '%announce%' OR
           user_message ILIKE '%ceo%'
      THEN true 
      ELSE false 
    END
  );
  
  -- Save conversation to database
  INSERT INTO niv_conversations (session_id, role, content, created_at)
  VALUES 
    (session_id, 'user', user_message, NOW()),
    (session_id, 'assistant', ai_response, NOW() + INTERVAL '1 second');
  
  -- Create artifact if strategic content detected
  IF user_message ILIKE '%press release%' OR user_message ILIKE '%announce%' THEN
    INSERT INTO niv_artifacts (
      session_id,
      type,
      title,
      content,
      status,
      created_at
    ) VALUES (
      session_id,
      'press-release',
      'Press Release: ' || LEFT(user_message, 50),
      json_build_object(
        'headline', 'FOR IMMEDIATE RELEASE',
        'body', 'This press release addresses: ' || user_message,
        'contact', 'Media Relations',
        'notes', 'Generated by Niv AI'
      ),
      'draft',
      NOW()
    );
  END IF;
  
  RETURN response_json;
END;
$$;

-- Grant permissions
GRANT EXECUTE ON FUNCTION niv_chat TO anon;
GRANT EXECUTE ON FUNCTION niv_chat TO authenticated;
GRANT EXECUTE ON FUNCTION niv_chat TO service_role;

-- Test the function
SELECT niv_chat('I need a press release for our new CEO announcement', 'test-session-123');