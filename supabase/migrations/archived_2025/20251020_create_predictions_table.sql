-- Create predictions table for real-time forward-looking predictions
CREATE TABLE IF NOT EXISTS predictions (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  organization_id UUID NOT NULL REFERENCES organizations(id) ON DELETE CASCADE,

  -- Core prediction
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  category TEXT NOT NULL CHECK (category IN ('competitive', 'regulatory', 'market', 'technology', 'partnership', 'crisis')),

  -- Confidence and timing
  confidence_score INTEGER NOT NULL CHECK (confidence_score >= 0 AND confidence_score <= 100),
  time_horizon TEXT NOT NULL CHECK (time_horizon IN ('1-week', '1-month', '3-months', '6-months', '1-year')),
  impact_level TEXT NOT NULL CHECK (impact_level IN ('high', 'medium', 'low')),

  -- Additional data
  data JSONB DEFAULT '{}',

  -- Status tracking
  status TEXT DEFAULT 'active' CHECK (status IN ('active', 'validated', 'invalidated', 'expired')),

  -- Timestamps
  created_at TIMESTAMPTZ DEFAULT now(),
  updated_at TIMESTAMPTZ DEFAULT now()
);

-- Indexes
CREATE INDEX IF NOT EXISTS idx_predictions_organization_id ON predictions(organization_id);
CREATE INDEX IF NOT EXISTS idx_predictions_created_at ON predictions(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_predictions_status ON predictions(status);
CREATE INDEX IF NOT EXISTS idx_predictions_category ON predictions(category);
CREATE INDEX IF NOT EXISTS idx_predictions_impact ON predictions(impact_level);

-- RLS Policies
ALTER TABLE predictions ENABLE ROW LEVEL SECURITY;

-- Service role full access
CREATE POLICY "Service role full access" ON predictions
  FOR ALL
  TO service_role
  USING (true)
  WITH CHECK (true);

-- Users can view all predictions (simpler policy for now)
CREATE POLICY "Users can view predictions" ON predictions
  FOR SELECT
  TO authenticated
  USING (true);

-- Grant permissions
GRANT ALL ON predictions TO service_role;
GRANT SELECT ON predictions TO authenticated, anon;

-- Auto-update timestamp
CREATE TRIGGER update_predictions_updated_at
  BEFORE UPDATE ON predictions
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

COMMENT ON TABLE predictions IS 'Forward-looking predictions generated by real-time prediction generator';
COMMENT ON COLUMN predictions.confidence_score IS 'AI confidence level 0-100';
COMMENT ON COLUMN predictions.time_horizon IS 'When this prediction is expected to materialize';
COMMENT ON COLUMN predictions.data IS 'Evidence, implications, and recommended actions';
