{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StrategicPlanningOptimized.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useProject } from \"../contexts/ProjectContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport SaveToMemoryVaultButton from \"./MemoryVault/SaveToMemoryVaultButton\";\nimport strategicPlanningService from '../services/strategicPlanningService';\nimport { Brain, Target, Lightbulb, ChevronRight, ChevronDown, Download, Loader, AlertCircle, Sparkles, Calendar, BarChart3, CheckCircle, ArrowRight, Zap, TrendingUp, Users, Globe, Shield, Play, Eye, Edit3, FileText, ListChecks, Clock, Info, X, Copy, Save } from \"lucide-react\";\nimport \"./StrategicPlanningOptimized.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StrategicPlanningOptimized({\n  initialData,\n  onDataChange\n}) {\n  _s();\n  var _strategicPlan$strate2, _strategicPlan$strate3;\n  const [objective, setObjective] = useState(\"\");\n  const [context, setContext] = useState(\"\");\n  const [constraints, setConstraints] = useState(\"\");\n  const [timeline, setTimeline] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [strategicPlan, setStrategicPlan] = useState(null);\n  const [error, setError] = useState(null);\n  const [expandedPillars, setExpandedPillars] = useState({});\n  const [showEvidence, setShowEvidence] = useState({});\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [executionStatus, setExecutionStatus] = useState(null);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [activeTab, setActiveTab] = useState('create');\n  const {\n    selectedProject\n  } = useProject();\n  const navigate = useNavigate();\n\n  // Context pills for quick starts\n  const contextPills = [{\n    id: 'launch',\n    label: 'Product Launch',\n    icon: Sparkles,\n    color: '#10b981'\n  }, {\n    id: 'crisis',\n    label: 'Crisis Response',\n    icon: Shield,\n    color: '#ef4444'\n  }, {\n    id: 'thought',\n    label: 'Thought Leadership',\n    icon: Brain,\n    color: '#8b5cf6'\n  }, {\n    id: 'market',\n    label: 'Market Entry',\n    icon: Globe,\n    color: '#3b82f6'\n  }, {\n    id: 'reputation',\n    label: 'Reputation Building',\n    icon: TrendingUp,\n    color: '#f59e0b'\n  }];\n  const planningTypes = [{\n    id: 'comprehensive',\n    label: 'Comprehensive',\n    icon: Brain,\n    desc: 'Full strategic plan'\n  }, {\n    id: 'crisis',\n    label: 'Crisis Response',\n    icon: Shield,\n    desc: 'Rapid response plan'\n  }, {\n    id: 'campaign',\n    label: 'Campaign',\n    icon: Target,\n    desc: 'Focused campaign'\n  }, {\n    id: 'launch',\n    label: 'Product Launch',\n    icon: Sparkles,\n    desc: 'Go-to-market plan'\n  }];\n  const [selectedPlanType, setSelectedPlanType] = useState('comprehensive');\n  const tabs = [{\n    id: 'create',\n    label: 'Create Plan',\n    icon: Brain\n  }, {\n    id: 'current',\n    label: 'Current Plan',\n    icon: FileText\n  }, {\n    id: 'saved',\n    label: 'Saved Plans',\n    icon: Save\n  }, {\n    id: 'history',\n    label: 'Analytics',\n    icon: BarChart3\n  }];\n  useEffect(() => {\n    loadSavedPlans();\n  }, []);\n\n  // Handle initial data from Niv\n  useEffect(() => {\n    if (initialData) {\n      setObjective(initialData.objective || '');\n      setContext(initialData.context || '');\n      setConstraints(initialData.constraints || '');\n      setTimeline(initialData.timeline || '');\n\n      // Set plan type if provided\n      if (initialData.planType) {\n        setSelectedPlanType(initialData.planType);\n      }\n\n      // Auto-generate if all required data is present\n      if (initialData.objective && initialData.autoGenerate) {\n        generateStrategicPlan();\n      }\n    }\n  }, [initialData]);\n  const loadSavedPlans = () => {\n    const plans = strategicPlanningService.getPlansFromLocalStorage();\n    setSavedPlans(plans);\n  };\n  const togglePillar = pillarId => {\n    setExpandedPillars(prev => ({\n      ...prev,\n      [pillarId]: !prev[pillarId]\n    }));\n  };\n  const generateStrategicPlan = async () => {\n    if (!objective.trim()) {\n      setError(\"Please describe your objective\");\n      return;\n    }\n    setIsGenerating(true);\n    setError(null);\n    try {\n      const result = await strategicPlanningService.generatePlan(objective, context, constraints, timeline);\n      if (!result || !result.success && !result.data) {\n        throw new Error(\"Failed to generate strategic plan\");\n      }\n      const plan = result.data || result;\n      setStrategicPlan(plan);\n      strategicPlanningService.savePlanToLocalStorage(plan);\n      loadSavedPlans();\n      if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n        setExpandedPillars({\n          0: true\n        });\n      }\n\n      // Switch to current plan tab to show the generated plan\n      setActiveTab('current');\n    } catch (error) {\n      console.error(\"Error generating strategic plan:\", error);\n      setError(error.message || \"Failed to generate strategic plan\");\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const copyPlanToClipboard = () => {\n    var _strategicPlan$strate, _strategicPlan$implem, _strategicPlan$succes;\n    if (!strategicPlan) return;\n    const planText = `\nSTRATEGIC PLAN: ${strategicPlan.objective}\n\nEXECUTIVE SUMMARY:\n${strategicPlan.executive_summary}\n\nSTRATEGIC PILLARS:\n${(_strategicPlan$strate = strategicPlan.strategic_pillars) === null || _strategicPlan$strate === void 0 ? void 0 : _strategicPlan$strate.map((pillar, index) => {\n      var _pillar$actions;\n      return `${index + 1}. ${pillar.title}\n     ${pillar.description}\n     Actions: ${((_pillar$actions = pillar.actions) === null || _pillar$actions === void 0 ? void 0 : _pillar$actions.join(', ')) || 'Not specified'}\n     Timeline: ${pillar.timeline || 'TBD'}\n     MCP Assignment: ${pillar.mcp || 'Not assigned'}`;\n    }).join('\\n\\n')}\n\nIMPLEMENTATION PHASES:\n${(_strategicPlan$implem = strategicPlan.implementation_phases) === null || _strategicPlan$implem === void 0 ? void 0 : _strategicPlan$implem.map(phase => {\n      var _phase$tasks;\n      return `• ${phase.phase}: ${phase.duration} - ${(_phase$tasks = phase.tasks) === null || _phase$tasks === void 0 ? void 0 : _phase$tasks.join(', ')}`;\n    }).join('\\n')}\n\nSUCCESS METRICS:\n${(_strategicPlan$succes = strategicPlan.success_metrics) === null || _strategicPlan$succes === void 0 ? void 0 : _strategicPlan$succes.map(metric => `• ${metric}`).join('\\n')}\n    `.trim();\n    navigator.clipboard.writeText(planText);\n  };\n  const executeStrategicPlan = async () => {\n    if (!strategicPlan) return;\n    setIsExecuting(true);\n    setExecutionStatus({\n      stage: 'initializing',\n      message: 'Creating campaign...'\n    });\n    try {\n      const campaign = strategicPlanningService.generateCampaignFromPlan(strategicPlan);\n      setExecutionStatus({\n        stage: 'campaign',\n        message: 'Campaign created successfully!'\n      });\n      setTimeout(() => {\n        navigate(`/projects/${selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id}/campaign-execution/${campaign.id}`);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error executing strategic plan:\", error);\n      setExecutionStatus({\n        stage: 'error',\n        message: 'Execution failed: ' + error.message\n      });\n    } finally {\n      setTimeout(() => {\n        setIsExecuting(false);\n        setExecutionStatus(null);\n      }, 3000);\n    }\n  };\n  const addContextPill = pillId => {\n    const pill = contextPills.find(p => p.id === pillId);\n    if (pill) {\n      const contextText = {\n        'launch': 'Launch our new product to market with maximum impact and strategic positioning',\n        'crisis': 'Respond to crisis situation effectively while protecting reputation and stakeholder trust',\n        'thought': 'Establish thought leadership in our industry through strategic content and positioning',\n        'market': 'Enter new market segment strategically with proper research and positioning',\n        'reputation': 'Build and enhance corporate reputation through strategic communications'\n      };\n      setContext(prev => prev ? `${prev}\\n\\n${contextText[pillId]}` : contextText[pillId]);\n    }\n  };\n  const loadSavedPlan = plan => {\n    setStrategicPlan(plan);\n    setActiveTab('current'); // Switch to Current Plan tab to show the plan inline\n    setObjective(plan.objective || '');\n    setContext(plan.context || '');\n    setConstraints(plan.constraints || '');\n    setTimeline(plan.timeline || '');\n\n    // Auto-expand first pillar\n    if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n      setExpandedPillars({\n        0: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategic-planning-optimized\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategic-tabs\",\n      children: tabs.map(tab => {\n        const Icon = tab.icon;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === tab.id ? 'active' : ''}`,\n          onClick: () => setActiveTab(tab.id),\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: \"tab-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), tab.label]\n        }, tab.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategic-content\",\n      children: [activeTab === 'create' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-plan-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-type-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Planning Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-types-compact\",\n            children: planningTypes.map(type => {\n              const Icon = type.icon;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `plan-type-compact ${selectedPlanType === type.id ? 'selected' : ''}`,\n                onClick: () => setSelectedPlanType(type.id),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  className: \"plan-type-icon-small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plan-type-label\",\n                    children: type.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plan-type-desc\",\n                    children: type.desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this)]\n              }, type.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-compact\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                className: \"form-icon-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this), \"Objective\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: objective,\n              onChange: e => setObjective(e.target.value),\n              placeholder: \"What do you want to achieve?\",\n              rows: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"context-pills-compact\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Quick Context:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pills-row\",\n              children: contextPills.map(pill => {\n                const Icon = pill.icon;\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"context-pill-small\",\n                  onClick: () => addContextPill(pill.id),\n                  style: {\n                    borderColor: pill.color\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    className: \"pill-icon-small\",\n                    style: {\n                      color: pill.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this), pill.label]\n                }, pill.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row-compact\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group-half\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  className: \"form-icon-small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this), \"Context\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: context,\n                onChange: e => setContext(e.target.value),\n                placeholder: \"Background, situation...\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group-half\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                  className: \"form-icon-small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), \"Constraints\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: constraints,\n                onChange: e => setConstraints(e.target.value),\n                placeholder: \"Budget, timeline limits...\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group-compact\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                className: \"form-icon-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), \"Timeline\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: timeline,\n              onChange: e => setTimeline(e.target.value),\n              placeholder: \"e.g., 3 months, Q1 2025\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message-compact\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"error-icon-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn-compact\",\n            onClick: generateStrategicPlan,\n            disabled: isGenerating,\n            children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Loader, {\n                className: \"loading-icon-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), \"Generating...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                className: \"btn-icon-small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this), \"Generate Plan\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), activeTab === 'current' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-plan-tab\",\n        children: strategicPlan ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-plan-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-header-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-meta-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-badge\",\n                children: [/*#__PURE__*/_jsxDEV(Brain, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this), \"AI Generated Plan\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"plan-type-badge\",\n                children: selectedPlanType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-actions-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('create'),\n                className: \"back-btn-inline\",\n                children: [/*#__PURE__*/_jsxDEV(ArrowRight, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 23\n                }, this), \"New Plan\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: copyPlanToClipboard,\n                className: \"copy-btn-inline\",\n                children: [/*#__PURE__*/_jsxDEV(Copy, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this), \"Copy\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: executeStrategicPlan,\n                className: \"execute-btn-inline\",\n                disabled: isExecuting,\n                children: isExecuting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Loader, {\n                    className: \"loading-icon-tiny\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 27\n                  }, this), \"Executing...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Play, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 27\n                  }, this), \"Execute\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-content-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"plan-objective\",\n              children: strategicPlan.objective\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-section-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(Target, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 23\n                }, this), \"Executive Summary\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"executive-summary-inline\",\n                children: strategicPlan.executive_summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-section-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(Lightbulb, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this), \"Strategic Pillars (\", ((_strategicPlan$strate2 = strategicPlan.strategic_pillars) === null || _strategicPlan$strate2 === void 0 ? void 0 : _strategicPlan$strate2.length) || 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pillars-inline\",\n                children: (_strategicPlan$strate3 = strategicPlan.strategic_pillars) === null || _strategicPlan$strate3 === void 0 ? void 0 : _strategicPlan$strate3.map((pillar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pillar-inline\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pillar-header-inline-toggle\",\n                    onClick: () => togglePillar(index),\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: pillar.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 29\n                    }, this), expandedPillars[index] ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 55\n                    }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 83\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 27\n                  }, this), expandedPillars[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pillar-details-inline\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: pillar.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 31\n                    }, this), pillar.actions && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pillar-actions-inline\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"Actions:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 466,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                        children: pillar.actions.map((action, actionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: action\n                        }, actionIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 469,\n                          columnNumber: 39\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 467,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pillar-meta-inline\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(Clock, {\n                          size: 14\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 35\n                        }, this), pillar.timeline || 'TBD']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 475,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(Zap, {\n                          size: 14\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 35\n                        }, this), pillar.mcp || 'Content Generator']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 474,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 19\n            }, this), strategicPlan.success_metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-section-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 25\n                }, this), \"Success Metrics\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrics-inline\",\n                children: strategicPlan.success_metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metric-inline\",\n                  children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: metric\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 29\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this), executionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"execution-status-inline\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-content-inline\",\n              children: [executionStatus.stage === 'error' ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"status-icon-inline error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n                className: \"status-icon-inline loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: executionStatus.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-plan-state\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"no-plan-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Strategic Plan Generated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Generate a strategic plan from the Create Plan tab to view it here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.75rem',\n              color: 'rgba(255, 255, 255, 0.4)',\n              marginBottom: '1.5rem'\n            },\n            children: [\"Debug: strategicPlan = \", strategicPlan ? 'EXISTS' : 'NULL']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab('create'),\n            className: \"create-plan-btn\",\n            children: [/*#__PURE__*/_jsxDEV(Brain, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this), \"Create Plan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), activeTab === 'saved' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-plans-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Saved Strategic Plans (\", savedPlans.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), savedPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-compact\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"empty-icon-small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No saved plans yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.75rem',\n              color: 'rgba(255, 255, 255, 0.5)'\n            },\n            children: \"Generate a plan from the Create Plan tab to see it here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plans-grid\",\n          children: savedPlans.map(plan => {\n            var _plan$objective;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [(_plan$objective = plan.objective) === null || _plan$objective === void 0 ? void 0 : _plan$objective.substring(0, 50), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plan-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plan-date\",\n                  children: new Date(plan.created_at).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"plan-type\",\n                  children: \"Strategic Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  console.log('Loading saved plan:', plan);\n                  loadSavedPlan(plan);\n                },\n                className: \"load-btn-compact\",\n                children: [/*#__PURE__*/_jsxDEV(Eye, {\n                  className: \"btn-icon-tiny\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 23\n                }, this), \"View Plan\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this)]\n            }, plan.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this), activeTab === 'history' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analytics-tab\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Plan Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n            className: \"analytics-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Analytics and performance tracking coming soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analytics-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total Plans\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: savedPlans.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"This Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: savedPlans.filter(plan => new Date(plan.created_at).getMonth() === new Date().getMonth()).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(StrategicPlanningOptimized, \"66VmHzaQLN47UNQaZ8VTpkpl8Jg=\", false, function () {\n  return [useProject, useNavigate];\n});\n_c = StrategicPlanningOptimized;\nvar _c;\n$RefreshReg$(_c, \"StrategicPlanningOptimized\");","map":{"version":3,"names":["React","useState","useEffect","useProject","useNavigate","SaveToMemoryVaultButton","strategicPlanningService","Brain","Target","Lightbulb","ChevronRight","ChevronDown","Download","Loader","AlertCircle","Sparkles","Calendar","BarChart3","CheckCircle","ArrowRight","Zap","TrendingUp","Users","Globe","Shield","Play","Eye","Edit3","FileText","ListChecks","Clock","Info","X","Copy","Save","jsxDEV","_jsxDEV","Fragment","_Fragment","StrategicPlanningOptimized","initialData","onDataChange","_s","_strategicPlan$strate2","_strategicPlan$strate3","objective","setObjective","context","setContext","constraints","setConstraints","timeline","setTimeline","isGenerating","setIsGenerating","strategicPlan","setStrategicPlan","error","setError","expandedPillars","setExpandedPillars","showEvidence","setShowEvidence","isExecuting","setIsExecuting","executionStatus","setExecutionStatus","savedPlans","setSavedPlans","activeTab","setActiveTab","selectedProject","navigate","contextPills","id","label","icon","color","planningTypes","desc","selectedPlanType","setSelectedPlanType","tabs","loadSavedPlans","planType","autoGenerate","generateStrategicPlan","plans","getPlansFromLocalStorage","togglePillar","pillarId","prev","trim","result","generatePlan","success","data","Error","plan","savePlanToLocalStorage","strategic_pillars","length","console","message","copyPlanToClipboard","_strategicPlan$strate","_strategicPlan$implem","_strategicPlan$succes","planText","executive_summary","map","pillar","index","_pillar$actions","title","description","actions","join","mcp","implementation_phases","phase","_phase$tasks","duration","tasks","success_metrics","metric","navigator","clipboard","writeText","executeStrategicPlan","stage","campaign","generateCampaignFromPlan","setTimeout","addContextPill","pillId","pill","find","p","contextText","loadSavedPlan","className","children","tab","Icon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","rows","style","borderColor","disabled","size","action","actionIndex","fontSize","marginBottom","_plan$objective","substring","Date","created_at","toLocaleDateString","log","filter","getMonth","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StrategicPlanningOptimized.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useProject } from \"../contexts/ProjectContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport SaveToMemoryVaultButton from \"./MemoryVault/SaveToMemoryVaultButton\";\nimport strategicPlanningService from '../services/strategicPlanningService';\nimport {\n  Brain,\n  Target,\n  Lightbulb,\n  ChevronRight,\n  ChevronDown,\n  Download,\n  Loader,\n  AlertCircle,\n  Sparkles,\n  Calendar,\n  BarChart3,\n  CheckCircle,\n  ArrowRight,\n  Zap,\n  TrendingUp,\n  Users,\n  Globe,\n  Shield,\n  Play,\n  Eye,\n  Edit3,\n  FileText,\n  ListChecks,\n  Clock,\n  Info,\n  X,\n  Copy,\n  Save\n} from \"lucide-react\";\nimport \"./StrategicPlanningOptimized.css\";\n\nexport default function StrategicPlanningOptimized({ initialData, onDataChange }) {\n  const [objective, setObjective] = useState(\"\");\n  const [context, setContext] = useState(\"\");\n  const [constraints, setConstraints] = useState(\"\");\n  const [timeline, setTimeline] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [strategicPlan, setStrategicPlan] = useState(null);\n  const [error, setError] = useState(null);\n  const [expandedPillars, setExpandedPillars] = useState({});\n  const [showEvidence, setShowEvidence] = useState({});\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [executionStatus, setExecutionStatus] = useState(null);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [activeTab, setActiveTab] = useState('create');\n  const { selectedProject } = useProject();\n  const navigate = useNavigate();\n\n  // Context pills for quick starts\n  const contextPills = [\n    { id: 'launch', label: 'Product Launch', icon: Sparkles, color: '#10b981' },\n    { id: 'crisis', label: 'Crisis Response', icon: Shield, color: '#ef4444' },\n    { id: 'thought', label: 'Thought Leadership', icon: Brain, color: '#8b5cf6' },\n    { id: 'market', label: 'Market Entry', icon: Globe, color: '#3b82f6' },\n    { id: 'reputation', label: 'Reputation Building', icon: TrendingUp, color: '#f59e0b' }\n  ];\n\n  const planningTypes = [\n    { id: 'comprehensive', label: 'Comprehensive', icon: Brain, desc: 'Full strategic plan' },\n    { id: 'crisis', label: 'Crisis Response', icon: Shield, desc: 'Rapid response plan' },\n    { id: 'campaign', label: 'Campaign', icon: Target, desc: 'Focused campaign' },\n    { id: 'launch', label: 'Product Launch', icon: Sparkles, desc: 'Go-to-market plan' }\n  ];\n\n  const [selectedPlanType, setSelectedPlanType] = useState('comprehensive');\n\n  const tabs = [\n    { id: 'create', label: 'Create Plan', icon: Brain },\n    { id: 'current', label: 'Current Plan', icon: FileText },\n    { id: 'saved', label: 'Saved Plans', icon: Save },\n    { id: 'history', label: 'Analytics', icon: BarChart3 }\n  ];\n\n  useEffect(() => {\n    loadSavedPlans();\n  }, []);\n  \n  // Handle initial data from Niv\n  useEffect(() => {\n    if (initialData) {\n      setObjective(initialData.objective || '');\n      setContext(initialData.context || '');\n      setConstraints(initialData.constraints || '');\n      setTimeline(initialData.timeline || '');\n      \n      // Set plan type if provided\n      if (initialData.planType) {\n        setSelectedPlanType(initialData.planType);\n      }\n      \n      // Auto-generate if all required data is present\n      if (initialData.objective && initialData.autoGenerate) {\n        generateStrategicPlan();\n      }\n    }\n  }, [initialData]);\n\n  const loadSavedPlans = () => {\n    const plans = strategicPlanningService.getPlansFromLocalStorage();\n    setSavedPlans(plans);\n  };\n\n  const togglePillar = (pillarId) => {\n    setExpandedPillars(prev => ({\n      ...prev,\n      [pillarId]: !prev[pillarId]\n    }));\n  };\n\n  const generateStrategicPlan = async () => {\n    if (!objective.trim()) {\n      setError(\"Please describe your objective\");\n      return;\n    }\n\n    setIsGenerating(true);\n    setError(null);\n\n    try {\n      const result = await strategicPlanningService.generatePlan(\n        objective,\n        context,\n        constraints,\n        timeline\n      );\n\n      if (!result || (!result.success && !result.data)) {\n        throw new Error(\"Failed to generate strategic plan\");\n      }\n\n      const plan = result.data || result;\n      setStrategicPlan(plan);\n\n      strategicPlanningService.savePlanToLocalStorage(plan);\n      loadSavedPlans();\n\n      if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n        setExpandedPillars({ 0: true });\n      }\n      \n      // Switch to current plan tab to show the generated plan\n      setActiveTab('current');\n    } catch (error) {\n      console.error(\"Error generating strategic plan:\", error);\n      setError(error.message || \"Failed to generate strategic plan\");\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n\n  const copyPlanToClipboard = () => {\n    if (!strategicPlan) return;\n    \n    const planText = `\nSTRATEGIC PLAN: ${strategicPlan.objective}\n\nEXECUTIVE SUMMARY:\n${strategicPlan.executive_summary}\n\nSTRATEGIC PILLARS:\n${strategicPlan.strategic_pillars?.map((pillar, index) => \n  `${index + 1}. ${pillar.title}\n     ${pillar.description}\n     Actions: ${pillar.actions?.join(', ') || 'Not specified'}\n     Timeline: ${pillar.timeline || 'TBD'}\n     MCP Assignment: ${pillar.mcp || 'Not assigned'}`\n).join('\\n\\n')}\n\nIMPLEMENTATION PHASES:\n${strategicPlan.implementation_phases?.map(phase => \n  `• ${phase.phase}: ${phase.duration} - ${phase.tasks?.join(', ')}`\n).join('\\n')}\n\nSUCCESS METRICS:\n${strategicPlan.success_metrics?.map(metric => `• ${metric}`).join('\\n')}\n    `.trim();\n    \n    navigator.clipboard.writeText(planText);\n  };\n\n  const executeStrategicPlan = async () => {\n    if (!strategicPlan) return;\n\n    setIsExecuting(true);\n    setExecutionStatus({ stage: 'initializing', message: 'Creating campaign...' });\n\n    try {\n      const campaign = strategicPlanningService.generateCampaignFromPlan(strategicPlan);\n      \n      setExecutionStatus({ stage: 'campaign', message: 'Campaign created successfully!' });\n      \n      setTimeout(() => {\n        navigate(`/projects/${selectedProject?.id}/campaign-execution/${campaign.id}`);\n      }, 2000);\n\n    } catch (error) {\n      console.error(\"Error executing strategic plan:\", error);\n      setExecutionStatus({ stage: 'error', message: 'Execution failed: ' + error.message });\n    } finally {\n      setTimeout(() => {\n        setIsExecuting(false);\n        setExecutionStatus(null);\n      }, 3000);\n    }\n  };\n\n  const addContextPill = (pillId) => {\n    const pill = contextPills.find(p => p.id === pillId);\n    if (pill) {\n      const contextText = {\n        'launch': 'Launch our new product to market with maximum impact and strategic positioning',\n        'crisis': 'Respond to crisis situation effectively while protecting reputation and stakeholder trust',\n        'thought': 'Establish thought leadership in our industry through strategic content and positioning',\n        'market': 'Enter new market segment strategically with proper research and positioning',\n        'reputation': 'Build and enhance corporate reputation through strategic communications'\n      };\n      setContext(prev => prev ? `${prev}\\n\\n${contextText[pillId]}` : contextText[pillId]);\n    }\n  };\n\n  const loadSavedPlan = (plan) => {\n    setStrategicPlan(plan);\n    setActiveTab('current'); // Switch to Current Plan tab to show the plan inline\n    setObjective(plan.objective || '');\n    setContext(plan.context || '');\n    setConstraints(plan.constraints || '');\n    setTimeline(plan.timeline || '');\n    \n    // Auto-expand first pillar\n    if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n      setExpandedPillars({ 0: true });\n    }\n  };\n\n  return (\n    <div className=\"strategic-planning-optimized\">\n      {/* Tab Navigation */}\n      <div className=\"strategic-tabs\">\n        {tabs.map(tab => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}\n              onClick={() => setActiveTab(tab.id)}\n            >\n              <Icon className=\"tab-icon\" />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      <div className=\"strategic-content\">\n        {/* Create Plan Tab */}\n        {activeTab === 'create' && (\n          <div className=\"create-plan-tab\">\n            {/* Planning Type Selection */}\n            <div className=\"plan-type-section\">\n              <h3>Planning Type</h3>\n              <div className=\"plan-types-compact\">\n                {planningTypes.map((type) => {\n                  const Icon = type.icon;\n                  return (\n                    <div\n                      key={type.id}\n                      className={`plan-type-compact ${selectedPlanType === type.id ? 'selected' : ''}`}\n                      onClick={() => setSelectedPlanType(type.id)}\n                    >\n                      <Icon className=\"plan-type-icon-small\" />\n                      <div>\n                        <div className=\"plan-type-label\">{type.label}</div>\n                        <div className=\"plan-type-desc\">{type.desc}</div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Form Section */}\n            <div className=\"form-section\">\n              <div className=\"form-group-compact\">\n                <label>\n                  <Target className=\"form-icon-small\" />\n                  Objective\n                </label>\n                <textarea\n                  value={objective}\n                  onChange={(e) => setObjective(e.target.value)}\n                  placeholder=\"What do you want to achieve?\"\n                  rows=\"2\"\n                />\n              </div>\n\n              {/* Context Pills */}\n              <div className=\"context-pills-compact\">\n                <label>Quick Context:</label>\n                <div className=\"pills-row\">\n                  {contextPills.map((pill) => {\n                    const Icon = pill.icon;\n                    return (\n                      <button\n                        key={pill.id}\n                        className=\"context-pill-small\"\n                        onClick={() => addContextPill(pill.id)}\n                        style={{ borderColor: pill.color }}\n                      >\n                        <Icon className=\"pill-icon-small\" style={{ color: pill.color }} />\n                        {pill.label}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              <div className=\"form-row-compact\">\n                <div className=\"form-group-half\">\n                  <label>\n                    <Info className=\"form-icon-small\" />\n                    Context\n                  </label>\n                  <textarea\n                    value={context}\n                    onChange={(e) => setContext(e.target.value)}\n                    placeholder=\"Background, situation...\"\n                    rows=\"2\"\n                  />\n                </div>\n                <div className=\"form-group-half\">\n                  <label>\n                    <AlertCircle className=\"form-icon-small\" />\n                    Constraints\n                  </label>\n                  <textarea\n                    value={constraints}\n                    onChange={(e) => setConstraints(e.target.value)}\n                    placeholder=\"Budget, timeline limits...\"\n                    rows=\"2\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group-compact\">\n                <label>\n                  <Clock className=\"form-icon-small\" />\n                  Timeline\n                </label>\n                <input\n                  type=\"text\"\n                  value={timeline}\n                  onChange={(e) => setTimeline(e.target.value)}\n                  placeholder=\"e.g., 3 months, Q1 2025\"\n                />\n              </div>\n\n              {error && (\n                <div className=\"error-message-compact\">\n                  <AlertCircle className=\"error-icon-small\" />\n                  {error}\n                </div>\n              )}\n\n              <button\n                className=\"generate-btn-compact\"\n                onClick={generateStrategicPlan}\n                disabled={isGenerating}\n              >\n                {isGenerating ? (\n                  <>\n                    <Loader className=\"loading-icon-small\" />\n                    Generating...\n                  </>\n                ) : (\n                  <>\n                    <Sparkles className=\"btn-icon-small\" />\n                    Generate Plan\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Current Plan Tab - Shows generated plan inline */}\n        {activeTab === 'current' && (\n          <div className=\"current-plan-tab\">\n            {strategicPlan ? (\n              <div className=\"current-plan-view\">\n                {/* Plan Header */}\n                <div className=\"plan-header-inline\">\n                  <div className=\"plan-meta-inline\">\n                    <div className=\"ai-badge\">\n                      <Brain size={12} />\n                      AI Generated Plan\n                    </div>\n                    <span className=\"plan-type-badge\">{selectedPlanType}</span>\n                  </div>\n                  <div className=\"plan-actions-inline\">\n                    <button onClick={() => setActiveTab('create')} className=\"back-btn-inline\">\n                      <ArrowRight size={14} />\n                      New Plan\n                    </button>\n                    <button onClick={copyPlanToClipboard} className=\"copy-btn-inline\">\n                      <Copy size={14} />\n                      Copy\n                    </button>\n                    <button onClick={executeStrategicPlan} className=\"execute-btn-inline\" disabled={isExecuting}>\n                      {isExecuting ? (\n                        <>\n                          <Loader className=\"loading-icon-tiny\" />\n                          Executing...\n                        </>\n                      ) : (\n                        <>\n                          <Play size={14} />\n                          Execute\n                        </>\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                {/* Plan Content */}\n                <div className=\"plan-content-inline\">\n                  <h3 className=\"plan-objective\">{strategicPlan.objective}</h3>\n                  \n                  {/* Executive Summary */}\n                  <div className=\"plan-section-inline\">\n                    <h4>\n                      <Target size={16} />\n                      Executive Summary\n                    </h4>\n                    <p className=\"executive-summary-inline\">{strategicPlan.executive_summary}</p>\n                  </div>\n\n                  {/* Strategic Pillars */}\n                  <div className=\"plan-section-inline\">\n                    <h4>\n                      <Lightbulb size={16} />\n                      Strategic Pillars ({strategicPlan.strategic_pillars?.length || 0})\n                    </h4>\n                    <div className=\"pillars-inline\">\n                      {strategicPlan.strategic_pillars?.map((pillar, index) => (\n                        <div key={index} className=\"pillar-inline\">\n                          <div\n                            className=\"pillar-header-inline-toggle\"\n                            onClick={() => togglePillar(index)}\n                          >\n                            <h5>{pillar.title}</h5>\n                            {expandedPillars[index] ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\n                          </div>\n                          \n                          {expandedPillars[index] && (\n                            <div className=\"pillar-details-inline\">\n                              <p>{pillar.description}</p>\n                              {pillar.actions && (\n                                <div className=\"pillar-actions-inline\">\n                                  <strong>Actions:</strong>\n                                  <ul>\n                                    {pillar.actions.map((action, actionIndex) => (\n                                      <li key={actionIndex}>{action}</li>\n                                    ))}\n                                  </ul>\n                                </div>\n                              )}\n                              <div className=\"pillar-meta-inline\">\n                                <span>\n                                  <Clock size={14} />\n                                  {pillar.timeline || 'TBD'}\n                                </span>\n                                <span>\n                                  <Zap size={14} />\n                                  {pillar.mcp || 'Content Generator'}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Success Metrics */}\n                  {strategicPlan.success_metrics && (\n                    <div className=\"plan-section-inline\">\n                      <h4>\n                        <BarChart3 size={16} />\n                        Success Metrics\n                      </h4>\n                      <div className=\"metrics-inline\">\n                        {strategicPlan.success_metrics.map((metric, index) => (\n                          <div key={index} className=\"metric-inline\">\n                            <CheckCircle size={14} />\n                            <span>{metric}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Execution Status */}\n                {executionStatus && (\n                  <div className=\"execution-status-inline\">\n                    <div className=\"status-content-inline\">\n                      {executionStatus.stage === 'error' ? (\n                        <AlertCircle className=\"status-icon-inline error\" />\n                      ) : (\n                        <Loader className=\"status-icon-inline loading\" />\n                      )}\n                      <span>{executionStatus.message}</span>\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"no-plan-state\">\n                <FileText className=\"no-plan-icon\" />\n                <h3>No Strategic Plan Generated</h3>\n                <p>Generate a strategic plan from the Create Plan tab to view it here.</p>\n                <p style={{ fontSize: '0.75rem', color: 'rgba(255, 255, 255, 0.4)', marginBottom: '1.5rem' }}>\n                  Debug: strategicPlan = {strategicPlan ? 'EXISTS' : 'NULL'}\n                </p>\n                <button onClick={() => setActiveTab('create')} className=\"create-plan-btn\">\n                  <Brain size={16} />\n                  Create Plan\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Saved Plans Tab */}\n        {activeTab === 'saved' && (\n          <div className=\"saved-plans-tab\">\n            <h3>Saved Strategic Plans ({savedPlans.length})</h3>\n            {savedPlans.length === 0 ? (\n              <div className=\"empty-state-compact\">\n                <FileText className=\"empty-icon-small\" />\n                <p>No saved plans yet</p>\n                <p style={{ fontSize: '0.75rem', color: 'rgba(255, 255, 255, 0.5)' }}>\n                  Generate a plan from the Create Plan tab to see it here.\n                </p>\n              </div>\n            ) : (\n              <div className=\"plans-grid\">\n                {savedPlans.map((plan) => (\n                  <div key={plan.id} className=\"plan-card\">\n                    <h4>{plan.objective?.substring(0, 50)}...</h4>\n                    <div className=\"plan-meta\">\n                      <span className=\"plan-date\">\n                        {new Date(plan.created_at).toLocaleDateString()}\n                      </span>\n                      <span className=\"plan-type\">Strategic Plan</span>\n                    </div>\n                    <button\n                      onClick={() => {\n                        console.log('Loading saved plan:', plan);\n                        loadSavedPlan(plan);\n                      }}\n                      className=\"load-btn-compact\"\n                    >\n                      <Eye className=\"btn-icon-tiny\" />\n                      View Plan\n                    </button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 'history' && (\n          <div className=\"analytics-tab\">\n            <h3>Plan Analytics</h3>\n            <div className=\"analytics-placeholder\">\n              <BarChart3 className=\"analytics-icon\" />\n              <p>Analytics and performance tracking coming soon</p>\n              <div className=\"analytics-stats\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Plans</span>\n                  <span className=\"stat-value\">{savedPlans.length}</span>\n                </div>\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">This Month</span>\n                  <span className=\"stat-value\">\n                    {savedPlans.filter(plan => \n                      new Date(plan.created_at).getMonth() === new Date().getMonth()\n                    ).length}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}