{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import API_BASE_URL from'../../config/api';import{Bot,Activity,Search,Globe,FileText,Twitter,TrendingUp,AlertCircle,Eye,ChevronDown,ChevronRight,Sparkles,RefreshCw,Filter,BarChart}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AgenticMonitoring=_ref=>{var _stakeholderStrategy$;let{stakeholderStrategy,customSources=[],onFindingsUpdate}=_ref;const[monitoringData,setMonitoringData]=useState({});const[expandedStakeholders,setExpandedStakeholders]=useState({});const[isMonitoring,setIsMonitoring]=useState(false);const[selectedTimeframe,setSelectedTimeframe]=useState('24h');const[showAnalysis,setShowAnalysis]=useState({});const[stakeholderAnalysis,setStakeholderAnalysis]=useState({});const[loadingAnalysis,setLoadingAnalysis]=useState({});// Initialize monitoring data for each stakeholder\nuseEffect(()=>{if(stakeholderStrategy!==null&&stakeholderStrategy!==void 0&&stakeholderStrategy.stakeholderGroups){const initialData={};stakeholderStrategy.stakeholderGroups.forEach(stakeholder=>{const stakeholderId=stakeholder.id||stakeholder.name;if(!monitoringData[stakeholderId]){initialData[stakeholderId]={stakeholder:stakeholder,findings:[],lastUpdated:null,summary:null};}});setMonitoringData(prev=>_objectSpread(_objectSpread({},prev),initialData));}},[stakeholderStrategy]);// Run monitoring for all stakeholders\nconst runMonitoring=async()=>{setIsMonitoring(true);try{const allNewFindings=[];// Simulate monitoring each stakeholder\nfor(const stakeholder of stakeholderStrategy.stakeholderGroups||[]){const stakeholderId=stakeholder.id||stakeholder.name;// Get relevant sources for this stakeholder\nconst stakeholderSources=customSources.filter(source=>source.stakeholderId===stakeholderId&&source.active);// Generate mock findings (in production, this would call actual monitoring APIs)\nconst newFindings=generateMockFindings(stakeholder,stakeholderSources);// Transform findings for Strategic Insights format\nconst transformedFindings=newFindings.map(finding=>_objectSpread(_objectSpread({},finding),{},{stakeholder:stakeholder.name,stakeholderId:stakeholderId,source:finding.source,findings:finding.content,analysis:\"\".concat(finding.sentiment,\" coverage about \").concat(stakeholder.name),createdAt:finding.timestamp}));allNewFindings.push(...transformedFindings);setMonitoringData(prev=>{var _prev$stakeholderId;return _objectSpread(_objectSpread({},prev),{},{[stakeholderId]:_objectSpread(_objectSpread({},prev[stakeholderId]),{},{findings:[...newFindings,...(((_prev$stakeholderId=prev[stakeholderId])===null||_prev$stakeholderId===void 0?void 0:_prev$stakeholderId.findings)||[])].slice(0,50),lastUpdated:new Date()})});});// Small delay between stakeholders\nawait new Promise(resolve=>setTimeout(resolve,500));}// Notify parent component about new findings\nif(onFindingsUpdate&&allNewFindings.length>0){onFindingsUpdate(allNewFindings);}}catch(error){console.error('Monitoring error:',error);}finally{setIsMonitoring(false);}};// Generate mock findings for demonstration\nconst generateMockFindings=(stakeholder,sources)=>{const sentiments=['positive','neutral','negative'];const types=['news','social','regulatory','blog'];const findings=[];const numFindings=Math.floor(Math.random()*5)+2;for(let i=0;i<numFindings;i++){var _sources$Math$floor;findings.push({id:Date.now()+Math.random(),stakeholderId:stakeholder.id||stakeholder.name,type:types[Math.floor(Math.random()*types.length)],source:((_sources$Math$floor=sources[Math.floor(Math.random()*sources.length)])===null||_sources$Math$floor===void 0?void 0:_sources$Math$floor.name)||'Web Search',title:\"\".concat(stakeholder.name,\" mentioned in \").concat(['industry report','news article','social media','analyst note'][Math.floor(Math.random()*4)]),content:\"Recent \".concat(sentiments[Math.floor(Math.random()*sentiments.length)],\" coverage about \").concat(stakeholder.name,\". \").concat(stakeholder.reason||'Key stakeholder for our organization.'),sentiment:sentiments[Math.floor(Math.random()*sentiments.length)],relevance:Math.random()*0.5+0.5,timestamp:new Date(Date.now()-Math.random()*86400000),url:\"https://example.com/article-\".concat(Math.random().toString(36).substr(2,9))});}return findings;};// Get Claude analysis for a stakeholder\nconst getStakeholderAnalysis=async stakeholderId=>{setLoadingAnalysis(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:true}));try{const stakeholderData=monitoringData[stakeholderId];const stakeholder=stakeholderData.stakeholder;const findings=stakeholderData.findings||[];// Prepare context for Claude\nconst context={stakeholderName:stakeholder.name,stakeholderRole:stakeholder.reason||'Key stakeholder',findingsCount:findings.length,sentimentBreakdown:{positive:findings.filter(f=>f.sentiment==='positive').length,neutral:findings.filter(f=>f.sentiment==='neutral').length,negative:findings.filter(f=>f.sentiment==='negative').length},recentFindings:findings.slice(0,5).map(f=>({title:f.title,sentiment:f.sentiment,type:f.type,content:f.content})),topics:stakeholder.topics||[],goals:stakeholder.goals||'',fears:stakeholder.fears||''};const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/analyze\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(localStorage.getItem('token')),'Content-Type':'application/json'},body:JSON.stringify({prompt:\"Analyze the recent monitoring findings for \".concat(stakeholder.name,\" and provide a concise executive summary.\\n\\nContext:\\n- Stakeholder: \").concat(stakeholder.name,\" (\").concat(stakeholder.reason,\")\\n- Total findings: \").concat(findings.length,\"\\n- Sentiment: \").concat(context.sentimentBreakdown.positive,\" positive, \").concat(context.sentimentBreakdown.neutral,\" neutral, \").concat(context.sentimentBreakdown.negative,\" negative\\n\").concat(context.topics.length>0?\"- Topics being tracked: \".concat(context.topics.join(', ')):'',\"\\n\").concat(context.goals?\"- Our goals: \".concat(context.goals):'',\"\\n\").concat(context.fears?\"- Our concerns: \".concat(context.fears):'',\"\\n\\nRecent findings:\\n\").concat(context.recentFindings.map(f=>\"- \".concat(f.title,\" (\").concat(f.sentiment,\"): \").concat(f.content)).join('\\n'),\"\\n\\nPlease analyze these findings with our goals and concerns in mind. Provide:\\n1. A 2-3 sentence executive summary\\n2. Key themes or topics being discussed (especially related to our tracked topics)\\n3. Sentiment trend analysis\\n4. Any risks or opportunities related to our goals/concerns\\n5. Recommended actions (if any)\\n\\nKeep the response concise and actionable.\"),context:'stakeholder_monitoring_analysis'})});if(response.ok){const data=await response.json();setStakeholderAnalysis(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:data.response||data.analysis}));}}catch(error){console.error('Analysis error:',error);// Provide fallback analysis\nsetStakeholderAnalysis(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:generateFallbackAnalysis(monitoringData[stakeholderId])}));}finally{setLoadingAnalysis(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:false}));setShowAnalysis(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:true}));}};// Generate fallback analysis if API fails\nconst generateFallbackAnalysis=stakeholderData=>{var _Object$entries$sort$;const findings=stakeholderData.findings||[];const sentiment=findings.reduce((acc,f)=>{acc[f.sentiment]=(acc[f.sentiment]||0)+1;return acc;},{});const dominantSentiment=((_Object$entries$sort$=Object.entries(sentiment).sort((a,b)=>b[1]-a[1])[0])===null||_Object$entries$sort$===void 0?void 0:_Object$entries$sort$[0])||'neutral';return\"**Executive Summary**\\n\".concat(stakeholderData.stakeholder.name,\" has \").concat(findings.length,\" recent mentions with \").concat(dominantSentiment,\" sentiment overall. \").concat(dominantSentiment==='negative'?'Immediate attention may be required to address concerns.':dominantSentiment==='positive'?'Current coverage is favorable, maintain engagement momentum.':'Sentiment is neutral, consider proactive engagement.',\"\\n\\n**Key Themes**\\n- Recent activity across \").concat([...new Set(findings.map(f=>f.type))].join(', '),\" channels\\n- Primary sources: \").concat([...new Set(findings.map(f=>f.source))].slice(0,3).join(', '),\"\\n\\n**Recommended Actions**\\n\").concat(dominantSentiment==='negative'?'- Review negative mentions and prepare responses\\n- Engage directly with concerned parties':'',\"\\n\").concat(dominantSentiment==='positive'?'- Amplify positive coverage\\n- Thank supportive stakeholders':'',\"\\n\").concat(dominantSentiment==='neutral'?'- Increase engagement to build stronger relationships\\n- Share more updates and success stories':'');};const toggleStakeholder=stakeholderId=>{setExpandedStakeholders(prev=>_objectSpread(_objectSpread({},prev),{},{[stakeholderId]:!prev[stakeholderId]}));};const getSourceIcon=type=>{const icons={news:FileText,social:Twitter,web:Globe,regulatory:FileText,blog:FileText};return icons[type]||Globe;};const getSentimentColor=sentiment=>{return sentiment==='positive'?'#10b981':sentiment==='negative'?'#ef4444':'#6b7280';};if(!(stakeholderStrategy!==null&&stakeholderStrategy!==void 0&&stakeholderStrategy.stakeholderGroups)){return/*#__PURE__*/_jsxs(\"div\",{style:{height:'100%',display:'flex',alignItems:'center',justifyContent:'center',flexDirection:'column',gap:'1rem',color:'#6b7280'},children:[/*#__PURE__*/_jsx(Activity,{size:48,style:{opacity:0.3}}),/*#__PURE__*/_jsx(\"p\",{children:\"Complete the strategy builder to start monitoring\"})]});}return/*#__PURE__*/_jsxs(\"div\",{style:{height:'100%',display:'flex',flexDirection:'column',background:'#f9fafb'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',borderBottom:'1px solid #e5e7eb',padding:'1.5rem',display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,fontSize:'1.5rem',fontWeight:'600',color:'#111827'},children:\"Agentic Monitoring\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0.25rem 0 0 0',fontSize:'0.875rem',color:'#6b7280'},children:\"AI-powered stakeholder intelligence gathering and analysis\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'1rem'},children:[/*#__PURE__*/_jsxs(\"select\",{value:selectedTimeframe,onChange:e=>setSelectedTimeframe(e.target.value),style:{padding:'0.5rem 1rem',border:'1px solid #e5e7eb',borderRadius:'0.375rem',fontSize:'0.875rem',background:'white'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"1h\",children:\"Last hour\"}),/*#__PURE__*/_jsx(\"option\",{value:\"24h\",children:\"Last 24 hours\"}),/*#__PURE__*/_jsx(\"option\",{value:\"7d\",children:\"Last 7 days\"}),/*#__PURE__*/_jsx(\"option\",{value:\"30d\",children:\"Last 30 days\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:runMonitoring,disabled:isMonitoring,style:{padding:'0.75rem 1.5rem',background:isMonitoring?'#e5e7eb':'#6366f1',color:'white',border:'none',borderRadius:'0.5rem',fontWeight:'500',cursor:isMonitoring?'default':'pointer',display:'flex',alignItems:'center',gap:'0.5rem'},children:isMonitoring?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(RefreshCw,{size:16,style:{animation:'spin 1s linear infinite'}}),\"Monitoring...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Bot,{size:16}),\"Run Agent Analysis\"]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',padding:'1rem 1.5rem',borderBottom:'1px solid #e5e7eb',display:'flex',gap:'2rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(Activity,{size:16,style:{color:'#6366f1'}}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.875rem',color:'#6b7280'},children:[\"Total Findings: \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#111827'},children:Object.values(monitoringData).reduce((acc,d)=>{var _d$findings;return acc+(((_d$findings=d.findings)===null||_d$findings===void 0?void 0:_d$findings.length)||0);},0)})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(TrendingUp,{size:16,style:{color:'#10b981'}}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.875rem',color:'#6b7280'},children:[\"Active Sources: \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#111827'},children:customSources.filter(s=>s.active).length})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(BarChart,{size:16,style:{color:'#f59e0b'}}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:'0.875rem',color:'#6b7280'},children:[\"Stakeholders Monitored: \",/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'600',color:'#111827'},children:((_stakeholderStrategy$=stakeholderStrategy.stakeholderGroups)===null||_stakeholderStrategy$===void 0?void 0:_stakeholderStrategy$.length)||0})]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1,overflow:'auto',padding:'1.5rem'},children:/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'1200px',margin:'0 auto'},children:stakeholderStrategy.stakeholderGroups.map(stakeholder=>{const stakeholderId=stakeholder.id||stakeholder.name;const isExpanded=expandedStakeholders[stakeholderId];const data=monitoringData[stakeholderId]||{};const findings=data.findings||[];const hasAnalysis=showAnalysis[stakeholderId]&&stakeholderAnalysis[stakeholderId];return/*#__PURE__*/_jsxs(\"div\",{style:{background:'white',borderRadius:'0.75rem',boxShadow:'0 1px 3px rgba(0,0,0,0.1)',marginBottom:'1rem',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(\"div\",{onClick:()=>toggleStakeholder(stakeholderId),style:{padding:'1.25rem',cursor:'pointer',borderBottom:isExpanded?'1px solid #e5e7eb':'none',display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.75rem'},children:[isExpanded?/*#__PURE__*/_jsx(ChevronDown,{size:20}):/*#__PURE__*/_jsx(ChevronRight,{size:20}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0,fontSize:'1.125rem',fontWeight:'600',color:'#111827'},children:stakeholder.name}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0.25rem 0 0 0',fontSize:'0.875rem',color:'#6b7280'},children:[findings.length,\" findings \\u2022 Last updated: \",data.lastUpdated?new Date(data.lastUpdated).toLocaleTimeString():'Not monitored yet']})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',gap:'1rem'},children:findings.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'0.5rem'},children:[/*#__PURE__*/_jsxs(\"span\",{style:{padding:'0.25rem 0.75rem',background:'#dcfce7',color:'#166534',borderRadius:'1rem',fontSize:'0.75rem',fontWeight:'500'},children:[findings.filter(f=>f.sentiment==='positive').length,\" positive\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{padding:'0.25rem 0.75rem',background:'#f3f4f6',color:'#374151',borderRadius:'1rem',fontSize:'0.75rem',fontWeight:'500'},children:[findings.filter(f=>f.sentiment==='neutral').length,\" neutral\"]}),findings.filter(f=>f.sentiment==='negative').length>0&&/*#__PURE__*/_jsxs(\"span\",{style:{padding:'0.25rem 0.75rem',background:'#fee2e2',color:'#991b1b',borderRadius:'1rem',fontSize:'0.75rem',fontWeight:'500'},children:[findings.filter(f=>f.sentiment==='negative').length,\" negative\"]})]})})]}),isExpanded&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1.25rem'},children:[!hasAnalysis&&findings.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'1rem',background:'#f3f4f6',borderRadius:'0.5rem',marginBottom:'1rem',textAlign:'center'},children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>getStakeholderAnalysis(stakeholderId),disabled:loadingAnalysis[stakeholderId],style:{padding:'0.5rem 1rem',background:'#9333ea',color:'white',border:'none',borderRadius:'0.375rem',fontWeight:'500',cursor:'pointer',display:'inline-flex',alignItems:'center',gap:'0.5rem'},children:[/*#__PURE__*/_jsx(Sparkles,{size:16}),loadingAnalysis[stakeholderId]?'Analyzing...':'Get AI Analysis']})}),hasAnalysis&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem',background:'linear-gradient(to right, #faf5ff, #f3e8ff)',border:'1px solid #e9d5ff',borderRadius:'0.5rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem',marginBottom:'0.75rem'},children:[/*#__PURE__*/_jsx(Sparkles,{size:16,style:{color:'#9333ea'}}),/*#__PURE__*/_jsx(\"h4\",{style:{margin:0,fontSize:'0.875rem',fontWeight:'600',color:'#6b21a8'},children:\"AI Analysis\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.875rem',color:'#4c1d95',lineHeight:'1.6',whiteSpace:'pre-wrap'},children:stakeholderAnalysis[stakeholderId]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'0.75rem'},children:[findings.length===0?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'2rem',color:'#9ca3af'},children:[/*#__PURE__*/_jsx(Search,{size:32,style:{margin:'0 auto 0.5rem',opacity:0.5}}),/*#__PURE__*/_jsx(\"p\",{children:\"No findings yet. Run monitoring to gather intelligence.\"})]}):findings.slice(0,10).map(finding=>{const Icon=getSourceIcon(finding.type);return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem',background:'#fafafa',border:'1px solid #e5e7eb',borderRadius:'0.5rem',display:'flex',gap:'1rem'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'32px',height:'32px',borderRadius:'0.375rem',background:'#f3f4f6',display:'flex',alignItems:'center',justifyContent:'center',flexShrink:0},children:/*#__PURE__*/_jsx(Icon,{size:18,style:{color:'#6b7280'}})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem',marginBottom:'0.25rem'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{margin:0,fontSize:'0.875rem',fontWeight:'500'},children:finding.title}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.75rem',padding:'0.125rem 0.5rem',borderRadius:'0.25rem',background:finding.sentiment==='positive'?'#dcfce7':finding.sentiment==='negative'?'#fee2e2':'#f3f4f6',color:getSentimentColor(finding.sentiment)},children:finding.sentiment})]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0 0 0.5rem 0',fontSize:'0.875rem',color:'#4b5563'},children:finding.content}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'1rem',fontSize:'0.75rem',color:'#9ca3af'},children:[/*#__PURE__*/_jsx(\"span\",{children:finding.source}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u2022\"}),/*#__PURE__*/_jsx(\"span\",{children:new Date(finding.timestamp).toLocaleString()}),/*#__PURE__*/_jsxs(\"a\",{href:finding.url,target:\"_blank\",rel:\"noopener noreferrer\",style:{marginLeft:'auto',color:'#6366f1',textDecoration:'none',display:'flex',alignItems:'center',gap:'0.25rem'},children:[/*#__PURE__*/_jsx(Eye,{size:14}),\"View\"]})]})]})]},finding.id);}),findings.length>10&&/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',padding:'0.75rem',color:'#6b7280',fontSize:'0.875rem'},children:[\"Showing 10 of \",findings.length,\" findings\"]})]})]})]},stakeholderId);})})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:\"\\n        @keyframes spin {\\n          to { transform: rotate(360deg); }\\n        }\\n      \"})]});};export default AgenticMonitoring;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}