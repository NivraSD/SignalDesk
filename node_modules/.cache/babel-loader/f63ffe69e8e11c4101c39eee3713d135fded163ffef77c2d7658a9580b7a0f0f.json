{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Intelligence Orchestrator V3 - Clean Entity-Focused Flow\n * Simplified 3-phase intelligence pipeline optimized for entity tracking\n */class IntelligenceOrchestratorV3{constructor(){var _this$supabaseKey,_this$supabaseKey2;this.supabaseUrl=process.env.REACT_APP_SUPABASE_URL||'https://zskaxjtyuaqazydouifp.supabase.co';this.supabaseKey=process.env.REACT_APP_SUPABASE_ANON_KEY||'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpza2F4anR5dWFxYXp5ZG91aWZwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMjk2MzcsImV4cCI6MjA3MDcwNTYzN30.5PhMVptHk3n-1dTSwGF-GvTwrVM0loovkHGUBDtBOe8';console.log('🔧 V3 Orchestrator initialized:',{url:this.supabaseUrl,hasKey:!!this.supabaseKey,keyLength:(_this$supabaseKey=this.supabaseKey)===null||_this$supabaseKey===void 0?void 0:_this$supabaseKey.length,keyPreview:((_this$supabaseKey2=this.supabaseKey)===null||_this$supabaseKey2===void 0?void 0:_this$supabaseKey2.substring(0,20))+'...'});}/**\n   * Run the complete V3 intelligence flow\n   * Phase 1: Discovery - Identify WHO and WHAT to monitor\n   * Phase 2: Gathering - Track entity actions and trends\n   * Phase 3: Synthesis - Analyze and structure for display\n   */async orchestrate(config){// Extract organization and stakeholders from config\nconst organization=config.organization||config;console.log(\"\\uD83D\\uDE80 V3 Orchestration starting for \".concat(organization.name));try{var _config$competitors,_config$regulators,_config$activists,_config$media_outlets,_config$investors,_discoveryData$statis,_discoveryData$statis2,_intelligence$entity_,_intelligence$entity_2,_intelligence$topic_t,_intelligence$topic_t2,_intelligence$entity_3,_intelligence$entity_4,_intelligence$topic_t3,_intelligence$topic_t4,_intelligence$entity_5,_intelligence$entity_6,_intelligence$topic_t5,_intelligence$topic_t6,_gatheringData$statis,_synthesisData$tabs,_synthesisData$tabs$e,_synthesisData$tabs$e2,_synthesisData$alerts;// PHASE 1: DISCOVERY (Who and what to monitor)\nconsole.log('🔍 Phase 1: Discovery - Identifying entities to monitor');console.log('📡 Discovery Request:',{url:\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-discovery-v3\"),organization:organization,stakeholders:{competitors:((_config$competitors=config.competitors)===null||_config$competitors===void 0?void 0:_config$competitors.length)||0,regulators:((_config$regulators=config.regulators)===null||_config$regulators===void 0?void 0:_config$regulators.length)||0,activists:((_config$activists=config.activists)===null||_config$activists===void 0?void 0:_config$activists.length)||0,media:((_config$media_outlets=config.media_outlets)===null||_config$media_outlets===void 0?void 0:_config$media_outlets.length)||0,investors:((_config$investors=config.investors)===null||_config$investors===void 0?void 0:_config$investors.length)||0},headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey.substring(0,20),\"...\")}});const discoveryResponse=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-discovery-v3\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({organization,// Pass ALL stakeholder data from onboarding\nstakeholders:{competitors:config.competitors||[],regulators:config.regulators||[],activists:config.activists||[],media:config.media_outlets||[],investors:config.investors||[],analysts:config.analysts||[]},monitoring_topics:config.monitoring_topics||[]})});console.log('📡 Discovery Response Status:',discoveryResponse.status);if(!discoveryResponse.ok){const errorText=await discoveryResponse.text();console.error('❌ Discovery Error Response:',errorText);throw new Error(\"Discovery failed: \".concat(discoveryResponse.status,\" - \").concat(errorText));}const discoveryData=await discoveryResponse.json();console.log('📡 Discovery Data:',discoveryData);if(!discoveryData.success){throw new Error(discoveryData.error||'Discovery failed');}console.log('✅ Discovery complete:',{total_entities:((_discoveryData$statis=discoveryData.statistics)===null||_discoveryData$statis===void 0?void 0:_discoveryData$statis.total_entities)||0,total_topics:((_discoveryData$statis2=discoveryData.statistics)===null||_discoveryData$statis2===void 0?void 0:_discoveryData$statis2.total_topics)||0});// PHASE 2: GATHERING (Track entity actions)\nconsole.log('📡 Phase 2: Gathering - Tracking entity actions and trends');console.log('📡 Gathering Request:',{url:\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-gathering-v3\"),entities:discoveryData.entities||discoveryData.discovery||{},organization:organization});const gatheringResponse=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-gathering-v3\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({entities:discoveryData.entities||discoveryData.discovery||{},organization})});console.log('📡 Gathering Response Status:',gatheringResponse.status);if(!gatheringResponse.ok){const errorText=await gatheringResponse.text();console.error('❌ Gathering Error Response:',errorText);throw new Error(\"Gathering failed: \".concat(gatheringResponse.status,\" - \").concat(errorText));}const gatheringData=await gatheringResponse.json();console.log('📡 Gathering Data:',gatheringData);// The gathering response has entity_actions and topic_trends at the root level\nconst intelligence={entity_actions:gatheringData.entity_actions||{all:[]},topic_trends:gatheringData.topic_trends||{all:[]}};console.log('📊 Intelligence to synthesize:',{entity_actions_count:((_intelligence$entity_=intelligence.entity_actions)===null||_intelligence$entity_===void 0?void 0:(_intelligence$entity_2=_intelligence$entity_.all)===null||_intelligence$entity_2===void 0?void 0:_intelligence$entity_2.length)||0,topic_trends_count:((_intelligence$topic_t=intelligence.topic_trends)===null||_intelligence$topic_t===void 0?void 0:(_intelligence$topic_t2=_intelligence$topic_t.all)===null||_intelligence$topic_t2===void 0?void 0:_intelligence$topic_t2.length)||0,has_data:!!((_intelligence$entity_3=intelligence.entity_actions)!==null&&_intelligence$entity_3!==void 0&&(_intelligence$entity_4=_intelligence$entity_3.all)!==null&&_intelligence$entity_4!==void 0&&_intelligence$entity_4.length||(_intelligence$topic_t3=intelligence.topic_trends)!==null&&_intelligence$topic_t3!==void 0&&(_intelligence$topic_t4=_intelligence$topic_t3.all)!==null&&_intelligence$topic_t4!==void 0&&_intelligence$topic_t4.length)});if(!gatheringData.success){throw new Error(gatheringData.error||'Gathering failed');}console.log('✅ Gathering complete:',{actions_captured:((_intelligence$entity_5=intelligence.entity_actions)===null||_intelligence$entity_5===void 0?void 0:(_intelligence$entity_6=_intelligence$entity_5.all)===null||_intelligence$entity_6===void 0?void 0:_intelligence$entity_6.length)||0,topics_monitored:((_intelligence$topic_t5=intelligence.topic_trends)===null||_intelligence$topic_t5===void 0?void 0:(_intelligence$topic_t6=_intelligence$topic_t5.all)===null||_intelligence$topic_t6===void 0?void 0:_intelligence$topic_t6.length)||0,critical_items:((_gatheringData$statis=gatheringData.statistics)===null||_gatheringData$statis===void 0?void 0:_gatheringData$statis.critical_items)||0});// PHASE 3: SYNTHESIS (Analyze with Claude 4)\nconsole.log('🧠 Phase 3: Synthesis - Analyzing intelligence with Claude 4');console.log('📡 Synthesis Request:',{url:\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-synthesis-v3\"),intelligence:intelligence,organization:organization});const synthesisResponse=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/intelligence-synthesis-v3\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({intelligence:intelligence,organization})});console.log('📡 Synthesis Response Status:',synthesisResponse.status);if(!synthesisResponse.ok){const errorText=await synthesisResponse.text();console.error('❌ Synthesis Error Response:',errorText);throw new Error(\"Synthesis failed: \".concat(synthesisResponse.status,\" - \").concat(errorText));}const synthesisData=await synthesisResponse.json();console.log('📡 Synthesis Data:',synthesisData);console.log('🎯 Synthesis Tabs:',synthesisData.tabs?Object.keys(synthesisData.tabs):'No tabs');// Log a sample of each tab's data\nif(synthesisData.tabs){if(synthesisData.tabs.executive){console.log('📊 Executive tab sample:',{headline:synthesisData.tabs.executive.headline,has_highlights:!!synthesisData.tabs.executive.competitive_highlight});}if(synthesisData.tabs.competitive){var _synthesisData$tabs$c;console.log('🎯 Competitive tab sample:',{actions_count:((_synthesisData$tabs$c=synthesisData.tabs.competitive.competitor_actions)===null||_synthesisData$tabs$c===void 0?void 0:_synthesisData$tabs$c.length)||0});}}if(!synthesisData.success){throw new Error(synthesisData.error||'Synthesis failed');}console.log('✅ Synthesis complete:',{has_immediate_actions:((_synthesisData$tabs=synthesisData.tabs)===null||_synthesisData$tabs===void 0?void 0:(_synthesisData$tabs$e=_synthesisData$tabs.executive)===null||_synthesisData$tabs$e===void 0?void 0:(_synthesisData$tabs$e2=_synthesisData$tabs$e.immediate_actions)===null||_synthesisData$tabs$e2===void 0?void 0:_synthesisData$tabs$e2.length)>0,alert_count:((_synthesisData$alerts=synthesisData.alerts)===null||_synthesisData$alerts===void 0?void 0:_synthesisData$alerts.length)||0,tabs:Object.keys(synthesisData.tabs||{})});// Return the complete, formatted intelligence\nreturn _objectSpread(_objectSpread({success:true},synthesisData),{},{metadata:{organization:organization.name,timestamp:new Date().toISOString(),pipeline_version:'v3',phases_completed:{discovery:true,gathering:true,synthesis:true}}});}catch(error){console.error('❌ V3 Orchestration error:',error);console.error('Error Stack:',error.stack);console.error('Error Details:',{message:error.message,supabaseUrl:this.supabaseUrl,hasKey:!!this.supabaseKey,organization:organization});// Return error state with new comprehensive structure\nreturn{success:false,error:error.message,tabs:{executive:{headline:'Intelligence gathering failed',overview:error.message,competitive_highlight:'No data available',market_highlight:'No data available',regulatory_highlight:'No data available',media_highlight:'No data available',immediate_actions:[]},competitive:{competitor_actions:[],competitive_implications:[],pr_strategy:'',key_messages:[],do_not_say:[]},market:{market_trends:[],opportunities:[],market_implications:[],market_narrative:'',thought_leadership:[]},regulatory:{regulatory_developments:[],compliance_requirements:[],regulatory_stance:'',stakeholder_messages:[]},media:{media_coverage:[],social_trends:[],reputation_impact:'',sentiment_trend:'',narrative_risks:[],media_strategy:'',media_outreach:[],social_response:''},forward:{predictions:[],preparation_needed:[],proactive_strategy:'',prepared_statements:[]}},alerts:[],statistics:{entities_tracked:0,actions_captured:0,topics_monitored:0,critical_items:0}};}}}export default new IntelligenceOrchestratorV3();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}