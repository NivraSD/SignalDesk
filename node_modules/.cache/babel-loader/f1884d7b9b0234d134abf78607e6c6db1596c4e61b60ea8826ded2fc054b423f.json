{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Clear all cached intelligence data when switching organizations\n * This prevents stale data from being displayed\n */export const clearAllIntelligenceCache=()=>{console.log('ðŸ§¹ Clearing all intelligence cache...');// Clear all localStorage items related to intelligence\nconst keysToRemove=['signaldesk_intelligence_cache','signaldesk_last_fetch','signaldesk_cached_results','intelligence_data','opportunity_cache','last_intelligence_timestamp'];keysToRemove.forEach(key=>{if(localStorage.getItem(key)){localStorage.removeItem(key);console.log(\"  \\u2705 Removed \".concat(key));}});// Clear session storage too\nsessionStorage.clear();console.log('  âœ… Cleared session storage');// Force page reload to ensure all components get fresh data\nreturn true;};export const switchOrganization=newOrganization=>{console.log('ðŸ”„ Switching to organization:',newOrganization.name);// Clear all caches\nclearAllIntelligenceCache();// Update the profile with new organization\nconst existingProfile=JSON.parse(localStorage.getItem('signaldesk_unified_profile')||'{}');const updatedProfile=_objectSpread(_objectSpread({},existingProfile),{},{organization:newOrganization,// Reset competitors and topics for the new org\ncompetitors:[],monitoring_topics:[],// Add timestamp to force fresh data\nlastUpdated:new Date().toISOString(),cacheInvalidated:true});// Save updated profile\nlocalStorage.setItem('signaldesk_unified_profile',JSON.stringify(updatedProfile));localStorage.setItem('signaldesk_organization',JSON.stringify(newOrganization));// Force a hard reload to ensure all components reinitialize\nwindow.location.reload(true);};export const isDataStale=timestamp=>{if(!timestamp)return true;const dataAge=Date.now()-new Date(timestamp).getTime();const MAX_AGE=5*60*1000;// 5 minutes\nreturn dataAge>MAX_AGE;};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}