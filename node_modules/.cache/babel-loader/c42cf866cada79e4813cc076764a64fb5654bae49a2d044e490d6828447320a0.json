{"ast":null,"code":"// Complete fixed version of api.js\n// File: /frontend/src/services/api.js\nimport API_BASE_URL from'../config/api';console.log(\"API URL:\",API_BASE_URL);// Helper function to get auth headers\nconst getAuthHeaders=()=>{const token=localStorage.getItem(\"token\");return{\"Content-Type\":\"application/json\",Authorization:token?\"Bearer \".concat(token):\"\"};};// Helper function to handle responses\nconst handleResponse=async response=>{const data=await response.json();if(!response.ok){console.error(\"API Error Details:\",data);throw new Error(data.error||data.message||\"API request failed\");}return data;};// Projects API\nexport const getProjects=async()=>{console.log(\"GET request to:\",\"\".concat(API_BASE_URL,\"/projects\"));const response=await fetch(\"\".concat(API_BASE_URL,\"/projects\"),{headers:getAuthHeaders()});return handleResponse(response);};export const getProject=async id=>{console.log(\"GET request to:\",\"\".concat(API_BASE_URL,\"/projects/\").concat(id));const response=await fetch(\"\".concat(API_BASE_URL,\"/projects/\").concat(id),{headers:getAuthHeaders()});return handleResponse(response);};export const createProject=async projectData=>{console.log(\"POST request to:\",\"\".concat(API_BASE_URL,\"/projects\"));console.log(\"Project data:\",projectData);const response=await fetch(\"\".concat(API_BASE_URL,\"/projects\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(projectData)});return handleResponse(response);};export const updateProject=async(id,projectData)=>{console.log(\"PUT request to:\",\"\".concat(API_BASE_URL,\"/projects/\").concat(id));const response=await fetch(\"\".concat(API_BASE_URL,\"/projects/\").concat(id),{method:\"PUT\",headers:getAuthHeaders(),body:JSON.stringify(projectData)});return handleResponse(response);};export const deleteProject=async id=>{console.log(\"DELETE request to:\",\"\".concat(API_BASE_URL,\"/projects/\").concat(id));const response=await fetch(\"\".concat(API_BASE_URL,\"/projects/\").concat(id),{method:\"DELETE\",headers:getAuthHeaders()});return handleResponse(response);};// Todo Management\nexport const getTodos=async()=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos\"),{headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});const data=await response.json();if(!response.ok){throw new Error(data.message||\"Failed to fetch todos\");}return data;}catch(error){console.error(\"Get todos error:\",error);throw error;}};export const createTodo=async todoData=>{try{// Ensure correct field names for database\nconst payload={title:todoData.title,description:todoData.description||\"\",project_id:todoData.project_id||null,priority:todoData.priority||\"medium\",status:todoData.status||\"pending\",due_date:todoData.due_date||null};const response=await fetch(\"\".concat(API_BASE_URL,\"/todos\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))},body:JSON.stringify(payload)});const data=await response.json();if(!response.ok){throw new Error(data.message||\"Failed to create todo\");}return data;}catch(error){console.error(\"Create todo error:\",error);throw error;}};export const updateTodo=async(todoId,updates)=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/\").concat(todoId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))},body:JSON.stringify(updates)});const data=await response.json();if(!response.ok){throw new Error(data.message||\"Failed to update todo\");}return data;}catch(error){console.error(\"Update todo error:\",error);throw error;}};export const deleteTodo=async todoId=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/todos/\").concat(todoId),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))}});const data=await response.json();if(!response.ok){throw new Error(data.message||\"Failed to delete todo\");}return data;}catch(error){console.error(\"Delete todo error:\",error);throw error;}};// MemoryVault API\nexport const getMemoryVaultItems=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/memoryvault/project?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};export const saveToMemoryVault=async(projectId,itemData)=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/memoryvault/project?projectId=\").concat(projectId),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(itemData)});return handleResponse(response);};// Auth API\nexport const login=async(email,password)=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/auth/login\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});return handleResponse(response);};export const register=async(email,password)=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/auth/register\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});return handleResponse(response);};// AI Assistant API\nexport const sendAIMessage=async function(message){let projectId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/chat\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify({message,projectId})});return handleResponse(response);};// Content Generator API\nexport const generateContent=async contentData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/generate\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(contentData)});return handleResponse(response);};// Media List API\nexport const searchReporters=async searchData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/search-reporters\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(searchData)});return handleResponse(response);};export const getMediaContacts=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/contacts?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};export const saveMediaContacts=async contactData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/contacts\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(contactData)});return handleResponse(response);};export const getMediaLists=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/lists?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};export const saveMediaList=async listData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/lists\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(listData)});return handleResponse(response);};export const updateMediaList=async(listId,listData)=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/lists/\").concat(listId),{method:\"PUT\",headers:getAuthHeaders(),body:JSON.stringify(listData)});return handleResponse(response);};export const deleteMediaList=async listId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/lists/\").concat(listId),{method:\"DELETE\",headers:getAuthHeaders()});return handleResponse(response);};export const createMediaContact=async contactData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media-list/contacts\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(contactData)});return handleResponse(response);};// Add these NEW media functions\nexport const searchMultiSource=async searchData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/search-multi-source\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(searchData)});return handleResponse(response);};export const getDatabaseStats=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/database-stats?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};export const analyzeReporter=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/analyze-reporter\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const enrichReporter=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/enrich-reporter\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const bulkImportMedia=async formData=>{const token=localStorage.getItem(\"token\");const response=await fetch(\"\".concat(API_BASE_URL,\"/media/bulk-import\"),{method:\"POST\",headers:{Authorization:token?\"Bearer \".concat(token):\"\"},body:formData});return handleResponse(response);};export const generatePitch=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/generate-pitch\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const aiDiscoverReporters=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/media/ai-discover-reporters\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};// Campaign Intelligence API\nexport const getCampaignInsights=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/campaign/insights/\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};// Monitoring API\nexport const getMonitoringData=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/sentiment?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};// Save monitoring configuration\nexport const saveMonitoringConfig=async config=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/config\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify(config)});return handleResponse(response);};// Get monitoring configuration\nexport const getMonitoringConfig=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/config\"),{headers:getAuthHeaders()});return handleResponse(response);};// Analyze sentiment for a single mention\nexport const analyzeSentiment=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/analyze-sentiment\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};// Analyze batch of mentions\nexport const analyzeBatch=async mentions=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/analyze-batch\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify({mentions})});return handleResponse(response);};// Fetch RSS feeds\nexport const fetchRSSFeeds=async keywords=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/monitoring/fetch-rss\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify({keywords})});return handleResponse(response);};// Crisis API\nexport const getCrisisPlans=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/plans?projectId=\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};// Reports API\nexport const generateReport=async reportData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/reports/generate\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(reportData)});return handleResponse(response);};// Crisis Management Methods\nexport const generateCrisisPlan=async planData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/generate-plan\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(planData)});return handleResponse(response);};export const getCrisisPlan=async projectId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/plan/\").concat(projectId),{headers:getAuthHeaders()});return handleResponse(response);};export const crisisAdvisor=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/advisor\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const draftCrisisResponse=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/draft-response\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const saveCrisisEvent=async data=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/crisis/save-event\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};// Content History\nexport const getContentHistory=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/history\"),{headers:getAuthHeaders()});return handleResponse(response);};// Content Templates\nexport const getContentTemplates=async()=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/templates\"),{headers:getAuthHeaders()});return handleResponse(response);};// Save Content\nexport const saveContent=async contentData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/save\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(contentData)});return handleResponse(response);};// AI Content Generation\nexport const generateAIContent=async contentData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/ai-generate\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(contentData)});return handleResponse(response);};// Upload Templates\nexport const uploadTemplates=async formData=>{const token=localStorage.getItem(\"token\");const response=await fetch(\"\".concat(API_BASE_URL,\"/content/templates/upload\"),{method:\"POST\",headers:{Authorization:token?\"Bearer \".concat(token):\"\"// Don't set Content-Type for FormData\n},body:formData});return handleResponse(response);};// Delete Template\nexport const deleteTemplate=async templateId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/templates/\").concat(templateId),{method:\"DELETE\",headers:getAuthHeaders()});return handleResponse(response);};// Export Content\nexport const exportContent=async exportData=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/content/export\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(exportData)});return handleResponse(response);};// Analyze Content\nexport const analyzeContent=async analysisData=>{// Use the AI generate endpoint with analyze type\nconst response=await fetch(\"\".concat(API_BASE_URL,\"/content/ai-generate\"),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify({prompt:\"Analyze this content:\\n\\n\".concat(analysisData.content,\"\\n\\nContent Type: \").concat(analysisData.contentType,\"\\nTone: \").concat(analysisData.tone,\"\\nTarget Audience: \").concat(analysisData.targetAudience,\"\\n\\nProvide a comprehensive analysis including:\\n1. Strengths and weaknesses\\n2. Tone effectiveness\\n3. Audience appropriateness\\n4. Suggestions for improvement\\n5. Overall quality score (1-10)\"),type:\"analysis\",tone:\"analytical\",context:analysisData.context})});const data=await handleResponse(response);return{analysis:data.content||data.response||data};};// Generic HTTP methods\nexport const get=async endpoint=>{console.log(\"GET request to:\",\"\".concat(API_BASE_URL).concat(endpoint));const response=await fetch(\"\".concat(API_BASE_URL).concat(endpoint),{headers:getAuthHeaders()});return handleResponse(response);};export const post=async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log(\"POST request to:\",\"\".concat(API_BASE_URL).concat(endpoint));const response=await fetch(\"\".concat(API_BASE_URL).concat(endpoint),{method:\"POST\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};export const put=async function(endpoint){let data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};console.log(\"PUT request to:\",\"\".concat(API_BASE_URL).concat(endpoint));const response=await fetch(\"\".concat(API_BASE_URL).concat(endpoint),{method:\"PUT\",headers:getAuthHeaders(),body:JSON.stringify(data)});return handleResponse(response);};// Using 'del' instead of 'delete' since delete is a reserved word\nexport const del=async endpoint=>{console.log(\"DELETE request to:\",\"\".concat(API_BASE_URL).concat(endpoint));const response=await fetch(\"\".concat(API_BASE_URL).concat(endpoint),{method:\"DELETE\",headers:getAuthHeaders()});return handleResponse(response);};export default{// Generic HTTP methods\nget,post,put,delete:del,// Map 'delete' to 'del' function\n// Default export with all methods\n// Projects\ngetProjects,getProject,createProject,updateProject,deleteProject,// Todos\ngetTodos,createTodo,updateTodo,deleteTodo,// MemoryVault\ngetMemoryVaultItems,saveToMemoryVault,// Auth\nlogin,register,// AI\nsendAIMessage,// Content\ngenerateContent,generateAIContent,getContentHistory,saveContent,analyzeContent,uploadTemplates,deleteTemplate,exportContent,getContentTemplates,// Media List\ngetMediaContacts,createMediaContact,// Campaign\ngetCampaignInsights,// Monitoring\ngetMonitoringData,saveMonitoringConfig,getMonitoringConfig,analyzeSentiment,analyzeBatch,fetchRSSFeeds,// Crisis\ngetCrisisPlans,generateCrisisPlan,getCrisisPlan,crisisAdvisor,draftCrisisResponse,saveCrisisEvent,// Reports\ngenerateReport,// Media List - UPDATE this section\ngetMediaContacts,saveMediaContacts,getMediaLists,saveMediaList,updateMediaList,deleteMediaList,createMediaContact,searchReporters,searchMultiSource,getDatabaseStats,analyzeReporter,enrichReporter,bulkImportMedia,generatePitch,aiDiscoverReporters};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}