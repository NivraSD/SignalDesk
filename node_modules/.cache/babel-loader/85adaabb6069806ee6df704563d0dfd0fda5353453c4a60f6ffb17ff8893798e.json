{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/RailwayDraggable.js\",\n  _s = $RefreshSig$();\n// RailwayDraggable.js - Railway-style with draggable and resizable components\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useProject } from '../contexts/ProjectContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport ContentGeneratorModule from './ContentGeneratorModule';\nimport StrategicPlanningOptimized from './StrategicPlanningOptimized';\nimport OpportunityEngine from './OpportunityEngine';\nimport NivStrategicOrchestrator from './NivStrategicOrchestrator';\nimport supabaseApiService from '../services/supabaseApiService';\nimport { Bot, Brain, FileText, Users, TrendingUp, AlertTriangle, BarChart3, Archive, Send, ChevronLeft, ChevronRight, X, Sparkles, MessageSquare, Shield, Target, Menu, GripVertical, Maximize2, Minimize2, Move, GitBranch, Activity, Database, Circle, Square, ArrowLeft, Clock, Zap, Globe, Settings, User, Plus, ChevronDown, LogOut, Folder, StickyNote, RefreshCw } from 'lucide-react';\nimport './RailwayDraggable.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RailwayDraggable = () => {\n  _s();\n  var _positions$aiAssista, _positions$aiAssista2, _sizes$aiAssistant, _sizes$aiAssistant2, _positions$activityL, _positions$activityL2, _sizes$activityList, _sizes$activityList2, _positions$featureVi, _positions$featureVi2, _sizes$featureView, _sizes$featureView2, _positions$notepad, _positions$notepad2, _sizes$notepad, _sizes$notepad2;\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    activeProject,\n    projects,\n    fetchProjects,\n    selectProject\n  } = useProject();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // View state - either showing activity list or expanded feature\n  const [currentView, setCurrentView] = useState('activity'); // 'activity' or 'feature'\n  const [selectedFeature, setSelectedFeature] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  // AI Assistant state - PRESERVING ALL FUNCTIONALITY\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditingMode, setIsEditingMode] = useState(false);\n  const [aiPanelOpen, setAiPanelOpen] = useState(true);\n\n  // Content Generator state - PRESERVING ALL FUNCTIONALITY\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [currentContentType, setCurrentContentType] = useState(null);\n  const [selectedContentTypeId, setSelectedContentTypeId] = useState(null);\n  const [selectedContentTypeName, setSelectedContentTypeName] = useState(null);\n\n  // NEW: Niv real-time integration state\n  const [nivGeneratedData, setNivGeneratedData] = useState(null);\n  const [isNivGenerating, setIsNivGenerating] = useState(false);\n\n  // Strategic Planning state\n  const [strategicPlanData, setStrategicPlanData] = useState(null);\n\n  // Drag and resize state\n  const [draggedElement, setDraggedElement] = useState(null);\n  const [resizingElement, setResizingElement] = useState(null);\n  const [positions, setPositions] = useState({});\n  const [sizes, setSizes] = useState({});\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Profile dropdown state\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [showProjectMenu, setShowProjectMenu] = useState(false);\n  const [showNewProjectModal, setShowNewProjectModal] = useState(false);\n  const [newProjectName, setNewProjectName] = useState('');\n  const [showNotepad, setShowNotepad] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [notepadMinimized, setNotepadMinimized] = useState(false);\n\n  // Session ID for conversation continuity - v3 force update\n  const [sessionId] = useState(() => `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);\n\n  // Feature/Activity definitions\n  const activities = [{\n    id: 'content-generator',\n    name: 'Content Generator',\n    icon: FileText,\n    color: '#8b5cf6',\n    description: 'AI-powered content creation',\n    status: 'ready',\n    stats: '12 pieces created today',\n    component: ContentGeneratorModule,\n    lastUsed: '2 minutes ago'\n  }, {\n    id: 'media-intelligence',\n    name: 'Media Intelligence',\n    icon: Users,\n    color: '#10b981',\n    description: 'Journalist discovery & outreach',\n    status: 'ready',\n    stats: '234 journalists tracked',\n    path: `/projects/${projectId}/media-list`,\n    lastUsed: '1 hour ago'\n  }, {\n    id: 'strategic-planning',\n    name: 'Strategic Planning',\n    icon: Brain,\n    color: '#f59e0b',\n    description: 'Evidence-based strategic plans',\n    status: 'ready',\n    stats: 'AI-powered planning',\n    component: StrategicPlanningOptimized,\n    lastUsed: '3 hours ago'\n  }, {\n    id: 'opportunity-engine',\n    name: 'Opportunity Engine',\n    icon: Zap,\n    color: '#f59e0b',\n    description: 'AI-powered PR opportunity discovery',\n    status: 'ready',\n    stats: '5 active opportunities',\n    component: 'OpportunityEngine',\n    lastUsed: 'Just now'\n  }, {\n    id: 'memory-vault',\n    name: 'Memory Vault',\n    icon: Database,\n    color: '#6366f1',\n    description: 'Project knowledge base',\n    status: 'ready',\n    stats: '1,234 items stored',\n    path: `/projects/${projectId}`,\n    lastUsed: '5 minutes ago'\n  }, {\n    id: 'stakeholder-monitoring',\n    name: 'Stakeholder Intelligence',\n    icon: Activity,\n    color: '#00bcd4',\n    description: 'Monitor stakeholders & gather intelligence',\n    status: 'active',\n    stats: 'Live monitoring active',\n    path: `/projects/${projectId}/stakeholder-intelligence`,\n    lastUsed: 'Active now'\n  }, {\n    id: 'crisis-command',\n    name: 'Crisis Command',\n    icon: AlertTriangle,\n    color: '#ef4444',\n    description: 'Crisis management center',\n    status: 'ready',\n    stats: 'No active crises',\n    path: `/projects/${projectId}/crisis-command`,\n    lastUsed: '2 days ago'\n  }, {\n    id: 'reports',\n    name: 'Reports & Analytics',\n    icon: BarChart3,\n    color: '#14b8a6',\n    description: 'Performance metrics & insights',\n    status: 'ready',\n    stats: '5 reports generated',\n    path: `/projects/${projectId}/reports`,\n    lastUsed: '6 hours ago'\n  }];\n\n  // Initialize positions and sizes\n  useEffect(() => {\n    // Load saved positions and sizes or use defaults\n    const savedPositions = localStorage.getItem('railwayDragPositions');\n    const savedSizes = localStorage.getItem('railwayDragSizes');\n    setPositions(savedPositions ? JSON.parse(savedPositions) : {\n      'ai-assistant': {\n        x: 20,\n        y: 80\n      },\n      'activity-list': {\n        x: 420,\n        y: 80\n      },\n      'feature-view': {\n        x: 420,\n        y: 80\n      },\n      'notepad': {\n        x: 940,\n        y: 80\n      }\n    });\n    setSizes(savedSizes ? JSON.parse(savedSizes) : {\n      'ai-assistant': {\n        width: 400,\n        height: 400\n      },\n      'activity-list': {\n        width: 500,\n        height: 400\n      },\n      'feature-view': {\n        width: 800,\n        height: 600\n      },\n      'notepad': {\n        width: 350,\n        height: 400\n      }\n    });\n\n    // Load projects\n    fetchProjects();\n  }, []);\n\n  // Initialize AI Assistant\n  useEffect(() => {\n    setMessages([{\n      id: Date.now(),\n      type: 'assistant',\n      content: \"Welcome to SignalDesk! I'm your AI assistant. I can help you create content, find journalists, plan campaigns, and more. Just tell me what you need - for example, 'I need to write a press release' or 'Find tech journalists'. You can also click any feature from the list to get started.\",\n      timestamp: new Date()\n    }]);\n  }, []);\n\n  // Save positions and sizes\n  const saveLayout = useCallback(() => {\n    localStorage.setItem('railwayDragPositions', JSON.stringify(positions));\n    localStorage.setItem('railwayDragSizes', JSON.stringify(sizes));\n  }, [positions, sizes]);\n\n  // Handle drag start\n  const handleDragStart = (e, elementId) => {\n    e.preventDefault();\n    setDraggedElement(elementId);\n    const rect = e.currentTarget.parentElement.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle drag move\n  const handleDragMove = useCallback(e => {\n    if (!draggedElement) return;\n    const newPosition = {\n      x: Math.max(0, e.clientX - dragOffset.x),\n      y: Math.max(60, e.clientY - dragOffset.y) // Keep below header\n    };\n    setPositions(prev => ({\n      ...prev,\n      [draggedElement]: newPosition\n    }));\n  }, [draggedElement, dragOffset]);\n\n  // Handle drag end\n  const handleDragEnd = useCallback(() => {\n    if (draggedElement) {\n      saveLayout();\n    }\n    setDraggedElement(null);\n  }, [draggedElement, saveLayout]);\n\n  // Handle resize start\n  const handleResizeStart = (e, elementId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setResizingElement(elementId);\n  };\n\n  // Handle resize move\n  const handleResizeMove = useCallback(e => {\n    if (!resizingElement) return;\n    const element = document.getElementById(resizingElement);\n    if (!element) return;\n    const rect = element.getBoundingClientRect();\n    const newSize = {\n      width: Math.max(300, e.clientX - rect.left),\n      height: Math.max(300, e.clientY - rect.top)\n    };\n    setSizes(prev => ({\n      ...prev,\n      [resizingElement]: newSize\n    }));\n  }, [resizingElement]);\n\n  // Handle resize end\n  const handleResizeEnd = useCallback(() => {\n    if (resizingElement) {\n      saveLayout();\n    }\n    setResizingElement(null);\n  }, [resizingElement, saveLayout]);\n\n  // Mouse event handlers\n  useEffect(() => {\n    if (draggedElement) {\n      window.addEventListener('mousemove', handleDragMove);\n      window.addEventListener('mouseup', handleDragEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleDragMove);\n        window.removeEventListener('mouseup', handleDragEnd);\n      };\n    }\n  }, [draggedElement, handleDragMove, handleDragEnd]);\n  useEffect(() => {\n    if (resizingElement) {\n      window.addEventListener('mousemove', handleResizeMove);\n      window.addEventListener('mouseup', handleResizeEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleResizeMove);\n        window.removeEventListener('mouseup', handleResizeEnd);\n      };\n    }\n  }, [resizingElement, handleResizeMove, handleResizeEnd]);\n\n  // Handle activity/feature selection\n  const handleActivityClick = activity => {\n    if (activity.path && !activity.component) {\n      // External route - navigate away\n      navigate(activity.path);\n      return;\n    }\n\n    // Expand the feature in place\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setSelectedFeature(activity);\n      setCurrentView('feature');\n      setIsTransitioning(false);\n\n      // AI context handled by backend now\n      // adaptiveAI.setActiveFeature(activity.id);\n    }, 300);\n  };\n\n  // Handle back to activity list\n  const handleBackToActivities = () => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentView('activity');\n      setSelectedFeature(null);\n      setIsEditingMode(false);\n      setGeneratedContent('');\n      setIsTransitioning(false);\n\n      // AI reset handled by backend now\n      // adaptiveAI.reset();\n    }, 300);\n  };\n\n  // Handle project creation\n  const handleCreateProject = async () => {\n    if (!newProjectName.trim()) return;\n    try {\n      const newProject = await supabaseApiService.createProject({\n        name: newProjectName,\n        user_id: user === null || user === void 0 ? void 0 : user.id\n      });\n      if (newProject) {\n        await fetchProjects();\n        selectProject(newProject);\n        navigate(`/projects/${newProject.id}`);\n        setShowNewProjectModal(false);\n        setNewProjectName('');\n      }\n    } catch (error) {\n      console.error('Failed to create project:', error);\n    }\n  };\n\n  // Handle project switch\n  const handleSwitchProject = project => {\n    selectProject(project);\n    navigate(`/projects/${project.id}`);\n    setShowProjectMenu(false);\n  };\n\n  // Notes functionality\n  useEffect(() => {\n    // Load notes from localStorage\n    const savedNotes = localStorage.getItem(`notes-${projectId}`);\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, [projectId]);\n  const addNote = () => {\n    if (!newNote.trim()) return;\n    const note = {\n      id: Date.now(),\n      text: newNote.trim(),\n      timestamp: new Date().toISOString()\n    };\n    const updatedNotes = [...notes, note];\n    setNotes(updatedNotes);\n    localStorage.setItem(`notes-${projectId}`, JSON.stringify(updatedNotes));\n    setNewNote('');\n  };\n  const deleteNote = noteId => {\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    setNotes(updatedNotes);\n    localStorage.setItem(`notes-${projectId}`, JSON.stringify(updatedNotes));\n  };\n\n  // CRITICAL: Handle messages from Content Generator - EXACT RESTORATION\n  const handleContentGeneratorMessage = msg => {\n    console.log('RailwayDraggable: Received message from ContentGenerator:', msg);\n    if (msg.type === 'edit_request') {\n      setIsEditingMode(true);\n      handleEditRequest(msg);\n    } else if (msg.type === 'content_saved') {\n      // Content was saved - reset handled by backend\n      // adaptiveAI.reset();\n      const successMsg = {\n        id: `save-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        type: 'system',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, successMsg]);\n    } else if (msg.type === 'user' && msg.content) {\n      // When user selects a content type in Content Generator, trigger Niv\n      const userMsg = {\n        id: `content-user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        type: 'user',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMsg]);\n\n      // Store the content type for future use\n      if (msg.contentTypeId) {\n        setSelectedContentTypeId(msg.contentTypeId);\n        setSelectedContentTypeName(msg.contentTypeName);\n      }\n\n      // Open AI Assistant panel to show Niv is working on it\n      setAiPanelOpen(true);\n\n      // Trigger Niv's content generation flow\n      // This will be handled by AdaptiveNivAssistantEnhanced which is watching messages\n      // Pass content type info if available from Content Generator\n      sendMessage(msg.content, msg.contentTypeId, msg.contentTypeName);\n    }\n  };\n\n  // CRITICAL: Handle edit requests - EXACT RESTORATION\n  const handleEditRequest = async request => {\n    const {\n      content: editPrompt,\n      currentContent,\n      metadata\n    } = request;\n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: `Please edit this content: \"${editPrompt}\"`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setLoading(true);\n    try {\n      const data = await supabaseApiService.sendClaudeMessage(`Edit the following content based on this request: \"${editPrompt}\"\\n\\nCurrent content:\\n${currentContent}`, {\n        mode: 'content',\n        sessionId: sessionId,\n        folder: 'content-generator',\n        editing: true,\n        contentType: metadata === null || metadata === void 0 ? void 0 : metadata.contentType,\n        tone: metadata === null || metadata === void 0 ? void 0 : metadata.tone\n      });\n      if (data.success && data.response) {\n        // Update content directly in the Content Generator feature (not in chat)\n        setGeneratedContent(data.response);\n\n        // Show confirmation message in chat instead of the edited content\n        const confirmMsg = {\n          id: Date.now(),\n          type: 'system',\n          content: '✅ Content updated successfully! You can see the changes in the Content Generator.',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, confirmMsg]);\n      }\n    } catch (error) {\n      console.error('Error processing edit:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to process edit request. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // RESTART FUNCTIONALITY - Reset all states and return to activity view\n  const restartProject = () => {\n    console.log('🔄 Restarting project page...');\n\n    // Reset view states\n    setCurrentView('activity');\n    setSelectedFeature(null);\n    setIsTransitioning(false);\n\n    // Reset AI Assistant states\n    setMessages([]);\n    setMessage('');\n    setLoading(false);\n    setIsEditingMode(false);\n\n    // Reset Content Generator states\n    setGeneratedContent('');\n    setCurrentContentType(null);\n    setSelectedContentTypeId(null);\n    setSelectedContentTypeName(null);\n\n    // Reset drag/resize states\n    setDraggedElement(null);\n    setResizingElement(null);\n    setPositions({});\n    setSizes({});\n\n    // Reset modals and dropdowns\n    setShowProfileMenu(false);\n    setShowProjectMenu(false);\n    setShowNewProjectModal(false);\n    setShowNotepad(false);\n\n    // Add restart confirmation message\n    const restartMsg = {\n      id: `restart-${Date.now()}`,\n      type: 'system',\n      content: '🔄 Project page has been restarted. All states have been reset.',\n      timestamp: new Date()\n    };\n    setTimeout(() => {\n      setMessages([restartMsg]);\n    }, 100);\n    console.log('✅ Project restart complete');\n  };\n\n  // FIXED AI message handling - direct backend call, no local processing\n  const sendMessage = async (text, contentTypeId = null, contentTypeName = null) => {\n    if (!(text !== null && text !== void 0 && text.trim())) return;\n    console.log('[FIXED] Sending message:', text);\n\n    // Use stored content type if not provided\n    const typeId = contentTypeId || selectedContentTypeId;\n    const typeName = contentTypeName || selectedContentTypeName;\n\n    // Check if this is a content-related message\n    const isContentMessage = text.toLowerCase().includes('thought leadership') || text.toLowerCase().includes('press release') || text.toLowerCase().includes('social media') || text.toLowerCase().includes('blog') || text.toLowerCase().includes('email') || (selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) === 'content-generator';\n\n    // If it's a content message, ensure Content Generator is open\n    if (isContentMessage && (selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) !== 'content-generator') {\n      const contentGen = activities.find(a => a.id === 'content-generator');\n      handleActivityClick(contentGen);\n    }\n    setLoading(true);\n    try {\n      const hasContent = !!(generatedContent && generatedContent.trim());\n      const data = await supabaseApiService.sendClaudeMessage(text, {\n        mode: isContentMessage ? 'content' : 'general',\n        sessionId: sessionId,\n        folder: isContentMessage ? 'content-generator' : 'general',\n        contentTypeId: typeId,\n        contentTypeName: typeName || text,\n        // Use message as content type if not specified\n        hasGeneratedContent: hasContent,\n        currentContent: generatedContent\n      });\n      if (data.success && data.response) {\n        if (data.isGeneratedContent) {\n          // Auto-open Content Generator if not already open\n          if ((selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) !== 'content-generator') {\n            const contentGen = activities.find(a => a.id === 'content-generator');\n            handleActivityClick(contentGen);\n          }\n          setGeneratedContent(data.response);\n          detectContentType(data.response);\n          const successMsg = {\n            id: Date.now(),\n            type: 'system',\n            content: '✨ Content generated successfully! You can see it in the Content Generator panel.',\n            timestamp: new Date()\n          };\n          setMessages(prev => [...prev, successMsg]);\n        } else {\n          const aiMsg = {\n            id: Date.now(),\n            type: 'assistant',\n            content: data.response,\n            timestamp: new Date()\n          };\n          setMessages(prev => [...prev, aiMsg]);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to send message. Please check your connection.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Generate content directly in the Content Generator feature\n  const generateContentInFeature = async params => {\n    // First, ensure Content Generator is open\n    if ((selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) !== 'content-generator') {\n      const contentGen = activities.find(a => a.id === 'content-generator');\n      handleActivityClick(contentGen);\n\n      // Wait for transition\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n    setLoading(true);\n    try {\n      // Build prompt from guided flow context\n      const prompt = `Create a ${params.type} about ${params.topic} for ${params.audience} audience with a ${params.tone} tone. ${params.keyPoints || ''}`;\n      const data = await supabaseApiService.sendClaudeMessage(prompt, {\n        mode: 'content',\n        sessionId: sessionId,\n        folder: 'content-generator',\n        contentType: params.type,\n        contentTypeId: params.type,\n        // CRITICAL: Backend expects contentTypeId\n        contentTypeName: params.type,\n        generateDirectly: true,\n        userRequestedGeneration: true\n      });\n      if (data.success && data.response) {\n        // Set the generated content directly\n        setGeneratedContent(data.response);\n        setCurrentContentType(params.type);\n\n        // Notify user in chat\n        const successMsg = {\n          id: Date.now(),\n          type: 'system',\n          content: '✨ Content generated successfully! You can see it in the Content Generator. Feel free to ask me to make any edits.',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, successMsg]);\n      }\n    } catch (error) {\n      console.error('Error generating content:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n    const userMsg = {\n      id: `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    sendMessage(message);\n    setMessage('');\n\n    // Keep focus on input\n    setTimeout(() => {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n    }, 50);\n  };\n\n  // Check if response is actual generated content\n  const isActualGeneratedContent = text => {\n    if (!text || text.length < 100) return false;\n    const indicators = ['FOR IMMEDIATE RELEASE', 'Dear ', 'Subject:', 'Q:', 'Question:', '#', 'We are pleased'];\n    return indicators.some(indicator => text.includes(indicator));\n  };\n\n  // Detect content type\n  const detectContentType = text => {\n    if (text.includes('FOR IMMEDIATE RELEASE')) {\n      setCurrentContentType('press-release');\n    } else if (text.includes('Q:') || text.includes('Question:')) {\n      setCurrentContentType('qa-doc');\n    } else if (text.includes('#')) {\n      setCurrentContentType('social-post');\n    }\n  };\n\n  // Update content from Content Generator\n  const handleContentUpdate = newContent => {\n    setGeneratedContent(newContent);\n    if (newContent && !isEditingMode) {\n      setIsEditingMode(false);\n    }\n  };\n\n  // Auto-scroll messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Auto-resize textarea and maintain focus\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n      inputRef.current.style.height = Math.min(inputRef.current.scrollHeight, 120) + 'px';\n    }\n  }, [message]);\n\n  // Maintain focus on input after messages\n  useEffect(() => {\n    if (inputRef.current && !loading) {\n      // Small delay to ensure DOM is updated\n      setTimeout(() => {\n        var _inputRef$current2;\n        (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n      }, 100);\n    }\n  }, [messages, loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"railway-draggable-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"railway-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signaldesk-brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brand-text\",\n            children: \"SignalDesk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '12px',\n              color: '#8b5cf6',\n              fontWeight: 'bold',\n              marginLeft: '8px'\n            },\n            children: \"v3.2-FIXED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"project-dropdown-button\",\n            onClick: () => setShowProjectMenu(!showProjectMenu),\n            children: [/*#__PURE__*/_jsxDEV(Folder, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (activeProject === null || activeProject === void 0 ? void 0 : activeProject.name) || 'Select Project'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), showProjectMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu project-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 770,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '4px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"new-project-button\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    fetchProjects();\n                  },\n                  title: \"Refresh projects\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"14\",\n                    height: \"14\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M23 4v6h-6M1 20v-6h6M3.51 9a9 9 0 0114.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0020.49 15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 781,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"new-project-button\",\n                  onClick: () => {\n                    setShowProjectMenu(false);\n                    setShowNewProjectModal(true);\n                  },\n                  title: \"New project\",\n                  children: /*#__PURE__*/_jsxDEV(Plus, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 17\n            }, this), projects === null || projects === void 0 ? void 0 : projects.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `dropdown-item ${project.id === (activeProject === null || activeProject === void 0 ? void 0 : activeProject.id) ? 'active' : ''}`,\n              onClick: () => handleSwitchProject(project),\n              children: [/*#__PURE__*/_jsxDEV(Folder, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 21\n              }, this), project.id === (activeProject === null || activeProject === void 0 ? void 0 : activeProject.id) && /*#__PURE__*/_jsxDEV(Circle, {\n                size: 8,\n                fill: \"currentColor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 58\n              }, this)]\n            }, project.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"environment-badge\",\n          children: \"Production\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"header-button restart-button\",\n          onClick: restartProject,\n          title: \"Restart project page and reset all states\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this), \"Restart\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `header-button ${showNotepad ? 'active' : ''}`,\n          onClick: () => setShowNotepad(!showNotepad),\n          children: [/*#__PURE__*/_jsxDEV(StickyNote, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), \"Notes\", notes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notes-badge\",\n            children: notes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"header-button\",\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), \"Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile-button\",\n            onClick: () => setShowProfileMenu(!showProfileMenu),\n            children: [/*#__PURE__*/_jsxDEV(User, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (user === null || user === void 0 ? void 0 : user.email) || 'User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this), showProfileMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu profile-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-info\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profile-name\",\n                  children: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.email)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"profile-email\",\n                  children: user === null || user === void 0 ? void 0 : user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              children: [/*#__PURE__*/_jsxDEV(Settings, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this), \"Account Settings\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => {\n                logout();\n                navigate('/login');\n              },\n              children: [/*#__PURE__*/_jsxDEV(LogOut, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 19\n              }, this), \"Sign Out\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ai-assistant\",\n      className: \"draggable-panel ai-assistant-square\",\n      style: {\n        left: `${((_positions$aiAssista = positions['ai-assistant']) === null || _positions$aiAssista === void 0 ? void 0 : _positions$aiAssista.x) || 20}px`,\n        top: `${((_positions$aiAssista2 = positions['ai-assistant']) === null || _positions$aiAssista2 === void 0 ? void 0 : _positions$aiAssista2.y) || 80}px`,\n        width: `${((_sizes$aiAssistant = sizes['ai-assistant']) === null || _sizes$aiAssistant === void 0 ? void 0 : _sizes$aiAssistant.width) || 400}px`,\n        height: `${((_sizes$aiAssistant2 = sizes['ai-assistant']) === null || _sizes$aiAssistant2 === void 0 ? void 0 : _sizes$aiAssistant2.height) || 400}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        onMouseDown: e => handleDragStart(e, 'ai-assistant'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-title\",\n          children: [/*#__PURE__*/_jsxDEV(Brain, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Niv \\u2022 Senior PR Strategist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAiPanelOpen(!aiPanelOpen),\n            children: aiPanelOpen ? /*#__PURE__*/_jsxDEV(Minimize2, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(Maximize2, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 56\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 9\n      }, this), aiPanelOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        style: {\n          padding: 0,\n          height: 'calc(100% - 40px)'\n        },\n        children: /*#__PURE__*/_jsxDEV(NivStrategicOrchestrator, {\n          messages: messages,\n          setMessages: setMessages,\n          currentFeature: selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id,\n          onFeatureOpen: featureId => {\n            // Find and open the requested feature\n            const feature = activities.find(a => a.id === featureId);\n            if (feature) {\n              handleActivityClick(feature);\n            }\n          },\n          onContentGenerate: contentData => {\n            // Handle content generation from Niv - Enhanced for real-time editing\n            setIsNivGenerating(true);\n            if (contentData.initialContent) {\n              setGeneratedContent(contentData.initialContent);\n              setNivGeneratedData(contentData);\n            } else {\n              setGeneratedContent(contentData.message || contentData.content || '');\n            }\n            setCurrentContentType(contentData.type || 'press-release');\n\n            // Open Content Generator if not already open\n            if ((selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) !== 'content-generator') {\n              const contentGen = activities.find(a => a.id === 'content-generator');\n              if (contentGen) {\n                handleActivityClick(contentGen);\n              }\n            }\n\n            // Stop generating indicator after content is set\n            setTimeout(() => setIsNivGenerating(false), 1000);\n          },\n          onNivEdit: async editData => {\n            // Handle Niv's real-time editing\n            setIsNivGenerating(true);\n            try {\n              const response = await supabaseApiService.callNivChat({\n                message: `Edit this content: \"${editData.editRequest}\"\\n\\nCurrent content:\\n${editData.currentContent}`,\n                context: {\n                  clientMode: 'URGENT_FIRE',\n                  detectedFeature: 'content-generator',\n                  editMode: true,\n                  contentType: editData.contentType\n                },\n                mode: 'content_editing'\n              });\n              if (response.response) {\n                setGeneratedContent(response.response);\n\n                // Add Niv's edit explanation to messages\n                setMessages(prev => [...prev, {\n                  id: Date.now(),\n                  type: 'assistant',\n                  content: `I've updated the content based on your request: \"${editData.editRequest}\"`,\n                  timestamp: new Date()\n                }]);\n              }\n            } catch (error) {\n              console.error('Error in Niv editing:', error);\n              setMessages(prev => [...prev, {\n                id: Date.now(),\n                type: 'assistant',\n                content: 'I apologize - there was an issue editing the content. Let me try a different approach.',\n                timestamp: new Date()\n              }]);\n            } finally {\n              setIsNivGenerating(false);\n            }\n          },\n          onStrategicPlanGenerate: planData => {\n            // Handle strategic plan generation from Niv\n            console.log('Generating strategic plan:', planData);\n            // Set the plan data for Strategic Planning component\n            setStrategicPlanData(planData);\n            // Open Strategic Planning if not already open\n            if ((selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) !== 'strategic-planning') {\n              const strategicPlanning = activities.find(a => a.id === 'strategic-planning');\n              if (strategicPlanning) {\n                handleActivityClick(strategicPlanning);\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resize-handle\",\n        onMouseDown: e => handleResizeStart(e, 'ai-assistant')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }, this), currentView === 'activity' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"activity-list\",\n      className: \"draggable-panel activity-list-panel\",\n      style: {\n        left: `${((_positions$activityL = positions['activity-list']) === null || _positions$activityL === void 0 ? void 0 : _positions$activityL.x) || 420}px`,\n        top: `${((_positions$activityL2 = positions['activity-list']) === null || _positions$activityL2 === void 0 ? void 0 : _positions$activityL2.y) || 80}px`,\n        width: `${((_sizes$activityList = sizes['activity-list']) === null || _sizes$activityList === void 0 ? void 0 : _sizes$activityList.width) || 500}px`,\n        height: `${((_sizes$activityList2 = sizes['activity-list']) === null || _sizes$activityList2 === void 0 ? void 0 : _sizes$activityList2.height) || 400}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        onMouseDown: e => handleDragStart(e, 'activity-list'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-title\",\n          children: [/*#__PURE__*/_jsxDEV(Activity, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-controls\",\n          children: /*#__PURE__*/_jsxDEV(Move, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-list\",\n          children: activities.map(activity => {\n            const Icon = activity.icon;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `activity-item ${activity.status}`,\n              onClick: () => handleActivityClick(activity),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-icon\",\n                style: {\n                  backgroundColor: `${activity.color}15`\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  size: 20,\n                  style: {\n                    color: activity.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"activity-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [activity.name, activity.isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        marginLeft: '8px',\n                        padding: '2px 6px',\n                        background: 'linear-gradient(135deg, #f59e0b 0%, #dc2626 100%)',\n                        borderRadius: '4px',\n                        fontSize: '10px',\n                        fontWeight: 'bold',\n                        color: 'white'\n                      },\n                      children: \"NEW\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1051,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `activity-status ${activity.status}`,\n                    children: activity.status === 'ready' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Circle, {\n                        size: 6,\n                        fill: \"currentColor\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1064,\n                        columnNumber: 31\n                      }, this), \" Ready\"]\n                    }, void 0, true) : activity.status === 'building' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Zap, {\n                        size: 10\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1066,\n                        columnNumber: 31\n                      }, this), \" Building\"]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Clock, {\n                        size: 10\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1068,\n                        columnNumber: 31\n                      }, this), \" Pending\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"activity-description\",\n                  children: activity.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n                size: 18,\n                className: \"activity-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 21\n              }, this)]\n            }, activity.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resize-handle\",\n        onMouseDown: e => handleResizeStart(e, 'activity-list')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feature-view\",\n      className: `draggable-panel feature-panel ${isTransitioning ? 'transitioning' : ''}`,\n      style: {\n        left: `${((_positions$featureVi = positions['feature-view']) === null || _positions$featureVi === void 0 ? void 0 : _positions$featureVi.x) || 420}px`,\n        top: `${((_positions$featureVi2 = positions['feature-view']) === null || _positions$featureVi2 === void 0 ? void 0 : _positions$featureVi2.y) || 80}px`,\n        width: `${((_sizes$featureView = sizes['feature-view']) === null || _sizes$featureView === void 0 ? void 0 : _sizes$featureView.width) || 800}px`,\n        height: `${((_sizes$featureView2 = sizes['feature-view']) === null || _sizes$featureView2 === void 0 ? void 0 : _sizes$featureView2.height) || 600}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        onMouseDown: e => handleDragStart(e, 'feature-view'),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToActivities,\n          className: \"back-button\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this), \"Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-title\",\n          children: [selectedFeature && /*#__PURE__*/React.createElement(selectedFeature.icon, {\n            size: 18,\n            style: {\n              color: selectedFeature.color\n            }\n          }), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-controls\",\n          children: /*#__PURE__*/_jsxDEV(Move, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [(selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) === 'content-generator' && /*#__PURE__*/_jsxDEV(ContentGeneratorModule, {\n          onAIMessage: handleContentGeneratorMessage,\n          generatedContent: generatedContent,\n          onContentUpdate: handleContentUpdate,\n          currentContentType: currentContentType\n          // NEW: Niv real-time integration props\n          ,\n          nivGeneratedData: nivGeneratedData,\n          onNivEdit: async editData => {\n            // This will be handled by the onNivEdit prop of NivStrategicOrchestrator\n            // For now, just trigger a message to Niv\n            setMessages(prev => [...prev, {\n              id: Date.now(),\n              type: 'user',\n              content: editData.editRequest,\n              timestamp: new Date()\n            }]);\n          },\n          isNivGenerating: isNivGenerating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 15\n        }, this), (selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) === 'opportunity-engine' && /*#__PURE__*/_jsxDEV(OpportunityEngine, {\n          onAIMessage: (message, featureId, contentType) => {\n            // If featureId is specified, switch to that feature\n            if (featureId === 'content-generator') {\n              const contentGenActivity = activities.find(a => a.id === 'content-generator');\n              if (contentGenActivity) {\n                handleActivityClick(contentGenActivity);\n                // Send message after switching to Content Generator\n                setTimeout(() => {\n                  sendMessage(message, null, contentType);\n                }, 500);\n              }\n            } else {\n              // Just send the message normally\n              sendMessage(message);\n            }\n          },\n          isDragging: draggedElement === 'feature-view'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 15\n        }, this), (selectedFeature === null || selectedFeature === void 0 ? void 0 : selectedFeature.id) === 'strategic-planning' && /*#__PURE__*/_jsxDEV(StrategicPlanningOptimized, {\n          initialData: strategicPlanData,\n          onDataChange: setStrategicPlanData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resize-handle\",\n        onMouseDown: e => handleResizeStart(e, 'feature-view')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 9\n    }, this), showNotepad && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notepad\",\n      className: \"draggable-panel notepad-panel\",\n      style: {\n        left: `${((_positions$notepad = positions['notepad']) === null || _positions$notepad === void 0 ? void 0 : _positions$notepad.x) || 940}px`,\n        top: `${((_positions$notepad2 = positions['notepad']) === null || _positions$notepad2 === void 0 ? void 0 : _positions$notepad2.y) || 80}px`,\n        width: `${((_sizes$notepad = sizes['notepad']) === null || _sizes$notepad === void 0 ? void 0 : _sizes$notepad.width) || 350}px`,\n        height: `${((_sizes$notepad2 = sizes['notepad']) === null || _sizes$notepad2 === void 0 ? void 0 : _sizes$notepad2.height) || 400}px`,\n        display: notepadMinimized ? 'none' : 'block'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        onMouseDown: e => handleDragStart(e, 'notepad'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-title\",\n          children: [/*#__PURE__*/_jsxDEV(StickyNote, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Notes & Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"notes-count-badge\",\n            children: notes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setNotepadMinimized(!notepadMinimized),\n            children: notepadMinimized ? /*#__PURE__*/_jsxDEV(Maximize2, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Minimize2, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1200,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNotepad(false),\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notepad-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notepad-input-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newNote,\n              onChange: e => setNewNote(e.target.value),\n              onKeyDown: e => {\n                if (e.key === 'Enter' && e.ctrlKey) {\n                  e.preventDefault();\n                  addNote();\n                }\n              },\n              placeholder: \"Type a note or reminder... (Ctrl+Enter to save)\",\n              className: \"notepad-textarea\",\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notepad-add-button\",\n              onClick: addNote,\n              disabled: !newNote.trim(),\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1229,\n                columnNumber: 19\n              }, this), \"Add Note\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notepad-notes-list\",\n            children: notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notepad-no-notes\",\n              children: [/*#__PURE__*/_jsxDEV(StickyNote, {\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No notes yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 19\n            }, this) : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notepad-note-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notepad-note-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"notepad-note-text\",\n                  children: note.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"notepad-note-timestamp\",\n                  children: [new Date(note.timestamp).toLocaleDateString(), \" \", new Date(note.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1243,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"notepad-delete-button\",\n                onClick: () => deleteNote(note.id),\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 14\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1253,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1249,\n                columnNumber: 23\n              }, this)]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resize-handle\",\n        onMouseDown: e => handleResizeStart(e, 'notepad')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 9\n    }, this), showNewProjectModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowNewProjectModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewProjectModal(false),\n            className: \"close-button\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1276,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newProjectName,\n            onChange: e => setNewProjectName(e.target.value),\n            placeholder: \"Enter project name...\",\n            className: \"project-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: () => setShowNewProjectModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-button\",\n            onClick: handleCreateProject,\n            disabled: !newProjectName.trim(),\n            children: \"Create Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1271,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 748,\n    columnNumber: 5\n  }, this);\n};\n_s(RailwayDraggable, \"62116OCs6uunDZNuDouu1UokJ2Q=\", false, function () {\n  return [useParams, useNavigate, useProject, useAuth];\n});\n_c = RailwayDraggable;\nexport default RailwayDraggable;\nvar _c;\n$RefreshReg$(_c, \"RailwayDraggable\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useNavigate","useProject","useAuth","ContentGeneratorModule","StrategicPlanningOptimized","OpportunityEngine","NivStrategicOrchestrator","supabaseApiService","Bot","Brain","FileText","Users","TrendingUp","AlertTriangle","BarChart3","Archive","Send","ChevronLeft","ChevronRight","X","Sparkles","MessageSquare","Shield","Target","Menu","GripVertical","Maximize2","Minimize2","Move","GitBranch","Activity","Database","Circle","Square","ArrowLeft","Clock","Zap","Globe","Settings","User","Plus","ChevronDown","LogOut","Folder","StickyNote","RefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","RailwayDraggable","_s","_positions$aiAssista","_positions$aiAssista2","_sizes$aiAssistant","_sizes$aiAssistant2","_positions$activityL","_positions$activityL2","_sizes$activityList","_sizes$activityList2","_positions$featureVi","_positions$featureVi2","_sizes$featureView","_sizes$featureView2","_positions$notepad","_positions$notepad2","_sizes$notepad","_sizes$notepad2","projectId","navigate","activeProject","projects","fetchProjects","selectProject","user","logout","messagesEndRef","inputRef","currentView","setCurrentView","selectedFeature","setSelectedFeature","isTransitioning","setIsTransitioning","message","setMessage","messages","setMessages","loading","setLoading","isEditingMode","setIsEditingMode","aiPanelOpen","setAiPanelOpen","generatedContent","setGeneratedContent","currentContentType","setCurrentContentType","selectedContentTypeId","setSelectedContentTypeId","selectedContentTypeName","setSelectedContentTypeName","nivGeneratedData","setNivGeneratedData","isNivGenerating","setIsNivGenerating","strategicPlanData","setStrategicPlanData","draggedElement","setDraggedElement","resizingElement","setResizingElement","positions","setPositions","sizes","setSizes","dragOffset","setDragOffset","x","y","showProfileMenu","setShowProfileMenu","showProjectMenu","setShowProjectMenu","showNewProjectModal","setShowNewProjectModal","newProjectName","setNewProjectName","showNotepad","setShowNotepad","notes","setNotes","newNote","setNewNote","notepadMinimized","setNotepadMinimized","sessionId","Date","now","Math","random","toString","substr","activities","id","name","icon","color","description","status","stats","component","lastUsed","path","savedPositions","localStorage","getItem","savedSizes","JSON","parse","width","height","type","content","timestamp","saveLayout","setItem","stringify","handleDragStart","e","elementId","preventDefault","rect","currentTarget","parentElement","getBoundingClientRect","clientX","left","clientY","top","handleDragMove","newPosition","max","prev","handleDragEnd","handleResizeStart","stopPropagation","handleResizeMove","element","document","getElementById","newSize","handleResizeEnd","window","addEventListener","removeEventListener","handleActivityClick","activity","setTimeout","handleBackToActivities","handleCreateProject","trim","newProject","createProject","user_id","error","console","handleSwitchProject","project","savedNotes","addNote","note","text","toISOString","updatedNotes","deleteNote","noteId","filter","handleContentGeneratorMessage","msg","log","handleEditRequest","successMsg","userMsg","contentTypeId","contentTypeName","sendMessage","request","editPrompt","currentContent","metadata","data","sendClaudeMessage","mode","folder","editing","contentType","tone","success","response","confirmMsg","errorMsg","restartProject","restartMsg","typeId","typeName","isContentMessage","toLowerCase","includes","contentGen","find","a","hasContent","hasGeneratedContent","isGeneratedContent","detectContentType","aiMsg","generateContentInFeature","params","Promise","resolve","prompt","topic","audience","keyPoints","generateDirectly","userRequestedGeneration","handleSubmit","_inputRef$current","current","focus","isActualGeneratedContent","length","indicators","some","indicator","handleContentUpdate","newContent","_messagesEndRef$curre","scrollIntoView","behavior","style","min","scrollHeight","_inputRef$current2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","marginLeft","onClick","size","display","gap","title","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","map","email","onMouseDown","padding","currentFeature","onFeatureOpen","featureId","feature","onContentGenerate","contentData","initialContent","onNivEdit","editData","callNivChat","editRequest","context","clientMode","detectedFeature","editMode","onStrategicPlanGenerate","planData","strategicPlanning","Icon","backgroundColor","isNew","background","borderRadius","createElement","onAIMessage","onContentUpdate","contentGenActivity","isDragging","initialData","onDataChange","value","onChange","target","onKeyDown","key","ctrlKey","placeholder","rows","disabled","toLocaleDateString","toLocaleTimeString","hour","minute","autoFocus","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/RailwayDraggable.js"],"sourcesContent":["// RailwayDraggable.js - Railway-style with draggable and resizable components\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useProject } from '../contexts/ProjectContext';\nimport { useAuth } from '../contexts/AuthContext';\nimport ContentGeneratorModule from './ContentGeneratorModule';\nimport StrategicPlanningOptimized from './StrategicPlanningOptimized';\nimport OpportunityEngine from './OpportunityEngine';\nimport NivStrategicOrchestrator from './NivStrategicOrchestrator';\nimport supabaseApiService from '../services/supabaseApiService';\nimport {\n  Bot, Brain, FileText, Users, TrendingUp, AlertTriangle, \n  BarChart3, Archive, Send, ChevronLeft, ChevronRight, X,\n  Sparkles, MessageSquare, Shield, Target, Menu, GripVertical,\n  Maximize2, Minimize2, Move, GitBranch, Activity, Database,\n  Circle, Square, ArrowLeft, Clock, Zap, Globe, Settings,\n  User, Plus, ChevronDown, LogOut, Folder, StickyNote, RefreshCw\n} from 'lucide-react';\nimport './RailwayDraggable.css';\n\nconst RailwayDraggable = () => {\n  const { projectId } = useParams();\n  const navigate = useNavigate();\n  const { activeProject, projects, fetchProjects, selectProject } = useProject();\n  const { user, logout } = useAuth();\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  \n  // View state - either showing activity list or expanded feature\n  const [currentView, setCurrentView] = useState('activity'); // 'activity' or 'feature'\n  const [selectedFeature, setSelectedFeature] = useState(null);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  \n  // AI Assistant state - PRESERVING ALL FUNCTIONALITY\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditingMode, setIsEditingMode] = useState(false);\n  const [aiPanelOpen, setAiPanelOpen] = useState(true);\n  \n  // Content Generator state - PRESERVING ALL FUNCTIONALITY\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [currentContentType, setCurrentContentType] = useState(null);\n  const [selectedContentTypeId, setSelectedContentTypeId] = useState(null);\n  const [selectedContentTypeName, setSelectedContentTypeName] = useState(null);\n  \n  // NEW: Niv real-time integration state\n  const [nivGeneratedData, setNivGeneratedData] = useState(null);\n  const [isNivGenerating, setIsNivGenerating] = useState(false);\n  \n  // Strategic Planning state\n  const [strategicPlanData, setStrategicPlanData] = useState(null);\n  \n  // Drag and resize state\n  const [draggedElement, setDraggedElement] = useState(null);\n  const [resizingElement, setResizingElement] = useState(null);\n  const [positions, setPositions] = useState({});\n  const [sizes, setSizes] = useState({});\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  \n  // Profile dropdown state\n  const [showProfileMenu, setShowProfileMenu] = useState(false);\n  const [showProjectMenu, setShowProjectMenu] = useState(false);\n  const [showNewProjectModal, setShowNewProjectModal] = useState(false);\n  const [newProjectName, setNewProjectName] = useState('');\n  const [showNotepad, setShowNotepad] = useState(false);\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [notepadMinimized, setNotepadMinimized] = useState(false);\n  \n  // Session ID for conversation continuity - v3 force update\n  const [sessionId] = useState(() => `session-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);\n  \n  // Feature/Activity definitions\n  const activities = [\n    {\n      id: 'content-generator',\n      name: 'Content Generator',\n      icon: FileText,\n      color: '#8b5cf6',\n      description: 'AI-powered content creation',\n      status: 'ready',\n      stats: '12 pieces created today',\n      component: ContentGeneratorModule,\n      lastUsed: '2 minutes ago'\n    },\n    {\n      id: 'media-intelligence',\n      name: 'Media Intelligence',\n      icon: Users,\n      color: '#10b981',\n      description: 'Journalist discovery & outreach',\n      status: 'ready',\n      stats: '234 journalists tracked',\n      path: `/projects/${projectId}/media-list`,\n      lastUsed: '1 hour ago'\n    },\n    {\n      id: 'strategic-planning',\n      name: 'Strategic Planning',\n      icon: Brain,\n      color: '#f59e0b',\n      description: 'Evidence-based strategic plans',\n      status: 'ready',\n      stats: 'AI-powered planning',\n      component: StrategicPlanningOptimized,\n      lastUsed: '3 hours ago'\n    },\n    {\n      id: 'opportunity-engine',\n      name: 'Opportunity Engine',\n      icon: Zap,\n      color: '#f59e0b',\n      description: 'AI-powered PR opportunity discovery',\n      status: 'ready',\n      stats: '5 active opportunities',\n      component: 'OpportunityEngine',\n      lastUsed: 'Just now'\n    },\n    {\n      id: 'memory-vault',\n      name: 'Memory Vault',\n      icon: Database,\n      color: '#6366f1',\n      description: 'Project knowledge base',\n      status: 'ready',\n      stats: '1,234 items stored',\n      path: `/projects/${projectId}`,\n      lastUsed: '5 minutes ago'\n    },\n    {\n      id: 'stakeholder-monitoring',\n      name: 'Stakeholder Intelligence',\n      icon: Activity,\n      color: '#00bcd4',\n      description: 'Monitor stakeholders & gather intelligence',\n      status: 'active',\n      stats: 'Live monitoring active',\n      path: `/projects/${projectId}/stakeholder-intelligence`,\n      lastUsed: 'Active now'\n    },\n    {\n      id: 'crisis-command',\n      name: 'Crisis Command',\n      icon: AlertTriangle,\n      color: '#ef4444',\n      description: 'Crisis management center',\n      status: 'ready',\n      stats: 'No active crises',\n      path: `/projects/${projectId}/crisis-command`,\n      lastUsed: '2 days ago'\n    },\n    {\n      id: 'reports',\n      name: 'Reports & Analytics',\n      icon: BarChart3,\n      color: '#14b8a6',\n      description: 'Performance metrics & insights',\n      status: 'ready',\n      stats: '5 reports generated',\n      path: `/projects/${projectId}/reports`,\n      lastUsed: '6 hours ago'\n    }\n  ];\n\n  // Initialize positions and sizes\n  useEffect(() => {\n    // Load saved positions and sizes or use defaults\n    const savedPositions = localStorage.getItem('railwayDragPositions');\n    const savedSizes = localStorage.getItem('railwayDragSizes');\n    \n    setPositions(savedPositions ? JSON.parse(savedPositions) : {\n      'ai-assistant': { x: 20, y: 80 },\n      'activity-list': { x: 420, y: 80 },\n      'feature-view': { x: 420, y: 80 },\n      'notepad': { x: 940, y: 80 }\n    });\n    \n    setSizes(savedSizes ? JSON.parse(savedSizes) : {\n      'ai-assistant': { width: 400, height: 400 },\n      'activity-list': { width: 500, height: 400 },\n      'feature-view': { width: 800, height: 600 },\n      'notepad': { width: 350, height: 400 }\n    });\n    \n    // Load projects\n    fetchProjects();\n  }, []);\n\n  // Initialize AI Assistant\n  useEffect(() => {\n    setMessages([{\n      id: Date.now(),\n      type: 'assistant',\n      content: \"Welcome to SignalDesk! I'm your AI assistant. I can help you create content, find journalists, plan campaigns, and more. Just tell me what you need - for example, 'I need to write a press release' or 'Find tech journalists'. You can also click any feature from the list to get started.\",\n      timestamp: new Date()\n    }]);\n  }, []);\n\n\n  // Save positions and sizes\n  const saveLayout = useCallback(() => {\n    localStorage.setItem('railwayDragPositions', JSON.stringify(positions));\n    localStorage.setItem('railwayDragSizes', JSON.stringify(sizes));\n  }, [positions, sizes]);\n\n  // Handle drag start\n  const handleDragStart = (e, elementId) => {\n    e.preventDefault();\n    setDraggedElement(elementId);\n    const rect = e.currentTarget.parentElement.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle drag move\n  const handleDragMove = useCallback((e) => {\n    if (!draggedElement) return;\n    \n    const newPosition = {\n      x: Math.max(0, e.clientX - dragOffset.x),\n      y: Math.max(60, e.clientY - dragOffset.y) // Keep below header\n    };\n    \n    setPositions(prev => ({\n      ...prev,\n      [draggedElement]: newPosition\n    }));\n  }, [draggedElement, dragOffset]);\n\n  // Handle drag end\n  const handleDragEnd = useCallback(() => {\n    if (draggedElement) {\n      saveLayout();\n    }\n    setDraggedElement(null);\n  }, [draggedElement, saveLayout]);\n\n  // Handle resize start\n  const handleResizeStart = (e, elementId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setResizingElement(elementId);\n  };\n\n  // Handle resize move\n  const handleResizeMove = useCallback((e) => {\n    if (!resizingElement) return;\n    \n    const element = document.getElementById(resizingElement);\n    if (!element) return;\n    \n    const rect = element.getBoundingClientRect();\n    const newSize = {\n      width: Math.max(300, e.clientX - rect.left),\n      height: Math.max(300, e.clientY - rect.top)\n    };\n    \n    setSizes(prev => ({\n      ...prev,\n      [resizingElement]: newSize\n    }));\n  }, [resizingElement]);\n\n  // Handle resize end\n  const handleResizeEnd = useCallback(() => {\n    if (resizingElement) {\n      saveLayout();\n    }\n    setResizingElement(null);\n  }, [resizingElement, saveLayout]);\n\n  // Mouse event handlers\n  useEffect(() => {\n    if (draggedElement) {\n      window.addEventListener('mousemove', handleDragMove);\n      window.addEventListener('mouseup', handleDragEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleDragMove);\n        window.removeEventListener('mouseup', handleDragEnd);\n      };\n    }\n  }, [draggedElement, handleDragMove, handleDragEnd]);\n\n  useEffect(() => {\n    if (resizingElement) {\n      window.addEventListener('mousemove', handleResizeMove);\n      window.addEventListener('mouseup', handleResizeEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleResizeMove);\n        window.removeEventListener('mouseup', handleResizeEnd);\n      };\n    }\n  }, [resizingElement, handleResizeMove, handleResizeEnd]);\n\n  // Handle activity/feature selection\n  const handleActivityClick = (activity) => {\n    if (activity.path && !activity.component) {\n      // External route - navigate away\n      navigate(activity.path);\n      return;\n    }\n    \n    // Expand the feature in place\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setSelectedFeature(activity);\n      setCurrentView('feature');\n      setIsTransitioning(false);\n      \n      // AI context handled by backend now\n      // adaptiveAI.setActiveFeature(activity.id);\n    }, 300);\n  };\n\n  // Handle back to activity list\n  const handleBackToActivities = () => {\n    setIsTransitioning(true);\n    setTimeout(() => {\n      setCurrentView('activity');\n      setSelectedFeature(null);\n      setIsEditingMode(false);\n      setGeneratedContent('');\n      setIsTransitioning(false);\n      \n      // AI reset handled by backend now\n      // adaptiveAI.reset();\n    }, 300);\n  };\n\n  // Handle project creation\n  const handleCreateProject = async () => {\n    if (!newProjectName.trim()) return;\n    \n    try {\n      const newProject = await supabaseApiService.createProject({ \n        name: newProjectName,\n        user_id: user?.id\n      });\n      \n      if (newProject) {\n        await fetchProjects();\n        selectProject(newProject);\n        navigate(`/projects/${newProject.id}`);\n        setShowNewProjectModal(false);\n        setNewProjectName('');\n      }\n    } catch (error) {\n      console.error('Failed to create project:', error);\n    }\n  };\n\n  // Handle project switch\n  const handleSwitchProject = (project) => {\n    selectProject(project);\n    navigate(`/projects/${project.id}`);\n    setShowProjectMenu(false);\n  };\n\n  // Notes functionality\n  useEffect(() => {\n    // Load notes from localStorage\n    const savedNotes = localStorage.getItem(`notes-${projectId}`);\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, [projectId]);\n\n  const addNote = () => {\n    if (!newNote.trim()) return;\n    \n    const note = {\n      id: Date.now(),\n      text: newNote.trim(),\n      timestamp: new Date().toISOString()\n    };\n    \n    const updatedNotes = [...notes, note];\n    setNotes(updatedNotes);\n    localStorage.setItem(`notes-${projectId}`, JSON.stringify(updatedNotes));\n    setNewNote('');\n  };\n\n  const deleteNote = (noteId) => {\n    const updatedNotes = notes.filter(note => note.id !== noteId);\n    setNotes(updatedNotes);\n    localStorage.setItem(`notes-${projectId}`, JSON.stringify(updatedNotes));\n  };\n\n  // CRITICAL: Handle messages from Content Generator - EXACT RESTORATION\n  const handleContentGeneratorMessage = (msg) => {\n    console.log('RailwayDraggable: Received message from ContentGenerator:', msg);\n    \n    if (msg.type === 'edit_request') {\n      setIsEditingMode(true);\n      handleEditRequest(msg);\n    } else if (msg.type === 'content_saved') {\n      // Content was saved - reset handled by backend\n      // adaptiveAI.reset();\n      const successMsg = {\n        id: `save-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        type: 'system',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, successMsg]);\n    } else if (msg.type === 'user' && msg.content) {\n      // When user selects a content type in Content Generator, trigger Niv\n      const userMsg = {\n        id: `content-user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        type: 'user',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMsg]);\n      \n      // Store the content type for future use\n      if (msg.contentTypeId) {\n        setSelectedContentTypeId(msg.contentTypeId);\n        setSelectedContentTypeName(msg.contentTypeName);\n      }\n      \n      // Open AI Assistant panel to show Niv is working on it\n      setAiPanelOpen(true);\n      \n      // Trigger Niv's content generation flow\n      // This will be handled by AdaptiveNivAssistantEnhanced which is watching messages\n      // Pass content type info if available from Content Generator\n      sendMessage(msg.content, msg.contentTypeId, msg.contentTypeName);\n    }\n  };\n\n  // CRITICAL: Handle edit requests - EXACT RESTORATION\n  const handleEditRequest = async (request) => {\n    const { content: editPrompt, currentContent, metadata } = request;\n    \n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: `Please edit this content: \"${editPrompt}\"`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    \n    setLoading(true);\n    try {\n      const data = await supabaseApiService.sendClaudeMessage(\n        `Edit the following content based on this request: \"${editPrompt}\"\\n\\nCurrent content:\\n${currentContent}`,\n        {\n          mode: 'content',\n          sessionId: sessionId,\n          folder: 'content-generator',\n          editing: true,\n          contentType: metadata?.contentType,\n          tone: metadata?.tone\n        }\n      );\n      \n      if (data.success && data.response) {\n        // Update content directly in the Content Generator feature (not in chat)\n        setGeneratedContent(data.response);\n        \n        // Show confirmation message in chat instead of the edited content\n        const confirmMsg = {\n          id: Date.now(),\n          type: 'system',\n          content: '✅ Content updated successfully! You can see the changes in the Content Generator.',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, confirmMsg]);\n      }\n    } catch (error) {\n      console.error('Error processing edit:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to process edit request. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // RESTART FUNCTIONALITY - Reset all states and return to activity view\n  const restartProject = () => {\n    console.log('🔄 Restarting project page...');\n    \n    // Reset view states\n    setCurrentView('activity');\n    setSelectedFeature(null);\n    setIsTransitioning(false);\n    \n    // Reset AI Assistant states\n    setMessages([]);\n    setMessage('');\n    setLoading(false);\n    setIsEditingMode(false);\n    \n    // Reset Content Generator states\n    setGeneratedContent('');\n    setCurrentContentType(null);\n    setSelectedContentTypeId(null);\n    setSelectedContentTypeName(null);\n    \n    // Reset drag/resize states\n    setDraggedElement(null);\n    setResizingElement(null);\n    setPositions({});\n    setSizes({});\n    \n    // Reset modals and dropdowns\n    setShowProfileMenu(false);\n    setShowProjectMenu(false);\n    setShowNewProjectModal(false);\n    setShowNotepad(false);\n    \n    // Add restart confirmation message\n    const restartMsg = {\n      id: `restart-${Date.now()}`,\n      type: 'system',\n      content: '🔄 Project page has been restarted. All states have been reset.',\n      timestamp: new Date()\n    };\n    setTimeout(() => {\n      setMessages([restartMsg]);\n    }, 100);\n    \n    console.log('✅ Project restart complete');\n  };\n\n  // FIXED AI message handling - direct backend call, no local processing\n  const sendMessage = async (text, contentTypeId = null, contentTypeName = null) => {\n    if (!text?.trim()) return;\n    \n    console.log('[FIXED] Sending message:', text);\n    \n    // Use stored content type if not provided\n    const typeId = contentTypeId || selectedContentTypeId;\n    const typeName = contentTypeName || selectedContentTypeName;\n\n    // Check if this is a content-related message\n    const isContentMessage = \n      text.toLowerCase().includes('thought leadership') ||\n      text.toLowerCase().includes('press release') ||\n      text.toLowerCase().includes('social media') ||\n      text.toLowerCase().includes('blog') ||\n      text.toLowerCase().includes('email') ||\n      selectedFeature?.id === 'content-generator';\n    \n    // If it's a content message, ensure Content Generator is open\n    if (isContentMessage && selectedFeature?.id !== 'content-generator') {\n      const contentGen = activities.find(a => a.id === 'content-generator');\n      handleActivityClick(contentGen);\n    }\n\n    setLoading(true);\n    \n    try {\n      const hasContent = !!(generatedContent && generatedContent.trim());\n      \n      const data = await supabaseApiService.sendClaudeMessage(text, {\n        mode: isContentMessage ? 'content' : 'general',\n        sessionId: sessionId,\n        folder: isContentMessage ? 'content-generator' : 'general',\n        contentTypeId: typeId,\n        contentTypeName: typeName || text, // Use message as content type if not specified\n        hasGeneratedContent: hasContent,\n        currentContent: generatedContent\n      });\n      \n      if (data.success && data.response) {\n        if (data.isGeneratedContent) {\n          // Auto-open Content Generator if not already open\n          if (selectedFeature?.id !== 'content-generator') {\n            const contentGen = activities.find(a => a.id === 'content-generator');\n            handleActivityClick(contentGen);\n          }\n          \n          setGeneratedContent(data.response);\n          detectContentType(data.response);\n          \n          const successMsg = {\n            id: Date.now(),\n            type: 'system',\n            content: '✨ Content generated successfully! You can see it in the Content Generator panel.',\n            timestamp: new Date()\n          };\n          setMessages(prev => [...prev, successMsg]);\n        } else {\n          const aiMsg = {\n            id: Date.now(),\n            type: 'assistant',\n            content: data.response,\n            timestamp: new Date()\n          };\n          setMessages(prev => [...prev, aiMsg]);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to send message. Please check your connection.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Generate content directly in the Content Generator feature\n  const generateContentInFeature = async (params) => {\n    // First, ensure Content Generator is open\n    if (selectedFeature?.id !== 'content-generator') {\n      const contentGen = activities.find(a => a.id === 'content-generator');\n      handleActivityClick(contentGen);\n      \n      // Wait for transition\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n\n    setLoading(true);\n    \n    try {\n      // Build prompt from guided flow context\n      const prompt = `Create a ${params.type} about ${params.topic} for ${params.audience} audience with a ${params.tone} tone. ${params.keyPoints || ''}`;\n      \n      const data = await supabaseApiService.sendClaudeMessage(prompt, {\n        mode: 'content',\n        sessionId: sessionId,\n        folder: 'content-generator',\n        contentType: params.type,\n        contentTypeId: params.type,  // CRITICAL: Backend expects contentTypeId\n        contentTypeName: params.type,\n        generateDirectly: true,\n        userRequestedGeneration: true\n      });\n      \n      if (data.success && data.response) {\n        // Set the generated content directly\n        setGeneratedContent(data.response);\n        setCurrentContentType(params.type);\n        \n        // Notify user in chat\n        const successMsg = {\n          id: Date.now(),\n          type: 'system',\n          content: '✨ Content generated successfully! You can see it in the Content Generator. Feel free to ask me to make any edits.',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, successMsg]);\n      }\n    } catch (error) {\n      console.error('Error generating content:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n\n    const userMsg = {\n      id: `user-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    \n    sendMessage(message);\n    setMessage('');\n    \n    // Keep focus on input\n    setTimeout(() => {\n      inputRef.current?.focus();\n    }, 50);\n  };\n\n  // Check if response is actual generated content\n  const isActualGeneratedContent = (text) => {\n    if (!text || text.length < 100) return false;\n    \n    const indicators = [\n      'FOR IMMEDIATE RELEASE',\n      'Dear ',\n      'Subject:',\n      'Q:',\n      'Question:',\n      '#',\n      'We are pleased'\n    ];\n    \n    return indicators.some(indicator => text.includes(indicator));\n  };\n\n  // Detect content type\n  const detectContentType = (text) => {\n    if (text.includes('FOR IMMEDIATE RELEASE')) {\n      setCurrentContentType('press-release');\n    } else if (text.includes('Q:') || text.includes('Question:')) {\n      setCurrentContentType('qa-doc');\n    } else if (text.includes('#')) {\n      setCurrentContentType('social-post');\n    }\n  };\n\n  // Update content from Content Generator\n  const handleContentUpdate = (newContent) => {\n    setGeneratedContent(newContent);\n    if (newContent && !isEditingMode) {\n      setIsEditingMode(false);\n    }\n  };\n\n  // Auto-scroll messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Auto-resize textarea and maintain focus\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.style.height = 'auto';\n      inputRef.current.style.height = Math.min(inputRef.current.scrollHeight, 120) + 'px';\n    }\n  }, [message]);\n\n  // Maintain focus on input after messages\n  useEffect(() => {\n    if (inputRef.current && !loading) {\n      // Small delay to ensure DOM is updated\n      setTimeout(() => {\n        inputRef.current?.focus();\n      }, 100);\n    }\n  }, [messages, loading]);\n\n  return (\n    <div className=\"railway-draggable-container\">\n      {/* Project Header Bar */}\n      <div className=\"railway-header\">\n        <div className=\"header-left\">\n          <div className=\"signaldesk-brand\">\n            <span className=\"brand-text\">SignalDesk</span>\n            <span style={{ fontSize: '12px', color: '#8b5cf6', fontWeight: 'bold', marginLeft: '8px' }}>v3.2-FIXED</span>\n          </div>\n          \n          <div className=\"project-selector\">\n            <button \n              className=\"project-dropdown-button\"\n              onClick={() => setShowProjectMenu(!showProjectMenu)}\n            >\n              <Folder size={16} />\n              <span>{activeProject?.name || 'Select Project'}</span>\n              <ChevronDown size={16} />\n            </button>\n            \n            {showProjectMenu && (\n              <div className=\"dropdown-menu project-menu\">\n                <div className=\"dropdown-header\">\n                  <span>Projects</span>\n                  <div style={{ display: 'flex', gap: '4px' }}>\n                    <button \n                      className=\"new-project-button\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        fetchProjects();\n                      }}\n                      title=\"Refresh projects\"\n                    >\n                      <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                        <path d=\"M23 4v6h-6M1 20v-6h6M3.51 9a9 9 0 0114.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0020.49 15\"/>\n                      </svg>\n                    </button>\n                    <button \n                      className=\"new-project-button\"\n                      onClick={() => {\n                        setShowProjectMenu(false);\n                        setShowNewProjectModal(true);\n                      }}\n                      title=\"New project\"\n                    >\n                      <Plus size={14} />\n                    </button>\n                  </div>\n                </div>\n                {projects?.map(project => (\n                  <button\n                    key={project.id}\n                    className={`dropdown-item ${project.id === activeProject?.id ? 'active' : ''}`}\n                    onClick={() => handleSwitchProject(project)}\n                  >\n                    <Folder size={14} />\n                    <span>{project.name}</span>\n                    {project.id === activeProject?.id && <Circle size={8} fill=\"currentColor\" />}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          \n          <span className=\"environment-badge\">Production</span>\n        </div>\n        \n        <div className=\"header-right\">\n          <button \n            className=\"header-button restart-button\"\n            onClick={restartProject}\n            title=\"Restart project page and reset all states\"\n          >\n            <RefreshCw size={16} />\n            Restart\n          </button>\n          \n          <button \n            className={`header-button ${showNotepad ? 'active' : ''}`}\n            onClick={() => setShowNotepad(!showNotepad)}\n          >\n            <StickyNote size={16} />\n            Notes\n            {notes.length > 0 && (\n              <span className=\"notes-badge\">{notes.length}</span>\n            )}\n          </button>\n          \n          <button className=\"header-button\">\n            <Settings size={16} />\n            Settings\n          </button>\n          \n          <div className=\"user-profile\">\n            <button \n              className=\"profile-button\"\n              onClick={() => setShowProfileMenu(!showProfileMenu)}\n            >\n              <User size={16} />\n              <span>{user?.email || 'User'}</span>\n              <ChevronDown size={14} />\n            </button>\n            \n            {showProfileMenu && (\n              <div className=\"dropdown-menu profile-menu\">\n                <div className=\"profile-info\">\n                  <User size={20} />\n                  <div>\n                    <div className=\"profile-name\">{user?.name || user?.email}</div>\n                    <div className=\"profile-email\">{user?.email}</div>\n                  </div>\n                </div>\n                <div className=\"dropdown-divider\" />\n                <button className=\"dropdown-item\">\n                  <Settings size={14} />\n                  Account Settings\n                </button>\n                <button \n                  className=\"dropdown-item\"\n                  onClick={() => {\n                    logout();\n                    navigate('/login');\n                  }}\n                >\n                  <LogOut size={14} />\n                  Sign Out\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Draggable AI Assistant Panel - SQUARE */}\n      <div \n        id=\"ai-assistant\"\n        className=\"draggable-panel ai-assistant-square\"\n        style={{\n          left: `${positions['ai-assistant']?.x || 20}px`,\n          top: `${positions['ai-assistant']?.y || 80}px`,\n          width: `${sizes['ai-assistant']?.width || 400}px`,\n          height: `${sizes['ai-assistant']?.height || 400}px`\n        }}\n      >\n        <div \n          className=\"panel-header\"\n          onMouseDown={(e) => handleDragStart(e, 'ai-assistant')}\n        >\n          <div className=\"panel-title\">\n            <Brain size={18} />\n            <span>Niv • Senior PR Strategist</span>\n          </div>\n          <div className=\"panel-controls\">\n            <button onClick={() => setAiPanelOpen(!aiPanelOpen)}>\n              {aiPanelOpen ? <Minimize2 size={14} /> : <Maximize2 size={14} />}\n            </button>\n          </div>\n        </div>\n        \n        {aiPanelOpen && (\n          <div className=\"panel-content\" style={{ padding: 0, height: 'calc(100% - 40px)' }}>\n            <NivStrategicOrchestrator\n              messages={messages}\n              setMessages={setMessages}\n              currentFeature={selectedFeature?.id}\n              onFeatureOpen={(featureId) => {\n                // Find and open the requested feature\n                const feature = activities.find(a => a.id === featureId);\n                if (feature) {\n                  handleActivityClick(feature);\n                }\n              }}\n              onContentGenerate={(contentData) => {\n                // Handle content generation from Niv - Enhanced for real-time editing\n                setIsNivGenerating(true);\n                \n                if (contentData.initialContent) {\n                  setGeneratedContent(contentData.initialContent);\n                  setNivGeneratedData(contentData);\n                } else {\n                  setGeneratedContent(contentData.message || contentData.content || '');\n                }\n                \n                setCurrentContentType(contentData.type || 'press-release');\n                \n                // Open Content Generator if not already open\n                if (selectedFeature?.id !== 'content-generator') {\n                  const contentGen = activities.find(a => a.id === 'content-generator');\n                  if (contentGen) {\n                    handleActivityClick(contentGen);\n                  }\n                }\n                \n                // Stop generating indicator after content is set\n                setTimeout(() => setIsNivGenerating(false), 1000);\n              }}\n              \n              onNivEdit={async (editData) => {\n                // Handle Niv's real-time editing\n                setIsNivGenerating(true);\n                \n                try {\n                  const response = await supabaseApiService.callNivChat({\n                    message: `Edit this content: \"${editData.editRequest}\"\\n\\nCurrent content:\\n${editData.currentContent}`,\n                    context: {\n                      clientMode: 'URGENT_FIRE',\n                      detectedFeature: 'content-generator',\n                      editMode: true,\n                      contentType: editData.contentType\n                    },\n                    mode: 'content_editing'\n                  });\n                  \n                  if (response.response) {\n                    setGeneratedContent(response.response);\n                    \n                    // Add Niv's edit explanation to messages\n                    setMessages(prev => [...prev, {\n                      id: Date.now(),\n                      type: 'assistant',\n                      content: `I've updated the content based on your request: \"${editData.editRequest}\"`,\n                      timestamp: new Date()\n                    }]);\n                  }\n                } catch (error) {\n                  console.error('Error in Niv editing:', error);\n                  setMessages(prev => [...prev, {\n                    id: Date.now(),\n                    type: 'assistant',\n                    content: 'I apologize - there was an issue editing the content. Let me try a different approach.',\n                    timestamp: new Date()\n                  }]);\n                } finally {\n                  setIsNivGenerating(false);\n                }\n              }}\n              \n              onStrategicPlanGenerate={(planData) => {\n                // Handle strategic plan generation from Niv\n                console.log('Generating strategic plan:', planData);\n                // Set the plan data for Strategic Planning component\n                setStrategicPlanData(planData);\n                // Open Strategic Planning if not already open\n                if (selectedFeature?.id !== 'strategic-planning') {\n                  const strategicPlanning = activities.find(a => a.id === 'strategic-planning');\n                  if (strategicPlanning) {\n                    handleActivityClick(strategicPlanning);\n                  }\n                }\n              }}\n            />\n          </div>\n        )}\n        \n        <div \n          className=\"resize-handle\"\n          onMouseDown={(e) => handleResizeStart(e, 'ai-assistant')}\n        />\n      </div>\n\n      {/* Draggable Activity List or Feature View */}\n      {currentView === 'activity' ? (\n        <div \n          id=\"activity-list\"\n          className=\"draggable-panel activity-list-panel\"\n          style={{\n            left: `${positions['activity-list']?.x || 420}px`,\n            top: `${positions['activity-list']?.y || 80}px`,\n            width: `${sizes['activity-list']?.width || 500}px`,\n            height: `${sizes['activity-list']?.height || 400}px`\n          }}\n        >\n          <div \n            className=\"panel-header\"\n            onMouseDown={(e) => handleDragStart(e, 'activity-list')}\n          >\n            <div className=\"panel-title\">\n              <Activity size={18} />\n              <span>Activities</span>\n            </div>\n            <div className=\"panel-controls\">\n              <Move size={14} />\n            </div>\n          </div>\n          \n          <div className=\"panel-content\">\n            <div className=\"activity-list\">\n              {activities.map(activity => {\n                const Icon = activity.icon;\n                return (\n                  <div\n                    key={activity.id}\n                    className={`activity-item ${activity.status}`}\n                    onClick={() => handleActivityClick(activity)}\n                  >\n                    <div className=\"activity-icon\" style={{ backgroundColor: `${activity.color}15` }}>\n                      <Icon size={20} style={{ color: activity.color }} />\n                    </div>\n                    \n                    <div className=\"activity-content\">\n                      <div className=\"activity-header\">\n                        <h3>\n                          {activity.name}\n                          {activity.isNew && (\n                            <span style={{\n                              marginLeft: '8px',\n                              padding: '2px 6px',\n                              background: 'linear-gradient(135deg, #f59e0b 0%, #dc2626 100%)',\n                              borderRadius: '4px',\n                              fontSize: '10px',\n                              fontWeight: 'bold',\n                              color: 'white'\n                            }}>NEW</span>\n                          )}\n                        </h3>\n                        <span className={`activity-status ${activity.status}`}>\n                          {activity.status === 'ready' ? (\n                            <><Circle size={6} fill=\"currentColor\" /> Ready</>\n                          ) : activity.status === 'building' ? (\n                            <><Zap size={10} /> Building</>\n                          ) : (\n                            <><Clock size={10} /> Pending</>\n                          )}\n                        </span>\n                      </div>\n                      <p className=\"activity-description\">{activity.description}</p>\n                    </div>\n                    \n                    <ChevronRight size={18} className=\"activity-arrow\" />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          \n          <div \n            className=\"resize-handle\"\n            onMouseDown={(e) => handleResizeStart(e, 'activity-list')}\n          />\n        </div>\n      ) : (\n        <div \n          id=\"feature-view\"\n          className={`draggable-panel feature-panel ${isTransitioning ? 'transitioning' : ''}`}\n          style={{\n            left: `${positions['feature-view']?.x || 420}px`,\n            top: `${positions['feature-view']?.y || 80}px`,\n            width: `${sizes['feature-view']?.width || 800}px`,\n            height: `${sizes['feature-view']?.height || 600}px`\n          }}\n        >\n          <div \n            className=\"panel-header\"\n            onMouseDown={(e) => handleDragStart(e, 'feature-view')}\n          >\n            <button onClick={handleBackToActivities} className=\"back-button\">\n              <ArrowLeft size={16} />\n              Back\n            </button>\n            <div className=\"panel-title\">\n              {selectedFeature && React.createElement(selectedFeature.icon, { \n                size: 18, \n                style: { color: selectedFeature.color } \n              })}\n              <span>{selectedFeature?.name}</span>\n            </div>\n            <div className=\"panel-controls\">\n              <Move size={14} />\n            </div>\n          </div>\n          \n          <div className=\"panel-content\">\n            {selectedFeature?.id === 'content-generator' && (\n              <ContentGeneratorModule\n                onAIMessage={handleContentGeneratorMessage}\n                generatedContent={generatedContent}\n                onContentUpdate={handleContentUpdate}\n                currentContentType={currentContentType}\n                // NEW: Niv real-time integration props\n                nivGeneratedData={nivGeneratedData}\n                onNivEdit={async (editData) => {\n                  // This will be handled by the onNivEdit prop of NivStrategicOrchestrator\n                  // For now, just trigger a message to Niv\n                  setMessages(prev => [...prev, {\n                    id: Date.now(),\n                    type: 'user',\n                    content: editData.editRequest,\n                    timestamp: new Date()\n                  }]);\n                }}\n                isNivGenerating={isNivGenerating}\n              />\n            )}\n            {selectedFeature?.id === 'opportunity-engine' && (\n              <OpportunityEngine\n                onAIMessage={(message, featureId, contentType) => {\n                  // If featureId is specified, switch to that feature\n                  if (featureId === 'content-generator') {\n                    const contentGenActivity = activities.find(a => a.id === 'content-generator');\n                    if (contentGenActivity) {\n                      handleActivityClick(contentGenActivity);\n                      // Send message after switching to Content Generator\n                      setTimeout(() => {\n                        sendMessage(message, null, contentType);\n                      }, 500);\n                    }\n                  } else {\n                    // Just send the message normally\n                    sendMessage(message);\n                  }\n                }}\n                isDragging={draggedElement === 'feature-view'}\n              />\n            )}\n            {selectedFeature?.id === 'strategic-planning' && (\n              <StrategicPlanningOptimized \n                initialData={strategicPlanData}\n                onDataChange={setStrategicPlanData}\n              />\n            )}\n          </div>\n          \n          <div \n            className=\"resize-handle\"\n            onMouseDown={(e) => handleResizeStart(e, 'feature-view')}\n          />\n        </div>\n      )}\n\n      {/* Draggable Notepad Panel */}\n      {showNotepad && (\n        <div \n          id=\"notepad\"\n          className=\"draggable-panel notepad-panel\"\n          style={{\n            left: `${positions['notepad']?.x || 940}px`,\n            top: `${positions['notepad']?.y || 80}px`,\n            width: `${sizes['notepad']?.width || 350}px`,\n            height: `${sizes['notepad']?.height || 400}px`,\n            display: notepadMinimized ? 'none' : 'block'\n          }}\n        >\n          <div \n            className=\"panel-header\"\n            onMouseDown={(e) => handleDragStart(e, 'notepad')}\n          >\n            <div className=\"panel-title\">\n              <StickyNote size={18} />\n              <span>Notes & Reminders</span>\n              <span className=\"notes-count-badge\">{notes.length}</span>\n            </div>\n            <div className=\"panel-controls\">\n              <button onClick={() => setNotepadMinimized(!notepadMinimized)}>\n                {notepadMinimized ? <Maximize2 size={14} /> : <Minimize2 size={14} />}\n              </button>\n              <button onClick={() => setShowNotepad(false)}>\n                <X size={14} />\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"panel-content\">\n            <div className=\"notepad-content\">\n              <div className=\"notepad-input-section\">\n                <textarea\n                  value={newNote}\n                  onChange={(e) => setNewNote(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' && e.ctrlKey) {\n                      e.preventDefault();\n                      addNote();\n                    }\n                  }}\n                  placeholder=\"Type a note or reminder... (Ctrl+Enter to save)\"\n                  className=\"notepad-textarea\"\n                  rows={3}\n                />\n                <button \n                  className=\"notepad-add-button\"\n                  onClick={addNote}\n                  disabled={!newNote.trim()}\n                >\n                  <Plus size={14} />\n                  Add Note\n                </button>\n              </div>\n              \n              <div className=\"notepad-notes-list\">\n                {notes.length === 0 ? (\n                  <div className=\"notepad-no-notes\">\n                    <StickyNote size={24} />\n                    <p>No notes yet</p>\n                  </div>\n                ) : (\n                  notes.map(note => (\n                    <div key={note.id} className=\"notepad-note-item\">\n                      <div className=\"notepad-note-content\">\n                        <p className=\"notepad-note-text\">{note.text}</p>\n                        <span className=\"notepad-note-timestamp\">\n                          {new Date(note.timestamp).toLocaleDateString()} {new Date(note.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                        </span>\n                      </div>\n                      <button \n                        className=\"notepad-delete-button\"\n                        onClick={() => deleteNote(note.id)}\n                      >\n                        <X size={14} />\n                      </button>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div \n            className=\"resize-handle\"\n            onMouseDown={(e) => handleResizeStart(e, 'notepad')}\n          />\n        </div>\n      )}\n\n      {/* New Project Modal */}\n      {showNewProjectModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowNewProjectModal(false)}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>Create New Project</h2>\n              <button onClick={() => setShowNewProjectModal(false)} className=\"close-button\">\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                value={newProjectName}\n                onChange={(e) => setNewProjectName(e.target.value)}\n                placeholder=\"Enter project name...\"\n                className=\"project-name-input\"\n                autoFocus\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button \n                className=\"cancel-button\"\n                onClick={() => setShowNewProjectModal(false)}\n              >\n                Cancel\n              </button>\n              <button \n                className=\"create-button\"\n                onClick={handleCreateProject}\n                disabled={!newProjectName.trim()}\n              >\n                Create Project\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RailwayDraggable;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,0BAA0B,MAAM,8BAA8B;AACrE,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,kBAAkB,MAAM,gCAAgC;AAC/D,SACEC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,UAAU,EAAEC,aAAa,EACtDC,SAAS,EAAEC,OAAO,EAAEC,IAAI,EAAEC,WAAW,EAAEC,YAAY,EAAEC,CAAC,EACtDC,QAAQ,EAAEC,aAAa,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAC3DC,SAAS,EAAEC,SAAS,EAAEC,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EACzDC,MAAM,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EACtDC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,QACzD,cAAc;AACrB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,oBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,mBAAA,EAAAC,oBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,cAAA,EAAAC,eAAA;EAC7B,MAAM;IAAEC;EAAU,CAAC,GAAGrE,SAAS,CAAC,CAAC;EACjC,MAAMsE,QAAQ,GAAGrE,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEsE,aAAa;IAAEC,QAAQ;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGxE,UAAU,CAAC,CAAC;EAC9E,MAAM;IAAEyE,IAAI;IAAEC;EAAO,CAAC,GAAGzE,OAAO,CAAC,CAAC;EAClC,MAAM0E,cAAc,GAAG/E,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMgF,QAAQ,GAAGhF,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAM,CAACiF,WAAW,EAAEC,cAAc,CAAC,GAAGpF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACqF,eAAe,EAAEC,kBAAkB,CAAC,GAAGtF,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuF,eAAe,EAAEC,kBAAkB,CAAC,GAAGxF,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAACyF,OAAO,EAAEC,UAAU,CAAC,GAAG1F,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2F,QAAQ,EAAEC,WAAW,CAAC,GAAG5F,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6F,OAAO,EAAEC,UAAU,CAAC,GAAG9F,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+F,aAAa,EAAEC,gBAAgB,CAAC,GAAGhG,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiG,WAAW,EAAEC,cAAc,CAAC,GAAGlG,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAM,CAACmG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpG,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACqG,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtG,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACuG,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxG,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACyG,uBAAuB,EAAEC,0BAA0B,CAAC,GAAG1G,QAAQ,CAAC,IAAI,CAAC;;EAE5E;EACA,MAAM,CAAC2G,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5G,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6G,eAAe,EAAEC,kBAAkB,CAAC,GAAG9G,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAAC+G,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhH,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAACiH,cAAc,EAAEC,iBAAiB,CAAC,GAAGlH,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmH,eAAe,EAAEC,kBAAkB,CAAC,GAAGpH,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACqH,SAAS,EAAEC,YAAY,CAAC,GAAGtH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuH,KAAK,EAAEC,QAAQ,CAAC,GAAGxH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACyH,UAAU,EAAEC,aAAa,CAAC,GAAG1H,QAAQ,CAAC;IAAE2H,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;;EAE5D;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG9H,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC+H,eAAe,EAAEC,kBAAkB,CAAC,GAAGhI,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiI,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlI,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACmI,cAAc,EAAEC,iBAAiB,CAAC,GAAGpI,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqI,WAAW,EAAEC,cAAc,CAAC,GAAGtI,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuI,KAAK,EAAEC,QAAQ,CAAC,GAAGxI,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyI,OAAO,EAAEC,UAAU,CAAC,GAAG1I,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2I,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5I,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAM,CAAC6I,SAAS,CAAC,GAAG7I,QAAQ,CAAC,MAAM,WAAW8I,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;;EAEtG;EACA,MAAMC,UAAU,GAAG,CACjB;IACEC,EAAE,EAAE,mBAAmB;IACvBC,IAAI,EAAE,mBAAmB;IACzBC,IAAI,EAAExI,QAAQ;IACdyI,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,6BAA6B;IAC1CC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,yBAAyB;IAChCC,SAAS,EAAEpJ,sBAAsB;IACjCqJ,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,oBAAoB;IACxBC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAEvI,KAAK;IACXwI,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,iCAAiC;IAC9CC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,yBAAyB;IAChCG,IAAI,EAAE,aAAarF,SAAS,aAAa;IACzCoF,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,oBAAoB;IACxBC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAEzI,KAAK;IACX0I,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,gCAAgC;IAC7CC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,qBAAqB;IAC5BC,SAAS,EAAEnJ,0BAA0B;IACrCoJ,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,oBAAoB;IACxBC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE9G,GAAG;IACT+G,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,qCAAqC;IAClDC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,wBAAwB;IAC/BC,SAAS,EAAE,mBAAmB;IAC9BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,cAAc;IAClBC,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAEnH,QAAQ;IACdoH,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,wBAAwB;IACrCC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,oBAAoB;IAC3BG,IAAI,EAAE,aAAarF,SAAS,EAAE;IAC9BoF,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,wBAAwB;IAC5BC,IAAI,EAAE,0BAA0B;IAChCC,IAAI,EAAEpH,QAAQ;IACdqH,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,4CAA4C;IACzDC,MAAM,EAAE,QAAQ;IAChBC,KAAK,EAAE,wBAAwB;IAC/BG,IAAI,EAAE,aAAarF,SAAS,2BAA2B;IACvDoF,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,gBAAgB;IACpBC,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAErI,aAAa;IACnBsI,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,0BAA0B;IACvCC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,kBAAkB;IACzBG,IAAI,EAAE,aAAarF,SAAS,iBAAiB;IAC7CoF,QAAQ,EAAE;EACZ,CAAC,EACD;IACER,EAAE,EAAE,SAAS;IACbC,IAAI,EAAE,qBAAqB;IAC3BC,IAAI,EAAEpI,SAAS;IACfqI,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE,gCAAgC;IAC7CC,MAAM,EAAE,OAAO;IACfC,KAAK,EAAE,qBAAqB;IAC5BG,IAAI,EAAE,aAAarF,SAAS,UAAU;IACtCoF,QAAQ,EAAE;EACZ,CAAC,CACF;;EAED;EACA5J,SAAS,CAAC,MAAM;IACd;IACA,MAAM8J,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC;IACnE,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAE3D3C,YAAY,CAACyC,cAAc,GAAGI,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC,GAAG;MACzD,cAAc,EAAE;QAAEpC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAG,CAAC;MAChC,eAAe,EAAE;QAAED,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAG,CAAC;MAClC,cAAc,EAAE;QAAED,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAG,CAAC;MACjC,SAAS,EAAE;QAAED,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAG;IAC7B,CAAC,CAAC;IAEFJ,QAAQ,CAAC0C,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,GAAG;MAC7C,cAAc,EAAE;QAAEG,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAC3C,eAAe,EAAE;QAAED,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAC5C,cAAc,EAAE;QAAED,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAC3C,SAAS,EAAE;QAAED,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IACvC,CAAC,CAAC;;IAEF;IACAzF,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5E,SAAS,CAAC,MAAM;IACd2F,WAAW,CAAC,CAAC;MACXyD,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;MACdwB,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE,+RAA+R;MACxSC,SAAS,EAAE,IAAI3B,IAAI,CAAC;IACtB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAM4B,UAAU,GAAGvK,WAAW,CAAC,MAAM;IACnC6J,YAAY,CAACW,OAAO,CAAC,sBAAsB,EAAER,IAAI,CAACS,SAAS,CAACvD,SAAS,CAAC,CAAC;IACvE2C,YAAY,CAACW,OAAO,CAAC,kBAAkB,EAAER,IAAI,CAACS,SAAS,CAACrD,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,CAACF,SAAS,EAAEE,KAAK,CAAC,CAAC;;EAEtB;EACA,MAAMsD,eAAe,GAAGA,CAACC,CAAC,EAAEC,SAAS,KAAK;IACxCD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB9D,iBAAiB,CAAC6D,SAAS,CAAC;IAC5B,MAAME,IAAI,GAAGH,CAAC,CAACI,aAAa,CAACC,aAAa,CAACC,qBAAqB,CAAC,CAAC;IAClE1D,aAAa,CAAC;MACZC,CAAC,EAAEmD,CAAC,CAACO,OAAO,GAAGJ,IAAI,CAACK,IAAI;MACxB1D,CAAC,EAAEkD,CAAC,CAACS,OAAO,GAAGN,IAAI,CAACO;IACtB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGtL,WAAW,CAAE2K,CAAC,IAAK;IACxC,IAAI,CAAC7D,cAAc,EAAE;IAErB,MAAMyE,WAAW,GAAG;MAClB/D,CAAC,EAAEqB,IAAI,CAAC2C,GAAG,CAAC,CAAC,EAAEb,CAAC,CAACO,OAAO,GAAG5D,UAAU,CAACE,CAAC,CAAC;MACxCC,CAAC,EAAEoB,IAAI,CAAC2C,GAAG,CAAC,EAAE,EAAEb,CAAC,CAACS,OAAO,GAAG9D,UAAU,CAACG,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEDN,YAAY,CAACsE,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAAC3E,cAAc,GAAGyE;IACpB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACzE,cAAc,EAAEQ,UAAU,CAAC,CAAC;;EAEhC;EACA,MAAMoE,aAAa,GAAG1L,WAAW,CAAC,MAAM;IACtC,IAAI8G,cAAc,EAAE;MAClByD,UAAU,CAAC,CAAC;IACd;IACAxD,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC,EAAE,CAACD,cAAc,EAAEyD,UAAU,CAAC,CAAC;;EAEhC;EACA,MAAMoB,iBAAiB,GAAGA,CAAChB,CAAC,EAAEC,SAAS,KAAK;IAC1CD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClBF,CAAC,CAACiB,eAAe,CAAC,CAAC;IACnB3E,kBAAkB,CAAC2D,SAAS,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMiB,gBAAgB,GAAG7L,WAAW,CAAE2K,CAAC,IAAK;IAC1C,IAAI,CAAC3D,eAAe,EAAE;IAEtB,MAAM8E,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAChF,eAAe,CAAC;IACxD,IAAI,CAAC8E,OAAO,EAAE;IAEd,MAAMhB,IAAI,GAAGgB,OAAO,CAACb,qBAAqB,CAAC,CAAC;IAC5C,MAAMgB,OAAO,GAAG;MACd/B,KAAK,EAAErB,IAAI,CAAC2C,GAAG,CAAC,GAAG,EAAEb,CAAC,CAACO,OAAO,GAAGJ,IAAI,CAACK,IAAI,CAAC;MAC3ChB,MAAM,EAAEtB,IAAI,CAAC2C,GAAG,CAAC,GAAG,EAAEb,CAAC,CAACS,OAAO,GAAGN,IAAI,CAACO,GAAG;IAC5C,CAAC;IAEDhE,QAAQ,CAACoE,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACzE,eAAe,GAAGiF;IACrB,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACjF,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMkF,eAAe,GAAGlM,WAAW,CAAC,MAAM;IACxC,IAAIgH,eAAe,EAAE;MACnBuD,UAAU,CAAC,CAAC;IACd;IACAtD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACD,eAAe,EAAEuD,UAAU,CAAC,CAAC;;EAEjC;EACAzK,SAAS,CAAC,MAAM;IACd,IAAIgH,cAAc,EAAE;MAClBqF,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEd,cAAc,CAAC;MACpDa,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEV,aAAa,CAAC;MACjD,OAAO,MAAM;QACXS,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEf,cAAc,CAAC;QACvDa,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;MACtD,CAAC;IACH;EACF,CAAC,EAAE,CAAC5E,cAAc,EAAEwE,cAAc,EAAEI,aAAa,CAAC,CAAC;EAEnD5L,SAAS,CAAC,MAAM;IACd,IAAIkH,eAAe,EAAE;MACnBmF,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEP,gBAAgB,CAAC;MACtDM,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,eAAe,CAAC;MACnD,OAAO,MAAM;QACXC,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAER,gBAAgB,CAAC;QACzDM,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,eAAe,CAAC;MACxD,CAAC;IACH;EACF,CAAC,EAAE,CAAClF,eAAe,EAAE6E,gBAAgB,EAAEK,eAAe,CAAC,CAAC;;EAExD;EACA,MAAMI,mBAAmB,GAAIC,QAAQ,IAAK;IACxC,IAAIA,QAAQ,CAAC5C,IAAI,IAAI,CAAC4C,QAAQ,CAAC9C,SAAS,EAAE;MACxC;MACAlF,QAAQ,CAACgI,QAAQ,CAAC5C,IAAI,CAAC;MACvB;IACF;;IAEA;IACAtE,kBAAkB,CAAC,IAAI,CAAC;IACxBmH,UAAU,CAAC,MAAM;MACfrH,kBAAkB,CAACoH,QAAQ,CAAC;MAC5BtH,cAAc,CAAC,SAAS,CAAC;MACzBI,kBAAkB,CAAC,KAAK,CAAC;;MAEzB;MACA;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACA,MAAMoH,sBAAsB,GAAGA,CAAA,KAAM;IACnCpH,kBAAkB,CAAC,IAAI,CAAC;IACxBmH,UAAU,CAAC,MAAM;MACfvH,cAAc,CAAC,UAAU,CAAC;MAC1BE,kBAAkB,CAAC,IAAI,CAAC;MACxBU,gBAAgB,CAAC,KAAK,CAAC;MACvBI,mBAAmB,CAAC,EAAE,CAAC;MACvBZ,kBAAkB,CAAC,KAAK,CAAC;;MAEzB;MACA;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACA,MAAMqH,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAC1E,cAAc,CAAC2E,IAAI,CAAC,CAAC,EAAE;IAE5B,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMnM,kBAAkB,CAACoM,aAAa,CAAC;QACxD1D,IAAI,EAAEnB,cAAc;QACpB8E,OAAO,EAAElI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsE;MACjB,CAAC,CAAC;MAEF,IAAI0D,UAAU,EAAE;QACd,MAAMlI,aAAa,CAAC,CAAC;QACrBC,aAAa,CAACiI,UAAU,CAAC;QACzBrI,QAAQ,CAAC,aAAaqI,UAAU,CAAC1D,EAAE,EAAE,CAAC;QACtCnB,sBAAsB,CAAC,KAAK,CAAC;QAC7BE,iBAAiB,CAAC,EAAE,CAAC;MACvB;IACF,CAAC,CAAC,OAAO8E,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAME,mBAAmB,GAAIC,OAAO,IAAK;IACvCvI,aAAa,CAACuI,OAAO,CAAC;IACtB3I,QAAQ,CAAC,aAAa2I,OAAO,CAAChE,EAAE,EAAE,CAAC;IACnCrB,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA/H,SAAS,CAAC,MAAM;IACd;IACA,MAAMqN,UAAU,GAAGtD,YAAY,CAACC,OAAO,CAAC,SAASxF,SAAS,EAAE,CAAC;IAC7D,IAAI6I,UAAU,EAAE;MACd9E,QAAQ,CAAC2B,IAAI,CAACC,KAAK,CAACkD,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAAC7I,SAAS,CAAC,CAAC;EAEf,MAAM8I,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI,CAAC9E,OAAO,CAACqE,IAAI,CAAC,CAAC,EAAE;IAErB,MAAMU,IAAI,GAAG;MACXnE,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;MACd0E,IAAI,EAAEhF,OAAO,CAACqE,IAAI,CAAC,CAAC;MACpBrC,SAAS,EAAE,IAAI3B,IAAI,CAAC,CAAC,CAAC4E,WAAW,CAAC;IACpC,CAAC;IAED,MAAMC,YAAY,GAAG,CAAC,GAAGpF,KAAK,EAAEiF,IAAI,CAAC;IACrChF,QAAQ,CAACmF,YAAY,CAAC;IACtB3D,YAAY,CAACW,OAAO,CAAC,SAASlG,SAAS,EAAE,EAAE0F,IAAI,CAACS,SAAS,CAAC+C,YAAY,CAAC,CAAC;IACxEjF,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMkF,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMF,YAAY,GAAGpF,KAAK,CAACuF,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACnE,EAAE,KAAKwE,MAAM,CAAC;IAC7DrF,QAAQ,CAACmF,YAAY,CAAC;IACtB3D,YAAY,CAACW,OAAO,CAAC,SAASlG,SAAS,EAAE,EAAE0F,IAAI,CAACS,SAAS,CAAC+C,YAAY,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMI,6BAA6B,GAAIC,GAAG,IAAK;IAC7Cb,OAAO,CAACc,GAAG,CAAC,2DAA2D,EAAED,GAAG,CAAC;IAE7E,IAAIA,GAAG,CAACzD,IAAI,KAAK,cAAc,EAAE;MAC/BvE,gBAAgB,CAAC,IAAI,CAAC;MACtBkI,iBAAiB,CAACF,GAAG,CAAC;IACxB,CAAC,MAAM,IAAIA,GAAG,CAACzD,IAAI,KAAK,eAAe,EAAE;MACvC;MACA;MACA,MAAM4D,UAAU,GAAG;QACjB9E,EAAE,EAAE,QAAQP,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QACnEoB,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEwD,GAAG,CAACxD,OAAO;QACpBC,SAAS,EAAE,IAAI3B,IAAI,CAAC;MACtB,CAAC;MACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEuC,UAAU,CAAC,CAAC;IAC5C,CAAC,MAAM,IAAIH,GAAG,CAACzD,IAAI,KAAK,MAAM,IAAIyD,GAAG,CAACxD,OAAO,EAAE;MAC7C;MACA,MAAM4D,OAAO,GAAG;QACd/E,EAAE,EAAE,gBAAgBP,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC3EoB,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEwD,GAAG,CAACxD,OAAO;QACpBC,SAAS,EAAE,IAAI3B,IAAI,CAAC;MACtB,CAAC;MACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEwC,OAAO,CAAC,CAAC;;MAEvC;MACA,IAAIJ,GAAG,CAACK,aAAa,EAAE;QACrB7H,wBAAwB,CAACwH,GAAG,CAACK,aAAa,CAAC;QAC3C3H,0BAA0B,CAACsH,GAAG,CAACM,eAAe,CAAC;MACjD;;MAEA;MACApI,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACA;MACA;MACAqI,WAAW,CAACP,GAAG,CAACxD,OAAO,EAAEwD,GAAG,CAACK,aAAa,EAAEL,GAAG,CAACM,eAAe,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMJ,iBAAiB,GAAG,MAAOM,OAAO,IAAK;IAC3C,MAAM;MAAEhE,OAAO,EAAEiE,UAAU;MAAEC,cAAc;MAAEC;IAAS,CAAC,GAAGH,OAAO;IAEjE,MAAMJ,OAAO,GAAG;MACd/E,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;MACdwB,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE,8BAA8BiE,UAAU,GAAG;MACpDhE,SAAS,EAAE,IAAI3B,IAAI,CAAC;IACtB,CAAC;IACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEwC,OAAO,CAAC,CAAC;IAEvCtI,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAM8I,IAAI,GAAG,MAAMhO,kBAAkB,CAACiO,iBAAiB,CACrD,sDAAsDJ,UAAU,0BAA0BC,cAAc,EAAE,EAC1G;QACEI,IAAI,EAAE,SAAS;QACfjG,SAAS,EAAEA,SAAS;QACpBkG,MAAM,EAAE,mBAAmB;QAC3BC,OAAO,EAAE,IAAI;QACbC,WAAW,EAAEN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,WAAW;QAClCC,IAAI,EAAEP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEO;MAClB,CACF,CAAC;MAED,IAAIN,IAAI,CAACO,OAAO,IAAIP,IAAI,CAACQ,QAAQ,EAAE;QACjC;QACAhJ,mBAAmB,CAACwI,IAAI,CAACQ,QAAQ,CAAC;;QAElC;QACA,MAAMC,UAAU,GAAG;UACjBhG,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;UACdwB,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE,mFAAmF;UAC5FC,SAAS,EAAE,IAAI3B,IAAI,CAAC;QACtB,CAAC;QACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEyD,UAAU,CAAC,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMoC,QAAQ,GAAG;QACfjG,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;QACdwB,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,mDAAmD;QAC5DC,SAAS,EAAE,IAAI3B,IAAI,CAAC;MACtB,CAAC;MACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE0D,QAAQ,CAAC,CAAC;IAC1C,CAAC,SAAS;MACRxJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMyJ,cAAc,GAAGA,CAAA,KAAM;IAC3BpC,OAAO,CAACc,GAAG,CAAC,+BAA+B,CAAC;;IAE5C;IACA7I,cAAc,CAAC,UAAU,CAAC;IAC1BE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,kBAAkB,CAAC,KAAK,CAAC;;IAEzB;IACAI,WAAW,CAAC,EAAE,CAAC;IACfF,UAAU,CAAC,EAAE,CAAC;IACdI,UAAU,CAAC,KAAK,CAAC;IACjBE,gBAAgB,CAAC,KAAK,CAAC;;IAEvB;IACAI,mBAAmB,CAAC,EAAE,CAAC;IACvBE,qBAAqB,CAAC,IAAI,CAAC;IAC3BE,wBAAwB,CAAC,IAAI,CAAC;IAC9BE,0BAA0B,CAAC,IAAI,CAAC;;IAEhC;IACAQ,iBAAiB,CAAC,IAAI,CAAC;IACvBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBE,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEZ;IACAM,kBAAkB,CAAC,KAAK,CAAC;IACzBE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,sBAAsB,CAAC,KAAK,CAAC;IAC7BI,cAAc,CAAC,KAAK,CAAC;;IAErB;IACA,MAAMkH,UAAU,GAAG;MACjBnG,EAAE,EAAE,WAAWP,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MAC3BwB,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE,iEAAiE;MAC1EC,SAAS,EAAE,IAAI3B,IAAI,CAAC;IACtB,CAAC;IACD6D,UAAU,CAAC,MAAM;MACf/G,WAAW,CAAC,CAAC4J,UAAU,CAAC,CAAC;IAC3B,CAAC,EAAE,GAAG,CAAC;IAEPrC,OAAO,CAACc,GAAG,CAAC,4BAA4B,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMM,WAAW,GAAG,MAAAA,CAAOd,IAAI,EAAEY,aAAa,GAAG,IAAI,EAAEC,eAAe,GAAG,IAAI,KAAK;IAChF,IAAI,EAACb,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEX,IAAI,CAAC,CAAC,GAAE;IAEnBK,OAAO,CAACc,GAAG,CAAC,0BAA0B,EAAER,IAAI,CAAC;;IAE7C;IACA,MAAMgC,MAAM,GAAGpB,aAAa,IAAI9H,qBAAqB;IACrD,MAAMmJ,QAAQ,GAAGpB,eAAe,IAAI7H,uBAAuB;;IAE3D;IACA,MAAMkJ,gBAAgB,GACpBlC,IAAI,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,oBAAoB,CAAC,IACjDpC,IAAI,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,eAAe,CAAC,IAC5CpC,IAAI,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC,IAC3CpC,IAAI,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,MAAM,CAAC,IACnCpC,IAAI,CAACmC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,IACpC,CAAAxK,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB;;IAE7C;IACA,IAAIsG,gBAAgB,IAAI,CAAAtK,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB,EAAE;MACnE,MAAMyG,UAAU,GAAG1G,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,mBAAmB,CAAC;MACrEoD,mBAAmB,CAACqD,UAAU,CAAC;IACjC;IAEAhK,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMmK,UAAU,GAAG,CAAC,EAAE9J,gBAAgB,IAAIA,gBAAgB,CAAC2G,IAAI,CAAC,CAAC,CAAC;MAElE,MAAM8B,IAAI,GAAG,MAAMhO,kBAAkB,CAACiO,iBAAiB,CAACpB,IAAI,EAAE;QAC5DqB,IAAI,EAAEa,gBAAgB,GAAG,SAAS,GAAG,SAAS;QAC9C9G,SAAS,EAAEA,SAAS;QACpBkG,MAAM,EAAEY,gBAAgB,GAAG,mBAAmB,GAAG,SAAS;QAC1DtB,aAAa,EAAEoB,MAAM;QACrBnB,eAAe,EAAEoB,QAAQ,IAAIjC,IAAI;QAAE;QACnCyC,mBAAmB,EAAED,UAAU;QAC/BvB,cAAc,EAAEvI;MAClB,CAAC,CAAC;MAEF,IAAIyI,IAAI,CAACO,OAAO,IAAIP,IAAI,CAACQ,QAAQ,EAAE;QACjC,IAAIR,IAAI,CAACuB,kBAAkB,EAAE;UAC3B;UACA,IAAI,CAAA9K,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB,EAAE;YAC/C,MAAMyG,UAAU,GAAG1G,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,mBAAmB,CAAC;YACrEoD,mBAAmB,CAACqD,UAAU,CAAC;UACjC;UAEA1J,mBAAmB,CAACwI,IAAI,CAACQ,QAAQ,CAAC;UAClCgB,iBAAiB,CAACxB,IAAI,CAACQ,QAAQ,CAAC;UAEhC,MAAMjB,UAAU,GAAG;YACjB9E,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;YACdwB,IAAI,EAAE,QAAQ;YACdC,OAAO,EAAE,kFAAkF;YAC3FC,SAAS,EAAE,IAAI3B,IAAI,CAAC;UACtB,CAAC;UACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEuC,UAAU,CAAC,CAAC;QAC5C,CAAC,MAAM;UACL,MAAMkC,KAAK,GAAG;YACZhH,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;YACdwB,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAEoE,IAAI,CAACQ,QAAQ;YACtB3E,SAAS,EAAE,IAAI3B,IAAI,CAAC;UACtB,CAAC;UACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEyE,KAAK,CAAC,CAAC;QACvC;MACF;IACF,CAAC,CAAC,OAAOnD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMoC,QAAQ,GAAG;QACfjG,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;QACdwB,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE,uDAAuD;QAChEC,SAAS,EAAE,IAAI3B,IAAI,CAAC;MACtB,CAAC;MACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE0D,QAAQ,CAAC,CAAC;IAC1C,CAAC,SAAS;MACRxJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMwK,wBAAwB,GAAG,MAAOC,MAAM,IAAK;IACjD;IACA,IAAI,CAAAlL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB,EAAE;MAC/C,MAAMyG,UAAU,GAAG1G,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,mBAAmB,CAAC;MACrEoD,mBAAmB,CAACqD,UAAU,CAAC;;MAE/B;MACA,MAAM,IAAIU,OAAO,CAACC,OAAO,IAAI9D,UAAU,CAAC8D,OAAO,EAAE,GAAG,CAAC,CAAC;IACxD;IAEA3K,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAM4K,MAAM,GAAG,YAAYH,MAAM,CAAChG,IAAI,UAAUgG,MAAM,CAACI,KAAK,QAAQJ,MAAM,CAACK,QAAQ,oBAAoBL,MAAM,CAACrB,IAAI,UAAUqB,MAAM,CAACM,SAAS,IAAI,EAAE,EAAE;MAEpJ,MAAMjC,IAAI,GAAG,MAAMhO,kBAAkB,CAACiO,iBAAiB,CAAC6B,MAAM,EAAE;QAC9D5B,IAAI,EAAE,SAAS;QACfjG,SAAS,EAAEA,SAAS;QACpBkG,MAAM,EAAE,mBAAmB;QAC3BE,WAAW,EAAEsB,MAAM,CAAChG,IAAI;QACxB8D,aAAa,EAAEkC,MAAM,CAAChG,IAAI;QAAG;QAC7B+D,eAAe,EAAEiC,MAAM,CAAChG,IAAI;QAC5BuG,gBAAgB,EAAE,IAAI;QACtBC,uBAAuB,EAAE;MAC3B,CAAC,CAAC;MAEF,IAAInC,IAAI,CAACO,OAAO,IAAIP,IAAI,CAACQ,QAAQ,EAAE;QACjC;QACAhJ,mBAAmB,CAACwI,IAAI,CAACQ,QAAQ,CAAC;QAClC9I,qBAAqB,CAACiK,MAAM,CAAChG,IAAI,CAAC;;QAElC;QACA,MAAM4D,UAAU,GAAG;UACjB9E,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;UACdwB,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE,mHAAmH;UAC5HC,SAAS,EAAE,IAAI3B,IAAI,CAAC;QACtB,CAAC;QACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEuC,UAAU,CAAC,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,SAAS;MACRpH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMkL,YAAY,GAAIlG,CAAC,IAAK;IAC1BA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvF,OAAO,CAACqH,IAAI,CAAC,CAAC,IAAIjH,OAAO,EAAE;IAEhC,MAAMuI,OAAO,GAAG;MACd/E,EAAE,EAAE,QAAQP,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MACnEoB,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE/E,OAAO;MAChBgF,SAAS,EAAE,IAAI3B,IAAI,CAAC;IACtB,CAAC;IACDlD,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEwC,OAAO,CAAC,CAAC;IAEvCG,WAAW,CAAC9I,OAAO,CAAC;IACpBC,UAAU,CAAC,EAAE,CAAC;;IAEd;IACAiH,UAAU,CAAC,MAAM;MAAA,IAAAsE,iBAAA;MACf,CAAAA,iBAAA,GAAA/L,QAAQ,CAACgM,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;IAC3B,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAI3D,IAAI,IAAK;IACzC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC4D,MAAM,GAAG,GAAG,EAAE,OAAO,KAAK;IAE5C,MAAMC,UAAU,GAAG,CACjB,uBAAuB,EACvB,OAAO,EACP,UAAU,EACV,IAAI,EACJ,WAAW,EACX,GAAG,EACH,gBAAgB,CACjB;IAED,OAAOA,UAAU,CAACC,IAAI,CAACC,SAAS,IAAI/D,IAAI,CAACoC,QAAQ,CAAC2B,SAAS,CAAC,CAAC;EAC/D,CAAC;;EAED;EACA,MAAMpB,iBAAiB,GAAI3C,IAAI,IAAK;IAClC,IAAIA,IAAI,CAACoC,QAAQ,CAAC,uBAAuB,CAAC,EAAE;MAC1CvJ,qBAAqB,CAAC,eAAe,CAAC;IACxC,CAAC,MAAM,IAAImH,IAAI,CAACoC,QAAQ,CAAC,IAAI,CAAC,IAAIpC,IAAI,CAACoC,QAAQ,CAAC,WAAW,CAAC,EAAE;MAC5DvJ,qBAAqB,CAAC,QAAQ,CAAC;IACjC,CAAC,MAAM,IAAImH,IAAI,CAACoC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC7BvJ,qBAAqB,CAAC,aAAa,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMmL,mBAAmB,GAAIC,UAAU,IAAK;IAC1CtL,mBAAmB,CAACsL,UAAU,CAAC;IAC/B,IAAIA,UAAU,IAAI,CAAC3L,aAAa,EAAE;MAChCC,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;;EAED;EACA/F,SAAS,CAAC,MAAM;IAAA,IAAA0R,qBAAA;IACd,CAAAA,qBAAA,GAAA1M,cAAc,CAACiM,OAAO,cAAAS,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAAClM,QAAQ,CAAC,CAAC;;EAEd;EACA1F,SAAS,CAAC,MAAM;IACd,IAAIiF,QAAQ,CAACgM,OAAO,EAAE;MACpBhM,QAAQ,CAACgM,OAAO,CAACY,KAAK,CAACxH,MAAM,GAAG,MAAM;MACtCpF,QAAQ,CAACgM,OAAO,CAACY,KAAK,CAACxH,MAAM,GAAGtB,IAAI,CAAC+I,GAAG,CAAC7M,QAAQ,CAACgM,OAAO,CAACc,YAAY,EAAE,GAAG,CAAC,GAAG,IAAI;IACrF;EACF,CAAC,EAAE,CAACvM,OAAO,CAAC,CAAC;;EAEb;EACAxF,SAAS,CAAC,MAAM;IACd,IAAIiF,QAAQ,CAACgM,OAAO,IAAI,CAACrL,OAAO,EAAE;MAChC;MACA8G,UAAU,CAAC,MAAM;QAAA,IAAAsF,kBAAA;QACf,CAAAA,kBAAA,GAAA/M,QAAQ,CAACgM,OAAO,cAAAe,kBAAA,uBAAhBA,kBAAA,CAAkBd,KAAK,CAAC,CAAC;MAC3B,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAACxL,QAAQ,EAAEE,OAAO,CAAC,CAAC;EAEvB,oBACEzC,OAAA;IAAK8O,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAE1C/O,OAAA;MAAK8O,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B/O,OAAA;QAAK8O,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/O,OAAA;UAAK8O,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B/O,OAAA;YAAM8O,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9CnP,OAAA;YAAM0O,KAAK,EAAE;cAAEU,QAAQ,EAAE,MAAM;cAAEhJ,KAAK,EAAE,SAAS;cAAEiJ,UAAU,EAAE,MAAM;cAAEC,UAAU,EAAE;YAAM,CAAE;YAAAP,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G,CAAC,eAENnP,OAAA;UAAK8O,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B/O,OAAA;YACE8O,SAAS,EAAC,yBAAyB;YACnCS,OAAO,EAAEA,CAAA,KAAM3K,kBAAkB,CAAC,CAACD,eAAe,CAAE;YAAAoK,QAAA,gBAEpD/O,OAAA,CAACJ,MAAM;cAAC4P,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpBnP,OAAA;cAAA+O,QAAA,EAAO,CAAAxN,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE2E,IAAI,KAAI;YAAgB;cAAA8I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtDnP,OAAA,CAACN,WAAW;cAAC8P,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,EAERxK,eAAe,iBACd3E,OAAA;YAAK8O,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACzC/O,OAAA;cAAK8O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B/O,OAAA;gBAAA+O,QAAA,EAAM;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrBnP,OAAA;gBAAK0O,KAAK,EAAE;kBAAEe,OAAO,EAAE,MAAM;kBAAEC,GAAG,EAAE;gBAAM,CAAE;gBAAAX,QAAA,gBAC1C/O,OAAA;kBACE8O,SAAS,EAAC,oBAAoB;kBAC9BS,OAAO,EAAG7H,CAAC,IAAK;oBACdA,CAAC,CAACiB,eAAe,CAAC,CAAC;oBACnBlH,aAAa,CAAC,CAAC;kBACjB,CAAE;kBACFkO,KAAK,EAAC,kBAAkB;kBAAAZ,QAAA,eAExB/O,OAAA;oBAAKiH,KAAK,EAAC,IAAI;oBAACC,MAAM,EAAC,IAAI;oBAAC0I,OAAO,EAAC,WAAW;oBAACC,IAAI,EAAC,MAAM;oBAACC,MAAM,EAAC,cAAc;oBAACC,WAAW,EAAC,GAAG;oBAACC,aAAa,EAAC,OAAO;oBAACC,cAAc,EAAC,OAAO;oBAAAlB,QAAA,eAC5I/O,OAAA;sBAAMkQ,CAAC,EAAC;oBAAsF;sBAAAlB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7F;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACTnP,OAAA;kBACE8O,SAAS,EAAC,oBAAoB;kBAC9BS,OAAO,EAAEA,CAAA,KAAM;oBACb3K,kBAAkB,CAAC,KAAK,CAAC;oBACzBE,sBAAsB,CAAC,IAAI,CAAC;kBAC9B,CAAE;kBACF6K,KAAK,EAAC,aAAa;kBAAAZ,QAAA,eAEnB/O,OAAA,CAACP,IAAI;oBAAC+P,IAAI,EAAE;kBAAG;oBAAAR,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACZ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,EACL3N,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2O,GAAG,CAAClG,OAAO,iBACpBjK,OAAA;cAEE8O,SAAS,EAAE,iBAAiB7E,OAAO,CAAChE,EAAE,MAAK1E,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE0E,EAAE,IAAG,QAAQ,GAAG,EAAE,EAAG;cAC/EsJ,OAAO,EAAEA,CAAA,KAAMvF,mBAAmB,CAACC,OAAO,CAAE;cAAA8E,QAAA,gBAE5C/O,OAAA,CAACJ,MAAM;gBAAC4P,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACpBnP,OAAA;gBAAA+O,QAAA,EAAO9E,OAAO,CAAC/D;cAAI;gBAAA8I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,EAC1BlF,OAAO,CAAChE,EAAE,MAAK1E,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE0E,EAAE,kBAAIjG,OAAA,CAACf,MAAM;gBAACuQ,IAAI,EAAE,CAAE;gBAACK,IAAI,EAAC;cAAc;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GANvElF,OAAO,CAAChE,EAAE;cAAA+I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOT,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENnP,OAAA;UAAM8O,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eAENnP,OAAA;QAAK8O,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/O,OAAA;UACE8O,SAAS,EAAC,8BAA8B;UACxCS,OAAO,EAAEpD,cAAe;UACxBwD,KAAK,EAAC,2CAA2C;UAAAZ,QAAA,gBAEjD/O,OAAA,CAACF,SAAS;YAAC0P,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,WAEzB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETnP,OAAA;UACE8O,SAAS,EAAE,iBAAiB7J,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC1DsK,OAAO,EAAEA,CAAA,KAAMrK,cAAc,CAAC,CAACD,WAAW,CAAE;UAAA8J,QAAA,gBAE5C/O,OAAA,CAACH,UAAU;YAAC2P,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SAExB,EAAChK,KAAK,CAAC8I,MAAM,GAAG,CAAC,iBACfjO,OAAA;YAAM8O,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAE5J,KAAK,CAAC8I;UAAM;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CACnD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,eAETnP,OAAA;UAAQ8O,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC/B/O,OAAA,CAACT,QAAQ;YAACiQ,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,YAExB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETnP,OAAA;UAAK8O,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/O,OAAA;YACE8O,SAAS,EAAC,gBAAgB;YAC1BS,OAAO,EAAEA,CAAA,KAAM7K,kBAAkB,CAAC,CAACD,eAAe,CAAE;YAAAsK,QAAA,gBAEpD/O,OAAA,CAACR,IAAI;cAACgQ,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClBnP,OAAA;cAAA+O,QAAA,EAAO,CAAApN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyO,KAAK,KAAI;YAAM;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpCnP,OAAA,CAACN,WAAW;cAAC8P,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,EAER1K,eAAe,iBACdzE,OAAA;YAAK8O,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACzC/O,OAAA;cAAK8O,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3B/O,OAAA,CAACR,IAAI;gBAACgQ,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClBnP,OAAA;gBAAA+O,QAAA,gBACE/O,OAAA;kBAAK8O,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAE,CAAApN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuE,IAAI,MAAIvE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyO,KAAK;gBAAA;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC/DnP,OAAA;kBAAK8O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAEpN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyO;gBAAK;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNnP,OAAA;cAAK8O,SAAS,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACpCnP,OAAA;cAAQ8O,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC/B/O,OAAA,CAACT,QAAQ;gBAACiQ,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,oBAExB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnP,OAAA;cACE8O,SAAS,EAAC,eAAe;cACzBS,OAAO,EAAEA,CAAA,KAAM;gBACb3N,MAAM,CAAC,CAAC;gBACRN,QAAQ,CAAC,QAAQ,CAAC;cACpB,CAAE;cAAAyN,QAAA,gBAEF/O,OAAA,CAACL,MAAM;gBAAC6P,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,YAEtB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnP,OAAA;MACEiG,EAAE,EAAC,cAAc;MACjB6I,SAAS,EAAC,qCAAqC;MAC/CJ,KAAK,EAAE;QACLxG,IAAI,EAAE,GAAG,EAAA7H,oBAAA,GAAA4D,SAAS,CAAC,cAAc,CAAC,cAAA5D,oBAAA,uBAAzBA,oBAAA,CAA2BkE,CAAC,KAAI,EAAE,IAAI;QAC/C6D,GAAG,EAAE,GAAG,EAAA9H,qBAAA,GAAA2D,SAAS,CAAC,cAAc,CAAC,cAAA3D,qBAAA,uBAAzBA,qBAAA,CAA2BkE,CAAC,KAAI,EAAE,IAAI;QAC9CyC,KAAK,EAAE,GAAG,EAAA1G,kBAAA,GAAA4D,KAAK,CAAC,cAAc,CAAC,cAAA5D,kBAAA,uBAArBA,kBAAA,CAAuB0G,KAAK,KAAI,GAAG,IAAI;QACjDC,MAAM,EAAE,GAAG,EAAA1G,mBAAA,GAAA2D,KAAK,CAAC,cAAc,CAAC,cAAA3D,mBAAA,uBAArBA,mBAAA,CAAuB0G,MAAM,KAAI,GAAG;MACjD,CAAE;MAAA6H,QAAA,gBAEF/O,OAAA;QACE8O,SAAS,EAAC,cAAc;QACxBuB,WAAW,EAAG3I,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAE,cAAc,CAAE;QAAAqH,QAAA,gBAEvD/O,OAAA;UAAK8O,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B/O,OAAA,CAACtC,KAAK;YAAC8R,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnBnP,OAAA;YAAA+O,QAAA,EAAM;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7B/O,OAAA;YAAQuP,OAAO,EAAEA,CAAA,KAAMzM,cAAc,CAAC,CAACD,WAAW,CAAE;YAAAkM,QAAA,EACjDlM,WAAW,gBAAG7C,OAAA,CAACpB,SAAS;cAAC4Q,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGnP,OAAA,CAACrB,SAAS;cAAC6Q,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELtM,WAAW,iBACV7C,OAAA;QAAK8O,SAAS,EAAC,eAAe;QAACJ,KAAK,EAAE;UAAE4B,OAAO,EAAE,CAAC;UAAEpJ,MAAM,EAAE;QAAoB,CAAE;QAAA6H,QAAA,eAChF/O,OAAA,CAACzC,wBAAwB;UACvBgF,QAAQ,EAAEA,QAAS;UACnBC,WAAW,EAAEA,WAAY;UACzB+N,cAAc,EAAEtO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAG;UACpCuK,aAAa,EAAGC,SAAS,IAAK;YAC5B;YACA,MAAMC,OAAO,GAAG1K,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAKwK,SAAS,CAAC;YACxD,IAAIC,OAAO,EAAE;cACXrH,mBAAmB,CAACqH,OAAO,CAAC;YAC9B;UACF,CAAE;UACFC,iBAAiB,EAAGC,WAAW,IAAK;YAClC;YACAlN,kBAAkB,CAAC,IAAI,CAAC;YAExB,IAAIkN,WAAW,CAACC,cAAc,EAAE;cAC9B7N,mBAAmB,CAAC4N,WAAW,CAACC,cAAc,CAAC;cAC/CrN,mBAAmB,CAACoN,WAAW,CAAC;YAClC,CAAC,MAAM;cACL5N,mBAAmB,CAAC4N,WAAW,CAACvO,OAAO,IAAIuO,WAAW,CAACxJ,OAAO,IAAI,EAAE,CAAC;YACvE;YAEAlE,qBAAqB,CAAC0N,WAAW,CAACzJ,IAAI,IAAI,eAAe,CAAC;;YAE1D;YACA,IAAI,CAAAlF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB,EAAE;cAC/C,MAAMyG,UAAU,GAAG1G,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,mBAAmB,CAAC;cACrE,IAAIyG,UAAU,EAAE;gBACdrD,mBAAmB,CAACqD,UAAU,CAAC;cACjC;YACF;;YAEA;YACAnD,UAAU,CAAC,MAAM7F,kBAAkB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;UACnD,CAAE;UAEFoN,SAAS,EAAE,MAAOC,QAAQ,IAAK;YAC7B;YACArN,kBAAkB,CAAC,IAAI,CAAC;YAExB,IAAI;cACF,MAAMsI,QAAQ,GAAG,MAAMxO,kBAAkB,CAACwT,WAAW,CAAC;gBACpD3O,OAAO,EAAE,uBAAuB0O,QAAQ,CAACE,WAAW,0BAA0BF,QAAQ,CAACzF,cAAc,EAAE;gBACvG4F,OAAO,EAAE;kBACPC,UAAU,EAAE,aAAa;kBACzBC,eAAe,EAAE,mBAAmB;kBACpCC,QAAQ,EAAE,IAAI;kBACdxF,WAAW,EAAEkF,QAAQ,CAAClF;gBACxB,CAAC;gBACDH,IAAI,EAAE;cACR,CAAC,CAAC;cAEF,IAAIM,QAAQ,CAACA,QAAQ,EAAE;gBACrBhJ,mBAAmB,CAACgJ,QAAQ,CAACA,QAAQ,CAAC;;gBAEtC;gBACAxJ,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;kBAC5BvC,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;kBACdwB,IAAI,EAAE,WAAW;kBACjBC,OAAO,EAAE,oDAAoD2J,QAAQ,CAACE,WAAW,GAAG;kBACpF5J,SAAS,EAAE,IAAI3B,IAAI,CAAC;gBACtB,CAAC,CAAC,CAAC;cACL;YACF,CAAC,CAAC,OAAOoE,KAAK,EAAE;cACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;cAC7CtH,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;gBAC5BvC,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;gBACdwB,IAAI,EAAE,WAAW;gBACjBC,OAAO,EAAE,wFAAwF;gBACjGC,SAAS,EAAE,IAAI3B,IAAI,CAAC;cACtB,CAAC,CAAC,CAAC;YACL,CAAC,SAAS;cACRhC,kBAAkB,CAAC,KAAK,CAAC;YAC3B;UACF,CAAE;UAEF4N,uBAAuB,EAAGC,QAAQ,IAAK;YACrC;YACAxH,OAAO,CAACc,GAAG,CAAC,4BAA4B,EAAE0G,QAAQ,CAAC;YACnD;YACA3N,oBAAoB,CAAC2N,QAAQ,CAAC;YAC9B;YACA,IAAI,CAAAtP,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,oBAAoB,EAAE;cAChD,MAAMuL,iBAAiB,GAAGxL,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,oBAAoB,CAAC;cAC7E,IAAIuL,iBAAiB,EAAE;gBACrBnI,mBAAmB,CAACmI,iBAAiB,CAAC;cACxC;YACF;UACF;QAAE;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAEDnP,OAAA;QACE8O,SAAS,EAAC,eAAe;QACzBuB,WAAW,EAAG3I,CAAC,IAAKgB,iBAAiB,CAAChB,CAAC,EAAE,cAAc;MAAE;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLpN,WAAW,KAAK,UAAU,gBACzB/B,OAAA;MACEiG,EAAE,EAAC,eAAe;MAClB6I,SAAS,EAAC,qCAAqC;MAC/CJ,KAAK,EAAE;QACLxG,IAAI,EAAE,GAAG,EAAAzH,oBAAA,GAAAwD,SAAS,CAAC,eAAe,CAAC,cAAAxD,oBAAA,uBAA1BA,oBAAA,CAA4B8D,CAAC,KAAI,GAAG,IAAI;QACjD6D,GAAG,EAAE,GAAG,EAAA1H,qBAAA,GAAAuD,SAAS,CAAC,eAAe,CAAC,cAAAvD,qBAAA,uBAA1BA,qBAAA,CAA4B8D,CAAC,KAAI,EAAE,IAAI;QAC/CyC,KAAK,EAAE,GAAG,EAAAtG,mBAAA,GAAAwD,KAAK,CAAC,eAAe,CAAC,cAAAxD,mBAAA,uBAAtBA,mBAAA,CAAwBsG,KAAK,KAAI,GAAG,IAAI;QAClDC,MAAM,EAAE,GAAG,EAAAtG,oBAAA,GAAAuD,KAAK,CAAC,eAAe,CAAC,cAAAvD,oBAAA,uBAAtBA,oBAAA,CAAwBsG,MAAM,KAAI,GAAG;MAClD,CAAE;MAAA6H,QAAA,gBAEF/O,OAAA;QACE8O,SAAS,EAAC,cAAc;QACxBuB,WAAW,EAAG3I,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAE,eAAe,CAAE;QAAAqH,QAAA,gBAExD/O,OAAA;UAAK8O,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B/O,OAAA,CAACjB,QAAQ;YAACyQ,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtBnP,OAAA;YAAA+O,QAAA,EAAM;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7B/O,OAAA,CAACnB,IAAI;YAAC2Q,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnP,OAAA;QAAK8O,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B/O,OAAA;UAAK8O,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3B/I,UAAU,CAACmK,GAAG,CAAC7G,QAAQ,IAAI;YAC1B,MAAMmI,IAAI,GAAGnI,QAAQ,CAACnD,IAAI;YAC1B,oBACEnG,OAAA;cAEE8O,SAAS,EAAE,iBAAiBxF,QAAQ,CAAChD,MAAM,EAAG;cAC9CiJ,OAAO,EAAEA,CAAA,KAAMlG,mBAAmB,CAACC,QAAQ,CAAE;cAAAyF,QAAA,gBAE7C/O,OAAA;gBAAK8O,SAAS,EAAC,eAAe;gBAACJ,KAAK,EAAE;kBAAEgD,eAAe,EAAE,GAAGpI,QAAQ,CAAClD,KAAK;gBAAK,CAAE;gBAAA2I,QAAA,eAC/E/O,OAAA,CAACyR,IAAI;kBAACjC,IAAI,EAAE,EAAG;kBAACd,KAAK,EAAE;oBAAEtI,KAAK,EAAEkD,QAAQ,CAAClD;kBAAM;gBAAE;kBAAA4I,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC,eAENnP,OAAA;gBAAK8O,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/B/O,OAAA;kBAAK8O,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,gBAC9B/O,OAAA;oBAAA+O,QAAA,GACGzF,QAAQ,CAACpD,IAAI,EACboD,QAAQ,CAACqI,KAAK,iBACb3R,OAAA;sBAAM0O,KAAK,EAAE;wBACXY,UAAU,EAAE,KAAK;wBACjBgB,OAAO,EAAE,SAAS;wBAClBsB,UAAU,EAAE,mDAAmD;wBAC/DC,YAAY,EAAE,KAAK;wBACnBzC,QAAQ,EAAE,MAAM;wBAChBC,UAAU,EAAE,MAAM;wBAClBjJ,KAAK,EAAE;sBACT,CAAE;sBAAA2I,QAAA,EAAC;oBAAG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CACb;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACLnP,OAAA;oBAAM8O,SAAS,EAAE,mBAAmBxF,QAAQ,CAAChD,MAAM,EAAG;oBAAAyI,QAAA,EACnDzF,QAAQ,CAAChD,MAAM,KAAK,OAAO,gBAC1BtG,OAAA,CAAAE,SAAA;sBAAA6O,QAAA,gBAAE/O,OAAA,CAACf,MAAM;wBAACuQ,IAAI,EAAE,CAAE;wBAACK,IAAI,EAAC;sBAAc;wBAAAb,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,UAAM;oBAAA,eAAE,CAAC,GAChD7F,QAAQ,CAAChD,MAAM,KAAK,UAAU,gBAChCtG,OAAA,CAAAE,SAAA;sBAAA6O,QAAA,gBAAE/O,OAAA,CAACX,GAAG;wBAACmQ,IAAI,EAAE;sBAAG;wBAAAR,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,aAAS;oBAAA,eAAE,CAAC,gBAE/BnP,OAAA,CAAAE,SAAA;sBAAA6O,QAAA,gBAAE/O,OAAA,CAACZ,KAAK;wBAACoQ,IAAI,EAAE;sBAAG;wBAAAR,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,YAAQ;oBAAA,eAAE;kBAChC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNnP,OAAA;kBAAG8O,SAAS,EAAC,sBAAsB;kBAAAC,QAAA,EAAEzF,QAAQ,CAACjD;gBAAW;kBAAA2I,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC,eAENnP,OAAA,CAAC7B,YAAY;gBAACqR,IAAI,EAAE,EAAG;gBAACV,SAAS,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA,GArChD7F,QAAQ,CAACrD,EAAE;cAAA+I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsCb,CAAC;UAEV,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnP,OAAA;QACE8O,SAAS,EAAC,eAAe;QACzBuB,WAAW,EAAG3I,CAAC,IAAKgB,iBAAiB,CAAChB,CAAC,EAAE,eAAe;MAAE;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENnP,OAAA;MACEiG,EAAE,EAAC,cAAc;MACjB6I,SAAS,EAAE,iCAAiC3M,eAAe,GAAG,eAAe,GAAG,EAAE,EAAG;MACrFuM,KAAK,EAAE;QACLxG,IAAI,EAAE,GAAG,EAAArH,oBAAA,GAAAoD,SAAS,CAAC,cAAc,CAAC,cAAApD,oBAAA,uBAAzBA,oBAAA,CAA2B0D,CAAC,KAAI,GAAG,IAAI;QAChD6D,GAAG,EAAE,GAAG,EAAAtH,qBAAA,GAAAmD,SAAS,CAAC,cAAc,CAAC,cAAAnD,qBAAA,uBAAzBA,qBAAA,CAA2B0D,CAAC,KAAI,EAAE,IAAI;QAC9CyC,KAAK,EAAE,GAAG,EAAAlG,kBAAA,GAAAoD,KAAK,CAAC,cAAc,CAAC,cAAApD,kBAAA,uBAArBA,kBAAA,CAAuBkG,KAAK,KAAI,GAAG,IAAI;QACjDC,MAAM,EAAE,GAAG,EAAAlG,mBAAA,GAAAmD,KAAK,CAAC,cAAc,CAAC,cAAAnD,mBAAA,uBAArBA,mBAAA,CAAuBkG,MAAM,KAAI,GAAG;MACjD,CAAE;MAAA6H,QAAA,gBAEF/O,OAAA;QACE8O,SAAS,EAAC,cAAc;QACxBuB,WAAW,EAAG3I,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAE,cAAc,CAAE;QAAAqH,QAAA,gBAEvD/O,OAAA;UAAQuP,OAAO,EAAE/F,sBAAuB;UAACsF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC9D/O,OAAA,CAACb,SAAS;YAACqQ,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,QAEzB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTnP,OAAA;UAAK8O,SAAS,EAAC,aAAa;UAAAC,QAAA,GACzB9M,eAAe,iBAAItF,KAAK,CAACmV,aAAa,CAAC7P,eAAe,CAACkE,IAAI,EAAE;YAC5DqJ,IAAI,EAAE,EAAE;YACRd,KAAK,EAAE;cAAEtI,KAAK,EAAEnE,eAAe,CAACmE;YAAM;UACxC,CAAC,CAAC,eACFpG,OAAA;YAAA+O,QAAA,EAAO9M,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEiE;UAAI;YAAA8I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7B/O,OAAA,CAACnB,IAAI;YAAC2Q,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnP,OAAA;QAAK8O,SAAS,EAAC,eAAe;QAAAC,QAAA,GAC3B,CAAA9M,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,mBAAmB,iBAC1CjG,OAAA,CAAC5C,sBAAsB;UACrB2U,WAAW,EAAEpH,6BAA8B;UAC3C5H,gBAAgB,EAAEA,gBAAiB;UACnCiP,eAAe,EAAE3D,mBAAoB;UACrCpL,kBAAkB,EAAEA;UACpB;UAAA;UACAM,gBAAgB,EAAEA,gBAAiB;UACnCuN,SAAS,EAAE,MAAOC,QAAQ,IAAK;YAC7B;YACA;YACAvO,WAAW,CAACgG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;cAC5BvC,EAAE,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;cACdwB,IAAI,EAAE,MAAM;cACZC,OAAO,EAAE2J,QAAQ,CAACE,WAAW;cAC7B5J,SAAS,EAAE,IAAI3B,IAAI,CAAC;YACtB,CAAC,CAAC,CAAC;UACL,CAAE;UACFjC,eAAe,EAAEA;QAAgB;UAAAuL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CACF,EACA,CAAAlN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,oBAAoB,iBAC3CjG,OAAA,CAAC1C,iBAAiB;UAChByU,WAAW,EAAEA,CAAC1P,OAAO,EAAEoO,SAAS,EAAE5E,WAAW,KAAK;YAChD;YACA,IAAI4E,SAAS,KAAK,mBAAmB,EAAE;cACrC,MAAMwB,kBAAkB,GAAGjM,UAAU,CAAC2G,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC3G,EAAE,KAAK,mBAAmB,CAAC;cAC7E,IAAIgM,kBAAkB,EAAE;gBACtB5I,mBAAmB,CAAC4I,kBAAkB,CAAC;gBACvC;gBACA1I,UAAU,CAAC,MAAM;kBACf4B,WAAW,CAAC9I,OAAO,EAAE,IAAI,EAAEwJ,WAAW,CAAC;gBACzC,CAAC,EAAE,GAAG,CAAC;cACT;YACF,CAAC,MAAM;cACL;cACAV,WAAW,CAAC9I,OAAO,CAAC;YACtB;UACF,CAAE;UACF6P,UAAU,EAAErO,cAAc,KAAK;QAAe;UAAAmL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CACF,EACA,CAAAlN,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEgE,EAAE,MAAK,oBAAoB,iBAC3CjG,OAAA,CAAC3C,0BAA0B;UACzB8U,WAAW,EAAExO,iBAAkB;UAC/ByO,YAAY,EAAExO;QAAqB;UAAAoL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENnP,OAAA;QACE8O,SAAS,EAAC,eAAe;QACzBuB,WAAW,EAAG3I,CAAC,IAAKgB,iBAAiB,CAAChB,CAAC,EAAE,cAAc;MAAE;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAGAlK,WAAW,iBACVjF,OAAA;MACEiG,EAAE,EAAC,SAAS;MACZ6I,SAAS,EAAC,+BAA+B;MACzCJ,KAAK,EAAE;QACLxG,IAAI,EAAE,GAAG,EAAAjH,kBAAA,GAAAgD,SAAS,CAAC,SAAS,CAAC,cAAAhD,kBAAA,uBAApBA,kBAAA,CAAsBsD,CAAC,KAAI,GAAG,IAAI;QAC3C6D,GAAG,EAAE,GAAG,EAAAlH,mBAAA,GAAA+C,SAAS,CAAC,SAAS,CAAC,cAAA/C,mBAAA,uBAApBA,mBAAA,CAAsBsD,CAAC,KAAI,EAAE,IAAI;QACzCyC,KAAK,EAAE,GAAG,EAAA9F,cAAA,GAAAgD,KAAK,CAAC,SAAS,CAAC,cAAAhD,cAAA,uBAAhBA,cAAA,CAAkB8F,KAAK,KAAI,GAAG,IAAI;QAC5CC,MAAM,EAAE,GAAG,EAAA9F,eAAA,GAAA+C,KAAK,CAAC,SAAS,CAAC,cAAA/C,eAAA,uBAAhBA,eAAA,CAAkB8F,MAAM,KAAI,GAAG,IAAI;QAC9CuI,OAAO,EAAElK,gBAAgB,GAAG,MAAM,GAAG;MACvC,CAAE;MAAAwJ,QAAA,gBAEF/O,OAAA;QACE8O,SAAS,EAAC,cAAc;QACxBuB,WAAW,EAAG3I,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAE,SAAS,CAAE;QAAAqH,QAAA,gBAElD/O,OAAA;UAAK8O,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B/O,OAAA,CAACH,UAAU;YAAC2P,IAAI,EAAE;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBnP,OAAA;YAAA+O,QAAA,EAAM;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC9BnP,OAAA;YAAM8O,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAE5J,KAAK,CAAC8I;UAAM;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B/O,OAAA;YAAQuP,OAAO,EAAEA,CAAA,KAAM/J,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;YAAAwJ,QAAA,EAC3DxJ,gBAAgB,gBAAGvF,OAAA,CAACrB,SAAS;cAAC6Q,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAGnP,OAAA,CAACpB,SAAS;cAAC4Q,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eACTnP,OAAA;YAAQuP,OAAO,EAAEA,CAAA,KAAMrK,cAAc,CAAC,KAAK,CAAE;YAAA6J,QAAA,eAC3C/O,OAAA,CAAC5B,CAAC;cAACoR,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnP,OAAA;QAAK8O,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B/O,OAAA;UAAK8O,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B/O,OAAA;YAAK8O,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpC/O,OAAA;cACEqS,KAAK,EAAEhN,OAAQ;cACfiN,QAAQ,EAAG5K,CAAC,IAAKpC,UAAU,CAACoC,CAAC,CAAC6K,MAAM,CAACF,KAAK,CAAE;cAC5CG,SAAS,EAAG9K,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAAC+K,GAAG,KAAK,OAAO,IAAI/K,CAAC,CAACgL,OAAO,EAAE;kBAClChL,CAAC,CAACE,cAAc,CAAC,CAAC;kBAClBuC,OAAO,CAAC,CAAC;gBACX;cACF,CAAE;cACFwI,WAAW,EAAC,iDAAiD;cAC7D7D,SAAS,EAAC,kBAAkB;cAC5B8D,IAAI,EAAE;YAAE;cAAA5D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACFnP,OAAA;cACE8O,SAAS,EAAC,oBAAoB;cAC9BS,OAAO,EAAEpF,OAAQ;cACjB0I,QAAQ,EAAE,CAACxN,OAAO,CAACqE,IAAI,CAAC,CAAE;cAAAqF,QAAA,gBAE1B/O,OAAA,CAACP,IAAI;gBAAC+P,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,YAEpB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENnP,OAAA;YAAK8O,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChC5J,KAAK,CAAC8I,MAAM,KAAK,CAAC,gBACjBjO,OAAA;cAAK8O,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/B/O,OAAA,CAACH,UAAU;gBAAC2P,IAAI,EAAE;cAAG;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACxBnP,OAAA;gBAAA+O,QAAA,EAAG;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,GAENhK,KAAK,CAACgL,GAAG,CAAC/F,IAAI,iBACZpK,OAAA;cAAmB8O,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9C/O,OAAA;gBAAK8O,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,gBACnC/O,OAAA;kBAAG8O,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,EAAE3E,IAAI,CAACC;gBAAI;kBAAA2E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAChDnP,OAAA;kBAAM8O,SAAS,EAAC,wBAAwB;kBAAAC,QAAA,GACrC,IAAIrJ,IAAI,CAAC0E,IAAI,CAAC/C,SAAS,CAAC,CAACyL,kBAAkB,CAAC,CAAC,EAAC,GAAC,EAAC,IAAIpN,IAAI,CAAC0E,IAAI,CAAC/C,SAAS,CAAC,CAAC0L,kBAAkB,CAAC,EAAE,EAAE;oBAACC,IAAI,EAAE,SAAS;oBAAEC,MAAM,EAAC;kBAAS,CAAC,CAAC;gBAAA;kBAAAjE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACjI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACNnP,OAAA;gBACE8O,SAAS,EAAC,uBAAuB;gBACjCS,OAAO,EAAEA,CAAA,KAAM/E,UAAU,CAACJ,IAAI,CAACnE,EAAE,CAAE;gBAAA8I,QAAA,eAEnC/O,OAAA,CAAC5B,CAAC;kBAACoR,IAAI,EAAE;gBAAG;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA,GAZD/E,IAAI,CAACnE,EAAE;cAAA+I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaZ,CACN;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnP,OAAA;QACE8O,SAAS,EAAC,eAAe;QACzBuB,WAAW,EAAG3I,CAAC,IAAKgB,iBAAiB,CAAChB,CAAC,EAAE,SAAS;MAAE;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAGAtK,mBAAmB,iBAClB7E,OAAA;MAAK8O,SAAS,EAAC,eAAe;MAACS,OAAO,EAAEA,CAAA,KAAMzK,sBAAsB,CAAC,KAAK,CAAE;MAAAiK,QAAA,eAC1E/O,OAAA;QAAK8O,SAAS,EAAC,eAAe;QAACS,OAAO,EAAG7H,CAAC,IAAKA,CAAC,CAACiB,eAAe,CAAC,CAAE;QAAAoG,QAAA,gBACjE/O,OAAA;UAAK8O,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/O,OAAA;YAAA+O,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3BnP,OAAA;YAAQuP,OAAO,EAAEA,CAAA,KAAMzK,sBAAsB,CAAC,KAAK,CAAE;YAACgK,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC5E/O,OAAA,CAAC5B,CAAC;cAACoR,IAAI,EAAE;YAAG;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,YAAY;UAAAC,QAAA,eACzB/O,OAAA;YACEmH,IAAI,EAAC,MAAM;YACXkL,KAAK,EAAEtN,cAAe;YACtBuN,QAAQ,EAAG5K,CAAC,IAAK1C,iBAAiB,CAAC0C,CAAC,CAAC6K,MAAM,CAACF,KAAK,CAAE;YACnDM,WAAW,EAAC,uBAAuB;YACnC7D,SAAS,EAAC,oBAAoB;YAC9BoE,SAAS;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNnP,OAAA;UAAK8O,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/O,OAAA;YACE8O,SAAS,EAAC,eAAe;YACzBS,OAAO,EAAEA,CAAA,KAAMzK,sBAAsB,CAAC,KAAK,CAAE;YAAAiK,QAAA,EAC9C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnP,OAAA;YACE8O,SAAS,EAAC,eAAe;YACzBS,OAAO,EAAE9F,mBAAoB;YAC7BoJ,QAAQ,EAAE,CAAC9N,cAAc,CAAC2E,IAAI,CAAC,CAAE;YAAAqF,QAAA,EAClC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/O,EAAA,CAxwCID,gBAAgB;EAAA,QACEnD,SAAS,EACdC,WAAW,EACsCC,UAAU,EACnDC,OAAO;AAAA;AAAAgW,EAAA,GAJ5BhT,gBAAgB;AA0wCtB,eAAeA,gBAAgB;AAAC,IAAAgT,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}