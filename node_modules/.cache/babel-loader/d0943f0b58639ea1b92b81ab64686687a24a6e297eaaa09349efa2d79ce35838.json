{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/EnhancedAIStrategyAdvisor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport API_BASE_URL from '../../config/api';\nimport { Sparkles, Bot, Building2, Users, Target, TrendingUp, Shield, Globe, CheckCircle, Brain, Zap, Database, Search, Loader, ChevronRight, AlertCircle, Info } from 'lucide-react';\nimport { findPreIndexedStakeholder, getMonitoringTopics } from './EnhancedSourceDatabase';\nimport stakeholderIntelligenceService from '../../services/stakeholderIntelligenceService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EnhancedAIStrategyAdvisor = ({\n  onStrategyComplete,\n  mode = 'stakeholders'\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [currentStep, setCurrentStep] = useState('initial');\n  const [organizationData, setOrganizationData] = useState({\n    company: '',\n    url: '',\n    additionalUrls: [],\n    strategicGoals: '',\n    priorityStakeholders: '',\n    industry: '',\n    description: ''\n  });\n  const [stakeholders, setStakeholders] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [editableCompetitors, setEditableCompetitors] = useState([]);\n  const [editableTopics, setEditableTopics] = useState([]);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [editingType, setEditingType] = useState(null);\n  const [editValue, setEditValue] = useState('');\n  const [analysisProgress, setAnalysisProgress] = useState({\n    organization: 0,\n    stakeholders: 0,\n    sources: 0,\n    strategy: 0\n  });\n  const initRef = useRef(false);\n  useEffect(() => {\n    // Use ref to ensure this only runs once, even in StrictMode\n    if (initRef.current) return;\n    initRef.current = true;\n\n    // Initial greeting - focused on competitors and topics\n    if (mode === 'unified') {\n      setCurrentStep('organization_input');\n      addMessage({\n        type: 'ai',\n        content: \"Welcome to Intelligence Monitoring\\n\\nI'll help you discover and track competitors and topics relevant to your organization.\\n\\nEnter your company name:\",\n        showForm: true\n      });\n    } else if (mode === 'competitors') {\n      setCurrentStep('company_info');\n      addMessage({\n        type: 'ai',\n        content: \"👋 Hello! I'm your Competitor Intelligence Advisor. I'll help you identify and track your top competitors.\\n\\nLet's start by researching your organization. Please provide:\\n• Company name\\n• Website URL (optional but recommended)\\n• Brief description of what your company does\",\n        showForm: true\n      });\n    } else {\n      setCurrentStep('organization_input');\n      addMessage({\n        type: 'ai',\n        content: \"Hello! I'm your AI Strategy Advisor.\\n\\nTo build your intelligence monitoring strategy, please provide:\\n\\n• **Organization Name**: Your company or client name\\n• **Website URL**: https://example.com\\n\\nI'll analyze your organization and automatically identify relevant stakeholders, competitors, and topics to monitor.\",\n        showForm: true\n      });\n    }\n  }, []);\n  const addMessage = message => {\n    if (message.options) {\n      console.log('Adding message with options:', message.options);\n    }\n    setMessages(prev => [...prev, {\n      ...message,\n      id: Date.now()\n    }]);\n  };\n  const handleUserResponse = async value => {\n    // Handle option selection after analysis\n    if (currentStep === 'confirm_targets' || currentStep === 'confirm_stakeholders') {\n      if (value === 'proceed') {\n        // Proceed with the discovered configuration\n        finalizeStrategy();\n      } else if (value === 'add_competitors') {\n        // Allow adding more competitors\n        addMessage({\n          type: 'ai',\n          content: \"Please list additional competitors you'd like to track (one per line):\",\n          showForm: true\n        });\n        setCurrentStep('add_competitors');\n      } else if (value === 'customize_topics') {\n        // Allow topic customization\n        addMessage({\n          type: 'ai',\n          content: \"Please list specific topics or trends you want to monitor (one per line):\",\n          showForm: true\n        });\n        setCurrentStep('customize_topics');\n      } else if (value === 'customize') {\n        // Legacy: Allow customization of stakeholders\n        addMessage({\n          type: 'ai',\n          content: \"You can customize the targets. Please tell me what to add or modify:\",\n          showForm: true\n        });\n        setCurrentStep('customize_stakeholders');\n      } else if (value === 'adjust') {\n        // Legacy: Allow topic adjustment\n        addMessage({\n          type: 'ai',\n          content: \"You can adjust the monitoring topics. Please specify changes:\",\n          showForm: true\n        });\n        setCurrentStep('adjust_topics');\n      }\n    }\n  };\n  const handleInputSubmit = async () => {\n    if (!userInput.trim()) return;\n    const userMessage = userInput;\n    setUserInput('');\n    addMessage({\n      type: 'user',\n      content: userMessage\n    });\n    console.log('Current step:', currentStep);\n    if (currentStep === 'organization_input') {\n      // Parse organization name and URL\n      handleOrganizationInput(userMessage);\n    } else if (currentStep === 'unified_input') {\n      // Parse what the user wants to monitor\n      handleUnifiedInput(userMessage);\n    } else if (currentStep === 'topic_input') {\n      // Handle topic monitoring input\n      handleTopicInput(userMessage);\n    } else if (currentStep === 'company_info_for_competitors') {\n      // Parse company info and then discover competitors\n      const lines = userMessage.split('\\n');\n      let company = '';\n      let url = '';\n      let description = '';\n      lines.forEach(line => {\n        if (line.toLowerCase().includes('company:') || line.toLowerCase().includes('name:')) {\n          var _line$split$;\n          company = ((_line$split$ = line.split(':')[1]) === null || _line$split$ === void 0 ? void 0 : _line$split$.trim()) || '';\n        } else if (line.toLowerCase().includes('url:') || line.includes('http')) {\n          url = line.includes('http') ? line.trim() : line.split(':').slice(1).join(':').trim();\n        } else if (line.toLowerCase().includes('description:') || line.toLowerCase().includes('what')) {\n          var _line$split$2;\n          description = ((_line$split$2 = line.split(':')[1]) === null || _line$split$2 === void 0 ? void 0 : _line$split$2.trim()) || '';\n        }\n      });\n\n      // If no structured format, try to parse intelligently\n      if (!company) {\n        company = lines[0].trim();\n        url = lines.find(l => l.includes('http') || l.includes('www.')) || '';\n        description = lines.filter(l => l !== company && l !== url).join(' ');\n      }\n\n      // Now discover competitors\n      performCompetitorAnalysis({\n        company,\n        url,\n        description\n      });\n    } else if (currentStep === 'company_info') {\n      // Parse company name and URL from input\n      const lines = userMessage.split('\\n');\n      let company = '';\n      let url = '';\n      lines.forEach(line => {\n        if (line.toLowerCase().includes('company:')) {\n          var _line$split$3;\n          company = ((_line$split$3 = line.split(':')[1]) === null || _line$split$3 === void 0 ? void 0 : _line$split$3.trim()) || '';\n        } else if (line.toLowerCase().includes('url:') || line.includes('http')) {\n          url = line.includes('http') ? line.trim() : line.split(':').slice(1).join(':').trim();\n        }\n      });\n\n      // If no structured format, assume first line is company, second is URL\n      if (!company && !url) {\n        const parts = userMessage.split(/\\s+/);\n        company = userMessage;\n        url = parts.find(part => part.includes('http')) || '';\n      }\n      setOrganizationData(prev => ({\n        ...prev,\n        company,\n        url\n      }));\n\n      // Start analyzing immediately\n      performAutomatedAnalysis({\n        company,\n        url\n      });\n    } else if (currentStep === 'strategic_goals') {\n      setOrganizationData(prev => ({\n        ...prev,\n        strategicGoals: userMessage\n      }));\n      setCurrentStep('priority_stakeholders');\n      setIsTyping(true);\n      setTimeout(() => {\n        addMessage({\n          type: 'ai',\n          content: `Excellent strategic goals! I'll factor these into my analysis.\\n\\nLastly, are there any specific stakeholders you already know are important? This could include:\\n• Major investors (e.g., BlackRock, Vanguard)\\n• Key regulators (e.g., SEC, FTC)\\n• Important customers or partners\\n• Media outlets that cover you\\n\\nYou can list a few, or just type \"none\" to let me discover them all.`,\n          showTextarea: true\n        });\n        setIsTyping(false);\n      }, 1000);\n    } else if (currentStep === 'priority_stakeholders') {\n      setOrganizationData(prev => ({\n        ...prev,\n        priorityStakeholders: userMessage\n      }));\n      // Now perform the comprehensive analysis with all data\n      performDeepOrganizationAnalysis(organizationData);\n    } else if (currentStep === 'confirm_stakeholders') {\n      finalizeStrategy();\n    } else if (currentStep === 'add_competitors') {\n      // Add custom competitors\n      const newCompetitors = userMessage.split('\\n').filter(c => c.trim());\n      if (newCompetitors.length > 0) {\n        const updatedCompetitors = [...editableCompetitors, ...newCompetitors];\n        setEditableCompetitors(updatedCompetitors);\n        addMessage({\n          type: 'ai',\n          content: `Added ${newCompetitors.length} competitor${newCompetitors.length > 1 ? 's' : ''}. Current list:`,\n          editableTargets: {\n            competitors: updatedCompetitors,\n            topics: editableTopics\n          },\n          options: [{\n            label: '✅ Start Monitoring',\n            value: 'proceed'\n          }, {\n            label: '📝 Add Topics',\n            value: 'customize_topics'\n          }]\n        });\n      }\n      setCurrentStep('confirm_targets');\n    } else if (currentStep === 'customize_topics') {\n      // Add custom topics\n      const newTopics = userMessage.split('\\n').filter(t => t.trim());\n      if (newTopics.length > 0) {\n        const updatedTopics = [...editableTopics, ...newTopics];\n        setEditableTopics(updatedTopics);\n        addMessage({\n          type: 'ai',\n          content: `Added ${newTopics.length} topic${newTopics.length > 1 ? 's' : ''}. Current list:`,\n          editableTargets: {\n            competitors: editableCompetitors,\n            topics: updatedTopics\n          },\n          options: [{\n            label: '✅ Start Monitoring',\n            value: 'proceed'\n          }]\n        });\n      }\n      setCurrentStep('confirm_targets');\n    } else if (currentStep === 'customize_stakeholders' || currentStep === 'adjust_topics') {\n      // Handle legacy customization responses\n      addMessage({\n        type: 'ai',\n        content: \"I've noted your customizations. The strategy will be updated accordingly.\"\n      });\n      finalizeStrategy();\n    } else {\n      console.log('Unhandled step:', currentStep);\n      // For any other step, try organization input\n      if (currentStep === 'organization_input' || currentStep === 'company_info') {\n        handleOrganizationInput(userMessage);\n      }\n    }\n  };\n  const performAnalysis = async orgData => {\n    if (mode === 'topics') {\n      performTopicAnalysis(orgData);\n    } else if (mode === 'competitors') {\n      performCompetitorAnalysis(orgData);\n    } else {\n      performDeepOrganizationAnalysis(orgData);\n    }\n  };\n  const handleUnifiedInput = input => {\n    const inputLower = input.toLowerCase();\n    const targets = [];\n\n    // Detect if user is asking about competitors\n    const competitorKeywords = ['competitor', 'compete', 'rival', 'vs', 'versus', 'track my competitors'];\n    const topicKeywords = ['topic', 'trend', 'monitor', 'track', 'regulation', 'narrative', 'issue'];\n\n    // Parse the input to identify entities and topics\n    const lines = input.split(/[,\\n;]/).map(l => l.trim()).filter(l => l);\n\n    // Check if input contains company names (typically capitalized or known patterns)\n    const hasCompanyNames = lines.some(line => {\n      const words = line.split(' ');\n      return words.some(word => word.length > 2 && (word[0] === word[0].toUpperCase() || word.toLowerCase().includes('corp') || word.toLowerCase().includes('inc') || word.toLowerCase().includes('llc')));\n    });\n\n    // Determine primary intent\n    const isCompetitorFocused = competitorKeywords.some(kw => inputLower.includes(kw)) || hasCompanyNames;\n    const isTopicFocused = topicKeywords.some(kw => inputLower.includes(kw)) && !isCompetitorFocused;\n    if (isCompetitorFocused) {\n      // Extract company names\n      const companies = [];\n      lines.forEach(line => {\n        // Remove common prefixes\n        const cleaned = line.replace(/^(track|monitor|watch|follow|my competitor[s]?:?|competitor[s]?:?)/gi, '').trim();\n        if (cleaned && cleaned.length > 1) {\n          // Check if it looks like a company name\n          const firstChar = cleaned[0];\n          if (firstChar === firstChar.toUpperCase() || cleaned.includes('.com') || cleaned.includes('Inc')) {\n            companies.push(cleaned);\n          }\n        }\n      });\n      if (companies.length > 0) {\n        // User provided specific competitors\n        performUnifiedAnalysis({\n          type: 'competitors',\n          entities: companies,\n          userInput: input\n        });\n      } else {\n        // Ask for company info to discover competitors\n        setCurrentStep('company_info_for_competitors');\n        addMessage({\n          type: 'ai',\n          content: \"I see you want to track competitors. To identify the right ones, please tell me:\\n• Your company name\\n• Your website (optional)\\n• What your company does\",\n          showForm: true\n        });\n      }\n    } else if (isTopicFocused || !hasCompanyNames) {\n      // Extract topics\n      const topics = lines.map(line => {\n        return line.replace(/^(track|monitor|watch|follow|topic[s]?:?|trend[s]?:?)/gi, '').trim();\n      }).filter(t => t && t.length > 2);\n      if (topics.length > 0) {\n        performUnifiedAnalysis({\n          type: 'topics',\n          entities: topics,\n          userInput: input\n        });\n      }\n    } else {\n      // Mixed or unclear - analyze everything\n      performUnifiedAnalysis({\n        type: 'mixed',\n        entities: lines,\n        userInput: input\n      });\n    }\n  };\n  const performUnifiedAnalysis = async data => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    const typeLabel = data.type === 'competitors' ? 'competitors' : data.type === 'topics' ? 'topics' : 'intelligence targets';\n    addMessage({\n      type: 'ai',\n      content: `🔍 Analyzing your ${typeLabel}...\\n\\n` + `**Targets identified:** ${data.entities.join(', ')}\\n\\n` + `I'm now:\\n` + `• Researching each target\\n` + `• Finding the best monitoring sources\\n` + `• Setting up tracking parameters\\n` + `• Building your intelligence dashboard`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [{\n      key: 'organization',\n      label: `Researching ${data.entities.length} targets`,\n      duration: 2000\n    }, {\n      key: 'stakeholders',\n      label: 'Analyzing intelligence requirements',\n      duration: 2000\n    }, {\n      key: 'sources',\n      label: 'Configuring monitoring sources',\n      duration: 2000\n    }, {\n      key: 'strategy',\n      label: 'Building monitoring strategy',\n      duration: 1500\n    }];\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate intelligence targets\n    const intelligenceTargets = [];\n    for (const entity of data.entities) {\n      if (data.type === 'competitors' || data.type === 'mixed' && looksLikeCompany(entity)) {\n        // Treat as competitor\n        intelligenceTargets.push({\n          id: `comp-${intelligenceTargets.length}`,\n          name: entity,\n          type: 'Competitor',\n          priority: 'high',\n          influence: 85,\n          keywords: [entity, `${entity} news`, `${entity} announcement`],\n          topics: ['product launches', 'funding', 'partnerships', 'leadership changes'],\n          reason: 'Competitive intelligence target',\n          goals: `Track ${entity}'s strategic moves and market positioning`,\n          description: `Monitor all activities and announcements from ${entity}`\n        });\n      } else {\n        // Treat as topic\n        intelligenceTargets.push({\n          id: `topic-${intelligenceTargets.length}`,\n          name: entity,\n          type: 'Topic',\n          priority: 'high',\n          influence: 80,\n          keywords: [entity, ...getTopicKeywords(entity)],\n          topics: ['breaking news', 'analysis', 'expert opinions', 'research'],\n          reason: 'Strategic monitoring topic',\n          goals: `Track developments related to ${entity}`,\n          description: `Monitor trends and discussions about ${entity}`\n        });\n      }\n    }\n    setStakeholders(intelligenceTargets);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Analysis Complete!**\\n\\nI've configured monitoring for ${intelligenceTargets.length} intelligence targets. Each target has been set up with appropriate sources and tracking parameters.\\n\\n**Review and confirm your targets:**`,\n      stakeholderResults: intelligenceTargets,\n      showSelection: true\n    });\n  };\n  const looksLikeCompany = text => {\n    const companyIndicators = ['inc', 'corp', 'llc', 'ltd', 'company', '.com'];\n    const textLower = text.toLowerCase();\n\n    // Check for company indicators\n    if (companyIndicators.some(ind => textLower.includes(ind))) return true;\n\n    // Check if first letter is capitalized (proper noun)\n    if (text[0] === text[0].toUpperCase() && text.length > 2) {\n      // Check if it's likely a company name vs a topic\n      const topicWords = ['regulation', 'trend', 'technology', 'market', 'industry', 'disruption'];\n      if (!topicWords.some(word => textLower.includes(word))) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const handleTopicInput = input => {\n    // Parse topic information from input\n    const lines = input.split('\\n');\n    const topicData = {\n      mainTopic: lines[0] || input,\n      industry: '',\n      context: '',\n      relatedTopics: []\n    };\n\n    // Extract additional context\n    lines.forEach(line => {\n      if (line.toLowerCase().includes('industry:')) {\n        var _line$split$4;\n        topicData.industry = ((_line$split$4 = line.split(':')[1]) === null || _line$split$4 === void 0 ? void 0 : _line$split$4.trim()) || '';\n      } else if (line.toLowerCase().includes('context:') || line.toLowerCase().includes('why:')) {\n        var _line$split$5;\n        topicData.context = ((_line$split$5 = line.split(':')[1]) === null || _line$split$5 === void 0 ? void 0 : _line$split$5.trim()) || '';\n      }\n    });\n\n    // Perform topic analysis\n    performTopicAnalysis(topicData);\n  };\n  const performTopicAnalysis = async topicData => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    addMessage({\n      type: 'ai',\n      content: `🔬 Analyzing \"${topicData.mainTopic}\" and related narratives...\\n\\n` + `**Research Focus:**\\n` + `• Identifying key influencers and thought leaders\\n` + `• Mapping narrative evolution and trends\\n` + `• Finding authoritative sources\\n` + `• Discovering related topics and subtopics\\n\\n` + `This will help me create a comprehensive monitoring strategy...`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [{\n      key: 'organization',\n      label: `Researching \"${topicData.mainTopic}\"`,\n      duration: 2000\n    }, {\n      key: 'stakeholders',\n      label: 'Identifying key voices and influencers',\n      duration: 2500\n    }, {\n      key: 'sources',\n      label: 'Finding authoritative sources',\n      duration: 2000\n    }, {\n      key: 'strategy',\n      label: 'Building monitoring strategy',\n      duration: 1500\n    }];\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate topic-based intelligence targets\n    const topicTargets = generateTopicTargets(topicData);\n    setStakeholders(topicTargets);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Topic Analysis Complete!**\\n\\nI've identified key aspects of \"${topicData.mainTopic}\" to monitor. These include subtopics, key sources, and influential voices.\\n\\n**Select the targets you want to track:**`,\n      stakeholderResults: topicTargets,\n      showSelection: true\n    });\n  };\n  const generateTopicTargets = topicData => {\n    const targets = [];\n    const mainTopic = topicData.mainTopic;\n\n    // Main topic as primary target\n    targets.push({\n      id: 'topic-main',\n      name: mainTopic,\n      type: 'Primary Topic',\n      priority: 'high',\n      influence: 90,\n      keywords: [mainTopic, ...getTopicKeywords(mainTopic)],\n      topics: ['breaking news', 'industry analysis', 'expert opinions', 'research reports'],\n      reason: 'Core topic for monitoring',\n      goals: `Track all developments related to ${mainTopic}`,\n      description: topicData.context || `Primary monitoring focus`\n    });\n\n    // Generate related subtopics\n    const subtopics = generateSubtopics(mainTopic, topicData.industry);\n    subtopics.forEach((subtopic, idx) => {\n      targets.push({\n        id: `topic-sub-${idx}`,\n        name: subtopic.name,\n        type: 'Subtopic',\n        priority: subtopic.priority || 'medium',\n        influence: subtopic.relevance || 70,\n        keywords: subtopic.keywords,\n        topics: subtopic.aspects,\n        reason: subtopic.reason,\n        goals: `Monitor ${subtopic.name} developments`,\n        description: subtopic.description\n      });\n    });\n\n    // Add key influencers/sources as targets\n    const influencers = generateTopicInfluencers(mainTopic, topicData.industry);\n    influencers.forEach((influencer, idx) => {\n      targets.push({\n        id: `influencer-${idx}`,\n        name: influencer.name,\n        type: 'Key Source',\n        priority: 'medium',\n        influence: influencer.authority || 60,\n        keywords: [influencer.name, mainTopic],\n        topics: influencer.expertise,\n        reason: influencer.reason,\n        goals: `Track insights from ${influencer.name}`,\n        description: influencer.description\n      });\n    });\n    return targets;\n  };\n  const getTopicKeywords = topic => {\n    // Generate related keywords for a topic\n    const topicLower = topic.toLowerCase();\n    if (topicLower.includes('ai') || topicLower.includes('artificial intelligence')) {\n      return ['machine learning', 'deep learning', 'neural networks', 'LLM', 'generative AI'];\n    } else if (topicLower.includes('climate') || topicLower.includes('sustainability')) {\n      return ['ESG', 'carbon neutral', 'renewable energy', 'green technology', 'net zero'];\n    } else if (topicLower.includes('crypto') || topicLower.includes('blockchain')) {\n      return ['bitcoin', 'ethereum', 'DeFi', 'web3', 'NFT', 'digital assets'];\n    }\n\n    // Default related terms\n    return ['trends', 'analysis', 'industry', 'innovation', 'research'];\n  };\n  const generateSubtopics = (mainTopic, industry) => {\n    const topicLower = mainTopic.toLowerCase();\n    if (topicLower.includes('ai regulation')) {\n      return [{\n        name: 'EU AI Act',\n        keywords: ['EU AI Act', 'European regulation', 'AI governance'],\n        aspects: ['policy updates', 'compliance requirements', 'implementation timeline'],\n        priority: 'high',\n        relevance: 85,\n        reason: 'Major regulatory framework',\n        description: 'European Union AI regulation and compliance'\n      }, {\n        name: 'AI Ethics & Bias',\n        keywords: ['AI ethics', 'algorithmic bias', 'fairness', 'transparency'],\n        aspects: ['ethical guidelines', 'bias detection', 'fairness metrics'],\n        priority: 'high',\n        relevance: 80,\n        reason: 'Critical compliance area',\n        description: 'Ethical considerations and bias in AI systems'\n      }, {\n        name: 'Industry Standards',\n        keywords: ['ISO AI standards', 'IEEE standards', 'best practices'],\n        aspects: ['standard updates', 'certification', 'compliance frameworks'],\n        priority: 'medium',\n        relevance: 70,\n        reason: 'Industry standardization',\n        description: 'Technical standards and certifications'\n      }];\n    }\n\n    // Default subtopics\n    return [{\n      name: `${mainTopic} Trends`,\n      keywords: [`${mainTopic} trends`, 'emerging', 'future'],\n      aspects: ['trend analysis', 'predictions', 'market shifts'],\n      priority: 'high',\n      relevance: 75,\n      reason: 'Track evolving trends',\n      description: 'Emerging trends and future directions'\n    }, {\n      name: `${mainTopic} Technology`,\n      keywords: [`${mainTopic} tech`, 'innovation', 'solutions'],\n      aspects: ['new technology', 'innovations', 'breakthroughs'],\n      priority: 'medium',\n      relevance: 70,\n      reason: 'Technology developments',\n      description: 'Technical innovations and solutions'\n    }];\n  };\n  const generateTopicInfluencers = (topic, industry) => {\n    const topicLower = topic.toLowerCase();\n    if (topicLower.includes('ai')) {\n      return [{\n        name: 'MIT Technology Review',\n        authority: 90,\n        expertise: ['AI research', 'technology trends', 'innovation'],\n        reason: 'Leading technology publication',\n        description: 'Authoritative source on AI developments'\n      }, {\n        name: 'Stanford HAI',\n        authority: 85,\n        expertise: ['AI research', 'policy', 'human-centered AI'],\n        reason: 'Academic thought leadership',\n        description: 'Stanford Human-Centered AI Institute'\n      }];\n    }\n\n    // Default influencers\n    return [{\n      name: 'Industry Reports',\n      authority: 75,\n      expertise: ['market analysis', 'industry trends', 'forecasts'],\n      reason: 'Market intelligence',\n      description: 'Key industry research firms and analysts'\n    }, {\n      name: 'Thought Leaders',\n      authority: 70,\n      expertise: ['expert opinions', 'insights', 'commentary'],\n      reason: 'Expert perspectives',\n      description: 'Industry experts and thought leaders'\n    }];\n  };\n  const performCompetitorAnalysis = async orgData => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    addMessage({\n      type: 'ai',\n      content: `🔍 Excellent! I'm now researching ${orgData.company} to identify your key competitors.\\n\\n` + `**Analyzing:**\\n` + `• ${orgData.url ? 'Website content and positioning' : 'Industry positioning'}\\n` + `• Market landscape and key players\\n` + `• Direct and indirect competitors\\n` + `• Competitive threats and opportunities\\n\\n` + `This comprehensive analysis will help me identify your top 5-10 competitors...`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [{\n      key: 'organization',\n      label: `Analyzing ${orgData.url || orgData.company}`,\n      duration: 2000\n    }, {\n      key: 'stakeholders',\n      label: 'Researching industry landscape',\n      duration: 2500\n    }, {\n      key: 'sources',\n      label: 'Identifying key competitors',\n      duration: 3000\n    }, {\n      key: 'strategy',\n      label: 'Configuring tracking sources',\n      duration: 1500\n    }];\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate competitor suggestions\n    const competitors = await generateCompetitorSuggestions(orgData);\n\n    // Convert competitors to stakeholder format\n    const competitorStakeholders = competitors.map((comp, idx) => ({\n      id: `competitor-${idx}`,\n      name: comp.name,\n      type: 'Competitor',\n      priority: comp.trackingPriority || 'high',\n      influence: comp.threatLevel || 75,\n      keywords: [comp.name, ...(comp.keywords || [])],\n      topics: comp.reasons || ['product launches', 'funding', 'partnerships'],\n      reason: comp.description || `${comp.type || 'Direct competitor'} in your market`,\n      goals: `Track ${comp.name}'s strategic moves and market positioning`,\n      fears: `Missing competitive intelligence on ${comp.name}`,\n      description: comp.description,\n      threatLevel: comp.threatLevel,\n      trackingPriority: comp.trackingPriority\n    }));\n    setStakeholders(competitorStakeholders);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Research Complete!**\\n\\nBased on my analysis of ${orgData.company}, I've identified ${competitorStakeholders.length} key competitors in your market. These companies represent your main competitive threats and opportunities.\\n\\n**Select the competitors you want to track** (or confirm all):`,\n      stakeholderResults: competitorStakeholders,\n      showSelection: true\n    });\n  };\n  const generateCompetitorSuggestions = async orgData => {\n    // Try to use real research service first\n    try {\n      const response = await stakeholderIntelligenceService.researchCompetitors(orgData);\n      if (response && response.competitors) {\n        return response.competitors;\n      }\n    } catch (error) {\n      console.log('Using local competitor generation');\n    }\n\n    // Local intelligent competitor generation based on company\n    const companyLower = orgData.company.toLowerCase();\n\n    // Smart competitor mapping\n    if (companyLower.includes('target')) {\n      return [{\n        name: 'Walmart',\n        type: 'Direct Competitor',\n        description: 'Largest retail competitor with strong omnichannel presence',\n        threatLevel: 95,\n        trackingPriority: 'high',\n        reasons: ['Market leader', 'Price competition', 'Geographic overlap']\n      }, {\n        name: 'Amazon',\n        type: 'Direct Competitor',\n        description: 'E-commerce giant expanding into physical retail',\n        threatLevel: 90,\n        trackingPriority: 'high',\n        reasons: ['Digital dominance', 'Same-day delivery', 'Prime ecosystem']\n      }, {\n        name: 'Costco',\n        type: 'Indirect Competitor',\n        description: 'Membership-based wholesale retailer',\n        threatLevel: 70,\n        trackingPriority: 'medium',\n        reasons: ['Different model', 'Customer overlap', 'Bulk buying trend']\n      }];\n    }\n\n    // Default technology competitors\n    return [{\n      name: 'Primary Competitor',\n      type: 'Direct Competitor',\n      description: 'Main rival in your core market',\n      threatLevel: 85,\n      trackingPriority: 'high',\n      reasons: ['Market share', 'Product overlap', 'Customer base']\n    }, {\n      name: 'Secondary Competitor',\n      type: 'Direct Competitor',\n      description: 'Growing threat in key segments',\n      threatLevel: 75,\n      trackingPriority: 'medium',\n      reasons: ['Fast growth', 'Innovation', 'Pricing pressure']\n    }];\n  };\n  const handleOrganizationInput = async userMessage => {\n    console.log('handleOrganizationInput called with:', userMessage);\n\n    // Parse organization name and URL - handle various input formats\n    const lines = userMessage.split('\\n').filter(l => l.trim());\n    let company = '';\n    let url = '';\n\n    // Smart parsing - handle both single line and multi-line input\n    if (lines.length === 1) {\n      // Single line - could be just company name or \"CompanyName https://url.com\"\n      const parts = lines[0].split(/\\s+/);\n      if (parts.some(p => p.includes('http') || p.includes('www.'))) {\n        // Has URL in the line\n        url = parts.find(p => p.includes('http') || p.includes('www.')) || '';\n        company = parts.filter(p => !p.includes('http') && !p.includes('www.')).join(' ').trim();\n      } else {\n        // Just company name\n        company = lines[0].trim();\n      }\n    } else {\n      // Multi-line input\n      lines.forEach((line, index) => {\n        const trimmed = line.trim();\n        if (trimmed.includes('http://') || trimmed.includes('https://') || trimmed.includes('www.')) {\n          url = trimmed.includes('http') ? trimmed : `https://${trimmed}`;\n        } else if (!company && trimmed) {\n          company = trimmed;\n        }\n      });\n    }\n    console.log('Parsed company:', company, 'url:', url);\n    if (!company || company.length === 0) {\n      addMessage({\n        type: 'ai',\n        content: \"I need at least your organization name to proceed. Please provide:\\n\\n• Organization Name\\n• Website URL (optional but recommended)\",\n        showForm: true\n      });\n      return;\n    }\n    setOrganizationData(prev => ({\n      ...prev,\n      company,\n      url\n    }));\n\n    // Start automated analysis\n    addMessage({\n      type: 'ai',\n      content: `Perfect! Analyzing **${company}**${url ? ` (${url})` : ''}...\\n\\nI'm using AI agents to:\\n• 🏢 Identify your main competitors\\n• 📊 Discover industry topics to monitor\\n• 🎯 Find trending narratives in your space`\n    });\n    setIsAnalyzing(true);\n    performAutomatedAnalysis({\n      company,\n      url\n    });\n  };\n  const getCompetitorsForCompany = (company, url) => {\n    // Smart competitor identification based on company name and URL\n    const companyLower = company.toLowerCase();\n\n    // Tech companies\n    if (companyLower.includes('openai') || companyLower.includes('ai')) {\n      return ['Anthropic', 'Google DeepMind', 'Microsoft AI', 'Cohere', 'Stability AI'];\n    }\n    if (companyLower.includes('microsoft')) {\n      return ['Google', 'Amazon', 'Apple', 'Meta', 'Salesforce'];\n    }\n    if (companyLower.includes('google')) {\n      return ['Microsoft', 'Apple', 'Amazon', 'Meta', 'OpenAI'];\n    }\n\n    // E-commerce\n    if (companyLower.includes('amazon') || companyLower.includes('shopify')) {\n      return ['Amazon', 'Walmart', 'eBay', 'Alibaba', 'Target'];\n    }\n\n    // Social media\n    if (companyLower.includes('meta') || companyLower.includes('facebook')) {\n      return ['TikTok', 'X (Twitter)', 'LinkedIn', 'Snapchat', 'Pinterest'];\n    }\n\n    // Default competitors for unknown companies\n    return ['Industry Leader 1', 'Industry Leader 2', 'Emerging Competitor 1', 'Emerging Competitor 2'];\n  };\n  const getTopicsForCompany = (company, url) => {\n    // Smart topic identification based on company and industry\n    const companyLower = company.toLowerCase();\n\n    // AI companies\n    if (companyLower.includes('ai') || companyLower.includes('openai')) {\n      return ['AI Regulation', 'AGI Development', 'AI Safety', 'LLM Advancements', 'AI Ethics'];\n    }\n\n    // Tech companies\n    if (companyLower.includes('microsoft') || companyLower.includes('google') || companyLower.includes('apple')) {\n      return ['Cloud Computing', 'Cybersecurity', 'Digital Transformation', 'Privacy Regulations', 'Tech Antitrust'];\n    }\n\n    // E-commerce\n    if (companyLower.includes('amazon') || companyLower.includes('shopify')) {\n      return ['E-commerce Trends', 'Supply Chain Innovation', 'Last-Mile Delivery', 'Retail Technology', 'Consumer Behavior'];\n    }\n\n    // Finance\n    if (companyLower.includes('bank') || companyLower.includes('capital')) {\n      return ['Fintech Disruption', 'Digital Banking', 'Cryptocurrency', 'Financial Regulations', 'ESG Investing'];\n    }\n\n    // Default topics\n    return ['Industry Trends', 'Market Dynamics', 'Regulatory Changes', 'Technology Innovation', 'Consumer Sentiment'];\n  };\n  const performAutomatedAnalysis = async orgData => {\n    setCurrentStep('analyzing');\n    setAnalysisProgress({\n      organization: 0,\n      stakeholders: 0,\n      sources: 0,\n      strategy: 0\n    });\n\n    // Progressive analysis animation\n    setTimeout(() => setAnalysisProgress(prev => ({\n      ...prev,\n      organization: 100\n    })), 1000);\n    setTimeout(() => setAnalysisProgress(prev => ({\n      ...prev,\n      stakeholders: 100\n    })), 2000);\n    setTimeout(() => setAnalysisProgress(prev => ({\n      ...prev,\n      sources: 100\n    })), 3000);\n    setTimeout(() => setAnalysisProgress(prev => ({\n      ...prev,\n      strategy: 100\n    })), 4000);\n\n    // Fetch real data from backend\n    try {\n      // Get auth token from localStorage (same as other components)\n      const token = localStorage.getItem('token');\n      console.log('Using token:', token ? 'Token found' : 'No token found');\n\n      // Build headers\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n\n      // Fetch competitors and topics in parallel\n      const [competitorsResponse, topicsResponse] = await Promise.all([fetch(`${API_BASE_URL}/intelligence/discover-competitors`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          company: orgData.company,\n          industry: orgData.url || 'technology'\n        })\n      }), fetch(`${API_BASE_URL}/intelligence/discover-topics`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify({\n          company: orgData.company,\n          industry: orgData.url || 'technology'\n        })\n      })]);\n      const competitorsData = await competitorsResponse.json();\n      const topicsData = await topicsResponse.json();\n\n      // Use real data if available, fallback to local discovery\n      let competitors, topics;\n      if (competitorsData.success && competitorsData.competitors) {\n        // Extract competitor names from the objects\n        competitors = competitorsData.competitors.map(c => typeof c === 'object' ? c.name || c.competitor || JSON.stringify(c) : c);\n        console.log('Real competitors found:', competitors);\n      } else {\n        competitors = getCompetitorsForCompany(orgData.company, orgData.url);\n      }\n      if (topicsData.success && topicsData.topics) {\n        // Extract topic names from the objects\n        topics = topicsData.topics.map(t => typeof t === 'object' ? t.topic || t.name || JSON.stringify(t) : t);\n        console.log('Real topics found:', topics);\n      } else {\n        topics = getTopicsForCompany(orgData.company, orgData.url);\n      }\n\n      // Wait for animation to complete\n      setTimeout(() => {\n        // Create individual targets for each competitor and topic\n        const competitorTargets = competitors.map(competitorName => ({\n          name: competitorName,\n          type: 'competitor',\n          priority: 'high',\n          reason: `Track ${competitorName}'s competitive moves and market positioning`,\n          keywords: [competitorName.toLowerCase()],\n          topics: ['Product Launches', 'Pricing Changes', 'Market Expansion', 'Partnership Announcements']\n        }));\n        const topicTargets = topics.map(topicName => ({\n          name: topicName,\n          type: 'topic',\n          priority: 'high',\n          reason: `Monitor developments in ${topicName}`,\n          keywords: topicName.toLowerCase().split(' '),\n          topics: [topicName]\n        }));\n        const discoveredTargets = [...competitorTargets, ...topicTargets];\n        setStakeholders(discoveredTargets);\n        setIsAnalyzing(false);\n\n        // Store editable lists\n        setEditableCompetitors(competitors);\n        setEditableTopics(topics);\n\n        // Show results with real data\n        addMessage({\n          type: 'ai',\n          content: `✅ **Discovery Complete!**\\n\\n**Click any item below to edit it:**`,\n          editableTargets: {\n            competitors: competitors,\n            topics: topics\n          },\n          options: [{\n            label: '✅ Start Monitoring These',\n            value: 'proceed'\n          }, {\n            label: '➕ Add More Competitors',\n            value: 'add_competitors'\n          }, {\n            label: '📝 Add More Topics',\n            value: 'customize_topics'\n          }]\n        });\n        setCurrentStep('confirm_targets');\n      }, 4500);\n    } catch (error) {\n      console.error('Error fetching real data:', error);\n      // Fallback to local discovery\n      setTimeout(() => {\n        const competitors = getCompetitorsForCompany(orgData.company, orgData.url);\n        const topics = getTopicsForCompany(orgData.company, orgData.url);\n\n        // Create individual targets for each competitor and topic (fallback)\n        const competitorTargets = competitors.map(competitorName => ({\n          name: competitorName,\n          type: 'competitor',\n          priority: 'high',\n          reason: `Track ${competitorName}'s competitive moves and market positioning`,\n          keywords: [competitorName.toLowerCase()],\n          topics: ['Product Launches', 'Pricing Changes', 'Market Expansion', 'Partnership Announcements']\n        }));\n        const topicTargets = topics.map(topicName => ({\n          name: topicName,\n          type: 'topic',\n          priority: 'high',\n          reason: `Monitor developments in ${topicName}`,\n          keywords: topicName.toLowerCase().split(' '),\n          topics: [topicName]\n        }));\n        const discoveredTargets = [...competitorTargets, ...topicTargets];\n        setStakeholders(discoveredTargets);\n        setIsAnalyzing(false);\n\n        // Store editable lists\n        setEditableCompetitors(competitors);\n        setEditableTopics(topics);\n        addMessage({\n          type: 'ai',\n          content: `✅ **Discovery Complete!**\\n\\n**Click any item below to edit it:**`,\n          editableTargets: {\n            competitors: competitors,\n            topics: topics\n          },\n          options: [{\n            label: '✅ Start Monitoring These',\n            value: 'proceed'\n          }, {\n            label: '➕ Add More Competitors',\n            value: 'add_competitors'\n          }, {\n            label: '📝 Add More Topics',\n            value: 'customize_topics'\n          }]\n        });\n        setCurrentStep('confirm_targets');\n      }, 4500);\n    }\n  };\n  const performDeepOrganizationAnalysis = async orgData => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n\n    // Show analysis progress with all collected data\n    addMessage({\n      type: 'ai',\n      content: `Excellent! I'm now performing a deep analysis with the following information:\\n\\n` + `🏢 **Organization**: ${orgData.company}\\n` + `🌐 **Website**: ${orgData.url || 'Not provided'}\\n` + `🎯 **Strategic Goals**: ${orgData.strategicGoals ? 'Identified' : 'Not provided'}\\n` + `👥 **Known Stakeholders**: ${orgData.priorityStakeholders && orgData.priorityStakeholders.toLowerCase() !== 'none' ? 'Provided' : 'Will discover'}\\n\\n` + `This comprehensive research will help me identify and configure your key stakeholders automatically.`,\n      showProgress: true\n    });\n\n    // Enhanced research phases showing deeper analysis\n    const phases = [{\n      key: 'organization',\n      label: `Analyzing ${orgData.company} and ${orgData.url || 'industry context'}`,\n      duration: 2000\n    }, {\n      key: 'stakeholders',\n      label: 'Mapping stakeholders to strategic goals',\n      duration: 2500\n    }, {\n      key: 'sources',\n      label: 'Building custom intelligence sources',\n      duration: 2000\n    }, {\n      key: 'strategy',\n      label: 'Creating goal-aligned monitoring strategy',\n      duration: 1500\n    }];\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate intelligent stakeholder suggestions with all context\n    let suggestedStakeholders = [];\n    try {\n      // First, create/update organization in database\n      const orgResult = await stakeholderIntelligenceService.createOrUpdateOrganization({\n        name: orgData.company,\n        url: orgData.url,\n        industry: determineIndustryFromUrl(orgData.url),\n        type: orgData.company.toLowerCase().includes('karv') || orgData.company.toLowerCase().includes('agency') ? 'agency' : 'company',\n        strategicGoals: orgData.strategicGoals\n      });\n\n      // Store organization ID for later use\n      orgData.organizationId = orgResult.organizationId;\n      setOrganizationData(prev => ({\n        ...prev,\n        organizationId: orgResult.organizationId\n      }));\n\n      // Try to get AI-powered suggestions from backend\n      suggestedStakeholders = await stakeholderIntelligenceService.generateStakeholderSuggestions(orgData);\n\n      // If API fails or returns empty, use local generation\n      if (!suggestedStakeholders || suggestedStakeholders.length === 0) {\n        suggestedStakeholders = await generateSmartStakeholderSuggestions(orgData);\n      }\n    } catch (error) {\n      console.error('Error with API, using local generation:', error);\n      // Fall back to local generation\n      suggestedStakeholders = await generateSmartStakeholderSuggestions(orgData);\n    }\n    setStakeholders(suggestedStakeholders);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `Analysis complete! Based on my research of ${orgData.company}, your strategic goals, and the URL analysis, I've identified ${suggestedStakeholders.length} key stakeholder groups that significantly influence your success. These groups represent dozens of individual entities we'll monitor.`,\n      stakeholderResults: suggestedStakeholders\n    });\n  };\n  const animateProgress = (key, duration) => {\n    return new Promise(resolve => {\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += 10;\n        setAnalysisProgress(prev => ({\n          ...prev,\n          [key]: progress\n        }));\n        if (progress >= 100) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, duration / 10);\n    });\n  };\n  const determineIndustryFromUrl = url => {\n    if (!url) return null;\n    const domain = url.toLowerCase();\n\n    // Simple industry detection based on domain patterns\n    if (domain.includes('tech') || domain.includes('.io') || domain.includes('software')) return 'Technology';\n    if (domain.includes('bank') || domain.includes('capital') || domain.includes('invest')) return 'Financial Services';\n    if (domain.includes('health') || domain.includes('med') || domain.includes('pharma')) return 'Healthcare';\n    if (domain.includes('retail') || domain.includes('shop') || domain.includes('store')) return 'Retail';\n    if (domain.includes('energy') || domain.includes('oil') || domain.includes('solar')) return 'Energy';\n    return 'Technology'; // Default fallback\n  };\n  const generateSmartStakeholderSuggestions = async orgData => {\n    var _orgData$url, _orgData$strategicGoa, _orgData$priorityStak;\n    const suggestions = [];\n\n    // Determine company type and context\n    const companyName = orgData.company.toLowerCase();\n    const url = ((_orgData$url = orgData.url) === null || _orgData$url === void 0 ? void 0 : _orgData$url.toLowerCase()) || '';\n    const goals = ((_orgData$strategicGoa = orgData.strategicGoals) === null || _orgData$strategicGoa === void 0 ? void 0 : _orgData$strategicGoa.toLowerCase()) || '';\n    const userStakeholders = ((_orgData$priorityStak = orgData.priorityStakeholders) === null || _orgData$priorityStak === void 0 ? void 0 : _orgData$priorityStak.toLowerCase()) || '';\n\n    // Analyze company type from name, URL, and context\n    // KARV and similar names should be detected as agencies\n    const isAgency = companyName.includes('communications') || companyName.includes('pr') || companyName.includes('marketing') || companyName.includes('agency') || companyName.includes('karv') || companyName.includes('publicis') || companyName.includes('omnicom') || companyName.includes('wpp') || url.includes('agency') || url.includes('communications') || goals.includes('new business') || goals.includes('win clients');\n    const isB2B = goals.includes('business') || goals.includes('enterprise') || goals.includes('b2b') || companyName.includes('solutions');\n    const targetingTech = goals.includes('technology') || goals.includes('tech') || goals.includes('software') || goals.includes('saas') || goals.includes('generate new business with tech');\n\n    // For KARV (communications firm) wanting new tech business\n    if (isAgency && targetingTech) {\n      // Specific Major Tech Companies as PROSPECTS\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Microsoft',\n        type: 'Target Client - Enterprise',\n        priority: 'critical',\n        reason: 'Major tech company that regularly uses PR agencies for product launches and corporate comms',\n        influence: 10,\n        keywords: ['microsoft', 'msft', 'satya nadella', 'azure', 'office'],\n        preIndexed: true,\n        sourceCount: 15,\n        entities: ['Microsoft'],\n        monitoringTopics: ['product launches needing PR support', 'PR agency RFPs', 'marketing leadership changes', 'crisis communications needs', 'market expansion announcements']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Salesforce',\n        type: 'Target Client - Enterprise SaaS',\n        priority: 'critical',\n        reason: 'Leading SaaS company with extensive PR needs for Dreamforce and product launches',\n        influence: 10,\n        keywords: ['salesforce', 'crm', 'marc benioff', 'dreamforce'],\n        preIndexed: true,\n        sourceCount: 12,\n        entities: ['Salesforce'],\n        monitoringTopics: ['Dreamforce planning', 'acquisition communications', 'product launch campaigns', 'executive thought leadership']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'High-Growth Tech Startups',\n        type: 'Target Client Segment',\n        priority: 'critical',\n        reason: 'Series B-D startups often need first-time PR agency partnerships',\n        influence: 9,\n        keywords: ['series b', 'series c', 'unicorn', 'startup', 'scale-up'],\n        preIndexed: false,\n        sourceCount: 40,\n        entities: ['Funded Startups', 'Unicorns', 'Pre-IPO Companies'],\n        monitoringTopics: ['funding announcements (PR opportunity)', 'first CMO/VP Marketing hire', 'product launches', 'market expansion', 'competitive positioning needs']\n      });\n\n      // Specific Competitor Agencies\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Edelman',\n        type: 'Competitor - Global Leader',\n        priority: 'high',\n        reason: 'World\\'s largest PR firm - monitor for competitive intelligence',\n        influence: 8,\n        keywords: ['edelman', 'edelman pr'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['Edelman'],\n        monitoringTopics: ['tech client wins', 'new service offerings', 'talent acquisitions', 'industry thought leadership']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Weber Shandwick',\n        type: 'Competitor - Major Agency',\n        priority: 'medium',\n        reason: 'Leading global PR agency with strong tech practice',\n        influence: 7,\n        keywords: ['weber shandwick', 'weber'],\n        preIndexed: true,\n        sourceCount: 6,\n        entities: ['Weber Shandwick'],\n        monitoringTopics: ['client movements', 'tech sector focus', 'award wins', 'executive changes']\n      });\n\n      // Specific Tech Media Outlets\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'TechCrunch',\n        type: 'Media Partner - Tech',\n        priority: 'high',\n        reason: 'Premier tech media outlet for client coverage and thought leadership',\n        influence: 9,\n        keywords: ['techcrunch', 'tc', 'disrupt'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['TechCrunch'],\n        monitoringTopics: ['reporter beats and interests', 'editorial calendar', 'Disrupt conference', 'startup coverage priorities']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Wall Street Journal Tech',\n        type: 'Media Partner - Business',\n        priority: 'high',\n        reason: 'Leading business publication for enterprise tech coverage',\n        influence: 9,\n        keywords: ['wsj', 'wall street journal', 'dow jones'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['Wall Street Journal'],\n        monitoringTopics: ['enterprise tech coverage', 'tech reporter needs', 'opinion section opportunities', 'executive profiles']\n      });\n\n      // Specific VC Firms as Referral Partners  \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Sequoia Capital',\n        type: 'Referral Partner - Premier VC',\n        priority: 'high',\n        reason: 'Top-tier VC that frequently refers PR agencies to portfolio companies',\n        influence: 10,\n        keywords: ['sequoia', 'sequoia capital', 'roelof botha'],\n        preIndexed: true,\n        sourceCount: 10,\n        entities: ['Sequoia Capital'],\n        monitoringTopics: ['new portfolio investments', 'portfolio company launches', 'partner recommendations', 'portfolio PR needs']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Andreessen Horowitz',\n        type: 'Referral Partner - Major VC',\n        priority: 'high',\n        reason: 'Leading VC with 400+ portfolio companies often needing PR services',\n        influence: 10,\n        keywords: ['a16z', 'andreessen horowitz', 'marc andreessen'],\n        preIndexed: true,\n        sourceCount: 12,\n        entities: ['Andreessen Horowitz'],\n        monitoringTopics: ['new investments', 'portfolio expansions', 'marketing services program', 'portfolio company needs']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Y Combinator',\n        type: 'Referral Partner - Accelerator',\n        priority: 'high',\n        reason: 'YC companies often need PR help post-Demo Day',\n        influence: 9,\n        keywords: ['y combinator', 'yc', 'demo day'],\n        preIndexed: false,\n        sourceCount: 15,\n        entities: ['Y Combinator'],\n        monitoringTopics: ['Demo Day announcements', 'new batch companies', 'YC partner advice on PR', 'portfolio launches']\n      });\n    } else if (isB2B && !isAgency) {\n      // B2B Software/SaaS Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Enterprise Customers & Prospects',\n        type: 'Revenue Drivers',\n        priority: 'critical',\n        reason: 'Current customers and target accounts driving revenue growth',\n        influence: 10,\n        keywords: ['customer', 'client', 'account', 'enterprise', 'fortune 500'],\n        preIndexed: false,\n        sourceCount: 30,\n        entities: ['Current Enterprise Accounts', 'Target Fortune 500', 'Strategic Partners'],\n        monitoringTopics: ['digital transformation', 'technology budgets', 'vendor evaluations', 'RFPs']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Technology Investors',\n        type: 'Financial Stakeholders',\n        priority: 'high',\n        reason: 'VCs and growth investors influencing strategy and providing capital',\n        influence: 9,\n        keywords: ['venture capital', 'private equity', 'investor', 'funding'],\n        preIndexed: true,\n        sourceCount: 40,\n        entities: ['Current Investors', 'Target VCs', 'Growth Equity Firms'],\n        monitoringTopics: ['portfolio movements', 'investment thesis', 'market opinions', 'fund raising']\n      });\n    } else if (companyName.includes('health') || url.includes('health') || goals.includes('patient')) {\n      // Healthcare Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Healthcare Regulators & Compliance Bodies',\n        type: 'Regulatory Oversight',\n        priority: 'critical',\n        reason: 'FDA, CMS, and other bodies controlling market access and compliance',\n        influence: 10,\n        keywords: ['fda', 'cms', 'healthcare regulation', 'hipaa', 'compliance'],\n        preIndexed: true,\n        sourceCount: 35,\n        entities: ['FDA', 'CMS', 'HHS', 'State Health Departments'],\n        monitoringTopics: ['regulatory changes', 'compliance requirements', 'approval processes', 'enforcement actions']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Healthcare Providers & Systems',\n        type: 'Customer Base',\n        priority: 'high',\n        reason: 'Hospitals, clinics, and providers implementing your solutions',\n        influence: 9,\n        keywords: ['hospital', 'health system', 'clinic', 'physician', 'provider'],\n        preIndexed: false,\n        sourceCount: 30,\n        entities: ['Major Health Systems', 'Academic Medical Centers', 'Provider Networks'],\n        monitoringTopics: ['technology adoption', 'budget cycles', 'clinical needs', 'patient outcomes']\n      });\n    } else if (companyName.includes('retail') || url.includes('retail') || goals.includes('consumer')) {\n      // Retail/Consumer Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Consumer Groups & Influencers',\n        type: 'Market Drivers',\n        priority: 'critical',\n        reason: 'End consumers and social influencers driving brand perception',\n        influence: 9,\n        keywords: ['consumer', 'customer', 'influencer', 'social media', 'review'],\n        preIndexed: false,\n        sourceCount: 40,\n        entities: ['Consumer Advocacy Groups', 'Social Media Influencers', 'Review Platforms'],\n        monitoringTopics: ['consumer sentiment', 'product reviews', 'social trends', 'brand mentions']\n      });\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Retail Partners & Distributors',\n        type: 'Channel Partners',\n        priority: 'high',\n        reason: 'Key retail chains and distribution partners affecting market reach',\n        influence: 8,\n        keywords: ['retailer', 'distributor', 'wholesale', 'amazon', 'walmart'],\n        preIndexed: true,\n        sourceCount: 25,\n        entities: ['Major Retailers', 'E-commerce Platforms', 'Distribution Networks'],\n        monitoringTopics: ['partner requirements', 'shelf space', 'promotional opportunities', 'supply chain']\n      });\n    } else {\n      // Default but still try to be intelligent based on goals\n      if (goals.includes('ipo') || goals.includes('public')) {\n        suggestions.push({\n          id: `stakeholder-${suggestions.length}`,\n          name: 'IPO Readiness Stakeholders',\n          type: 'Go-Public Strategy',\n          priority: 'critical',\n          reason: 'Investment banks, analysts, and regulators critical for IPO success',\n          influence: 10,\n          keywords: ['investment bank', 'ipo', 'sec', 'analyst', 'underwriter'],\n          preIndexed: true,\n          sourceCount: 35,\n          entities: ['Goldman Sachs', 'Morgan Stanley', 'JPMorgan', 'SEC', 'Financial Analysts'],\n          monitoringTopics: ['ipo market conditions', 'comparable valuations', 'regulatory requirements', 'analyst coverage']\n        });\n      }\n      if (goals.includes('acquisition') || goals.includes('m&a')) {\n        suggestions.push({\n          id: `stakeholder-${suggestions.length}`,\n          name: 'M&A Targets & Strategic Buyers',\n          type: 'Growth Strategy',\n          priority: 'high',\n          reason: 'Potential acquisition targets and strategic acquirers',\n          influence: 9,\n          keywords: ['acquisition', 'merger', 'strategic buyer', 'private equity'],\n          preIndexed: false,\n          sourceCount: 30,\n          entities: ['Strategic Buyers', 'PE Firms', 'Acquisition Targets', 'Investment Banks'],\n          monitoringTopics: ['M&A activity', 'valuations', 'strategic moves', 'integration challenges']\n        });\n      }\n    }\n\n    // Add industry-specific associations\n    if (isAgency) {\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'PR & Marketing Associations',\n        type: 'Industry Organizations',\n        priority: 'medium',\n        reason: 'Industry credibility, awards, best practices, and networking',\n        influence: 6,\n        keywords: ['prsa', 'prca', 'marketing association', 'communications association'],\n        preIndexed: false,\n        sourceCount: 15,\n        entities: ['PRSA', 'PRCA', 'AMA', 'Content Marketing Institute'],\n        monitoringTopics: ['industry trends', 'award deadlines', 'best practices', 'regulatory changes', 'industry events']\n      });\n    }\n\n    // Always add user-mentioned stakeholders with enhanced context\n    if (userStakeholders && userStakeholders !== 'none') {\n      const userMentions = userStakeholders.split(/[,;]/).map(s => s.trim());\n      userMentions.forEach(mention => {\n        if (mention) {\n          suggestions.unshift({\n            id: `user-${suggestions.length}`,\n            name: mention,\n            type: 'User Priority',\n            priority: 'critical',\n            reason: 'Specifically identified as important by your team',\n            influence: 10,\n            keywords: [mention.toLowerCase()],\n            preIndexed: false,\n            sourceCount: 20,\n            entities: [mention],\n            monitoringTopics: ['all relevant news', 'announcements', 'leadership changes'],\n            isUserPriority: true\n          });\n        }\n      });\n    }\n    return suggestions;\n  };\n  const finalizeStrategy = async () => {\n    setIsTyping(true);\n    addMessage({\n      type: 'ai',\n      content: \"✅ **Excellent!** I'm finalizing your intelligence monitoring strategy...\\n\\nConfiguring:\\n• Stakeholder monitoring sources\\n• Topic tracking systems\\n• Real-time intelligence gathering\\n• Automated alerts and insights\"\n    });\n\n    // Generate organization ID if not present\n    if (!organizationData.organizationId) {\n      organizationData.organizationId = `org-${Date.now()}`;\n    }\n\n    // Build final stakeholders list from editable lists\n    const finalStakeholders = [];\n\n    // Add competitors\n    if (editableCompetitors && editableCompetitors.length > 0) {\n      editableCompetitors.forEach(name => {\n        finalStakeholders.push({\n          name: name,\n          type: 'competitor',\n          priority: 'high',\n          keywords: [name.toLowerCase()],\n          topics: ['Product Launches', 'Market Moves', 'Partnerships', 'Funding']\n        });\n      });\n    }\n\n    // Add topics\n    if (editableTopics && editableTopics.length > 0) {\n      editableTopics.forEach(name => {\n        finalStakeholders.push({\n          name: name,\n          type: 'topic',\n          priority: 'high',\n          keywords: name.toLowerCase().split(' '),\n          topics: [name]\n        });\n      });\n    }\n\n    // Update stakeholders with final list\n    setStakeholders(finalStakeholders);\n    try {\n      // Save stakeholder configuration to backend if we have an organization ID\n      if (organizationData.organizationId) {\n        // Prepare stakeholders with sources for backend\n        const stakeholdersWithSources = await Promise.all(finalStakeholders.map(async s => {\n          let sources = [];\n\n          // If pre-indexed, get sources from database\n          if (s.preIndexed && s.name) {\n            const preIndexed = findPreIndexedStakeholder(s.name);\n            if (preIndexed && preIndexed.sources) {\n              sources = preIndexed.sources;\n            }\n          } else {\n            // Discover sources using API\n            try {\n              sources = await stakeholderIntelligenceService.discoverStakeholderSources(s.name, s.type);\n            } catch (error) {\n              console.error('Error discovering sources for', s.name, error);\n            }\n          }\n          return {\n            ...s,\n            sources: sources\n          };\n        }));\n\n        // Save configuration to database\n        await stakeholderIntelligenceService.saveStakeholderConfiguration(organizationData.organizationId, stakeholdersWithSources);\n      }\n    } catch (error) {\n      console.error('Error saving stakeholder configuration:', error);\n      // Continue even if save fails - user can still see the strategy\n    }\n\n    // Prepare enhanced strategy data with all collected information\n    // Use finalStakeholders directly since setState might not have updated yet\n    const enhancedStrategy = {\n      organizationId: organizationData.organizationId,\n      company: organizationData.company,\n      url: organizationData.url,\n      industry: determineIndustryFromUrl(organizationData.url) || 'Technology',\n      strategicGoals: organizationData.strategicGoals,\n      userPriorityStakeholders: organizationData.priorityStakeholders,\n      stakeholders: finalStakeholders.map(s => ({\n        ...s,\n        topics: s.monitoringTopics || s.topics,\n        sources: s.preIndexed ? 'Pre-configured' : 'To be configured',\n        goals: `Monitor ${s.name} for strategic intelligence`,\n        fears: `Missing critical ${s.type.toLowerCase()} signals`\n      })),\n      stakeholderGroups: finalStakeholders.map((s, idx) => ({\n        id: `stakeholder-${idx}`,\n        name: s.name,\n        type: s.type,\n        influence: s.priority === 'high' ? 9 : s.priority === 'medium' ? 7 : 5,\n        interest: s.priority === 'high' ? 9 : s.priority === 'medium' ? 7 : 5,\n        sentiment: 'neutral',\n        currentSentiment: 5,\n        targetSentiment: 8,\n        engagementLevel: 6,\n        trend: 'stable',\n        concerns: [s.reason],\n        keywords: s.keywords || [],\n        topics: s.topics || [],\n        preIndexed: s.preIndexed || false,\n        sourceCount: s.sourceCount || 0\n      })),\n      overview: `Automated intelligence monitoring for ${organizationData.company}`,\n      enhancedFeatures: {\n        preIndexedCount: finalStakeholders.filter(s => s.preIndexed).length,\n        totalSources: finalStakeholders.reduce((acc, s) => acc + s.sourceCount, 0),\n        researchAgentsEnabled: true,\n        urlAnalysisEnabled: true,\n        strategicAlignment: true,\n        backendIntegration: true\n      }\n    };\n    setTimeout(() => {\n      onStrategyComplete(enhancedStrategy);\n      setIsTyping(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%',\n      background: '#f9fafb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '800px',\n        margin: '0 auto',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflowY: 'auto',\n          padding: '2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '1rem'\n        },\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: '70%',\n              padding: '1rem',\n              borderRadius: '0.75rem',\n              background: message.type === 'user' ? '#6366f1' : 'white',\n              color: message.type === 'user' ? 'white' : '#111827',\n              boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n            },\n            children: [message.type === 'ai' && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem',\n                marginBottom: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Bot, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1769,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: '600',\n                  fontSize: '0.875rem'\n                },\n                children: \"AI Strategy Advisor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1770,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1768,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: 'pre-wrap'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1774,\n              columnNumber: 17\n            }, this), message.editableTargets && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [editableCompetitors && editableCompetitors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '1rem',\n                    fontWeight: '600',\n                    marginBottom: '0.5rem',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.5rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Building2, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1783,\n                    columnNumber: 27\n                  }, this), \" Competitors to Track\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1782,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '0.5rem'\n                  },\n                  children: [editableCompetitors.map((competitor, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      padding: '0.5rem',\n                      background: '#f9fafb',\n                      borderRadius: '0.5rem',\n                      border: '1px solid #e5e7eb'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: '600',\n                        color: '#6366f1',\n                        minWidth: '20px'\n                      },\n                      children: [idx + 1, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1796,\n                      columnNumber: 31\n                    }, this), editingType === 'competitor' && editingIndex === idx ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        value: editValue,\n                        onChange: e => setEditValue(e.target.value),\n                        onKeyPress: e => {\n                          if (e.key === 'Enter') {\n                            e.preventDefault();\n                            const updated = [...editableCompetitors];\n                            updated[idx] = editValue;\n                            setEditableCompetitors(updated);\n                            setEditingType(null);\n                            setEditingIndex(null);\n                            setEditValue('');\n                          }\n                        },\n                        onBlur: () => {\n                          const updated = [...editableCompetitors];\n                          updated[idx] = editValue;\n                          setEditableCompetitors(updated);\n                          setEditingType(null);\n                          setEditingIndex(null);\n                          setEditValue('');\n                        },\n                        style: {\n                          flex: 1,\n                          padding: '0.25rem',\n                          border: '1px solid #6366f1',\n                          borderRadius: '0.25rem',\n                          outline: 'none'\n                        },\n                        autoFocus: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1799,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const updated = editableCompetitors.filter((_, i) => i !== idx);\n                          setEditableCompetitors(updated);\n                          setEditingType(null);\n                          setEditingIndex(null);\n                        },\n                        style: {\n                          padding: '0.25rem',\n                          background: '#ef4444',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '0.25rem',\n                          cursor: 'pointer',\n                          fontSize: '0.75rem'\n                        },\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1831,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        setEditingType('competitor');\n                        setEditingIndex(idx);\n                        setEditValue(competitor);\n                      },\n                      style: {\n                        flex: 1,\n                        cursor: 'pointer',\n                        color: '#374151',\n                        textDecoration: 'underline'\n                      },\n                      children: competitor\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1852,\n                      columnNumber: 33\n                    }, this)]\n                  }, `comp-${idx}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1787,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const newName = prompt('Enter competitor name:');\n                      if (newName && newName.trim()) {\n                        const updated = [...editableCompetitors, newName.trim()];\n                        setEditableCompetitors(updated);\n                      }\n                    },\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      padding: '0.5rem',\n                      background: 'white',\n                      borderRadius: '0.5rem',\n                      border: '1px dashed #6366f1',\n                      color: '#6366f1',\n                      cursor: 'pointer',\n                      fontSize: '0.875rem',\n                      fontWeight: '500',\n                      transition: 'all 0.2s'\n                    },\n                    onMouseEnter: e => {\n                      e.currentTarget.style.background = '#f0f0ff';\n                      e.currentTarget.style.borderStyle = 'solid';\n                    },\n                    onMouseLeave: e => {\n                      e.currentTarget.style.background = 'white';\n                      e.currentTarget.style.borderStyle = 'dashed';\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: '1.2rem'\n                      },\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1902,\n                      columnNumber: 29\n                    }, this), \" Add Competitor\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1871,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1785,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1781,\n                columnNumber: 23\n              }, this), editableTopics && editableTopics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    fontSize: '1rem',\n                    fontWeight: '600',\n                    marginBottom: '0.5rem',\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.5rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n                    size: 18\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1912,\n                    columnNumber: 27\n                  }, this), \" Topics to Monitor\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1911,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '0.5rem'\n                  },\n                  children: [editableTopics.map((topic, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      padding: '0.5rem',\n                      background: '#f9fafb',\n                      borderRadius: '0.5rem',\n                      border: '1px solid #e5e7eb'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: '600',\n                        color: '#10b981',\n                        minWidth: '20px'\n                      },\n                      children: [idx + 1, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1925,\n                      columnNumber: 31\n                    }, this), editingType === 'topic' && editingIndex === idx ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        value: editValue,\n                        onChange: e => setEditValue(e.target.value),\n                        onKeyPress: e => {\n                          if (e.key === 'Enter') {\n                            e.preventDefault();\n                            const updated = [...editableTopics];\n                            updated[idx] = editValue;\n                            setEditableTopics(updated);\n                            setEditingType(null);\n                            setEditingIndex(null);\n                            setEditValue('');\n                          }\n                        },\n                        onBlur: () => {\n                          const updated = [...editableTopics];\n                          updated[idx] = editValue;\n                          setEditableTopics(updated);\n                          setEditingType(null);\n                          setEditingIndex(null);\n                          setEditValue('');\n                        },\n                        style: {\n                          flex: 1,\n                          padding: '0.25rem',\n                          border: '1px solid #10b981',\n                          borderRadius: '0.25rem',\n                          outline: 'none'\n                        },\n                        autoFocus: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1928,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          const updated = editableTopics.filter((_, i) => i !== idx);\n                          setEditableTopics(updated);\n                          setEditingType(null);\n                          setEditingIndex(null);\n                        },\n                        style: {\n                          padding: '0.25rem',\n                          background: '#ef4444',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '0.25rem',\n                          cursor: 'pointer',\n                          fontSize: '0.75rem'\n                        },\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1960,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        setEditingType('topic');\n                        setEditingIndex(idx);\n                        setEditValue(topic);\n                      },\n                      style: {\n                        flex: 1,\n                        cursor: 'pointer',\n                        color: '#374151',\n                        textDecoration: 'underline'\n                      },\n                      children: topic\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1981,\n                      columnNumber: 33\n                    }, this)]\n                  }, `topic-${idx}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1916,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const newName = prompt('Enter topic to monitor:');\n                      if (newName && newName.trim()) {\n                        const updated = [...editableTopics, newName.trim()];\n                        setEditableTopics(updated);\n                      }\n                    },\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      padding: '0.5rem',\n                      background: 'white',\n                      borderRadius: '0.5rem',\n                      border: '1px dashed #10b981',\n                      color: '#10b981',\n                      cursor: 'pointer',\n                      fontSize: '0.875rem',\n                      fontWeight: '500',\n                      transition: 'all 0.2s'\n                    },\n                    onMouseEnter: e => {\n                      e.currentTarget.style.background = '#f0fff0';\n                      e.currentTarget.style.borderStyle = 'solid';\n                    },\n                    onMouseLeave: e => {\n                      e.currentTarget.style.background = 'white';\n                      e.currentTarget.style.borderStyle = 'dashed';\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: '1.2rem'\n                      },\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2031,\n                      columnNumber: 29\n                    }, this), \" Add Topic\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2000,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1914,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1910,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1778,\n              columnNumber: 19\n            }, this), message.showProgress && isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: Object.entries(analysisProgress).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '0.75rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    marginBottom: '0.25rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '0.875rem',\n                      textTransform: 'capitalize'\n                    },\n                    children: [key === 'organization' && 'Organization Analysis', key === 'stakeholders' && 'Stakeholder Discovery', key === 'sources' && 'Source Configuration', key === 'strategy' && 'Strategy Generation']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2045,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '0.875rem'\n                    },\n                    children: [value, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2051,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2044,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    height: '6px',\n                    background: '#e5e7eb',\n                    borderRadius: '3px',\n                    overflow: 'hidden'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      height: '100%',\n                      background: '#6366f1',\n                      width: `${value}%`,\n                      transition: 'width 0.3s ease'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2059,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2053,\n                  columnNumber: 25\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2043,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2041,\n              columnNumber: 19\n            }, this), message.stakeholderResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  margin: '0 0 0.75rem 0',\n                  fontSize: '1rem',\n                  fontWeight: '600'\n                },\n                children: \"Discovered Stakeholders:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2074,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '0.5rem'\n                },\n                children: message.stakeholderResults.map(stakeholder => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: '0.75rem',\n                    background: stakeholder.preIndexed ? '#f0f9ff' : '#f9fafb',\n                    borderRadius: '0.5rem',\n                    border: `1px solid ${stakeholder.preIndexed ? '#bfdbfe' : '#e5e7eb'}`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'start'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        flex: 1\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontWeight: '600',\n                          marginBottom: '0.25rem'\n                        },\n                        children: stakeholder.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2087,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '0.875rem',\n                          color: '#6b7280',\n                          marginBottom: '0.25rem'\n                        },\n                        children: [stakeholder.type, \" \\u2022 Influence: \", stakeholder.influence, \"/10\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2090,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: '0.75rem',\n                          color: '#6b7280'\n                        },\n                        children: stakeholder.reason\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2093,\n                        columnNumber: 31\n                      }, this), stakeholder.entities && stakeholder.entities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          marginTop: '0.5rem',\n                          fontSize: '0.75rem',\n                          color: '#4b5563'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Includes:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2098,\n                          columnNumber: 35\n                        }, this), \" \", stakeholder.entities.join(', ')]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2097,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2086,\n                      columnNumber: 29\n                    }, this), stakeholder.preIndexed && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.25rem',\n                        padding: '0.25rem 0.5rem',\n                        background: '#dbeafe',\n                        borderRadius: '0.375rem',\n                        fontSize: '0.75rem',\n                        color: '#1e40af',\n                        fontWeight: '500',\n                        flexShrink: 0\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Database, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2115,\n                        columnNumber: 33\n                      }, this), stakeholder.sourceCount, \" sources\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2103,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2085,\n                    columnNumber: 27\n                  }, this), stakeholder.monitoringTopics && stakeholder.monitoringTopics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '0.5rem',\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: '0.25rem'\n                    },\n                    children: [stakeholder.monitoringTopics.slice(0, 3).map((topic, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: '0.125rem 0.375rem',\n                        background: '#e0e7ff',\n                        color: '#4338ca',\n                        borderRadius: '0.25rem',\n                        fontSize: '0.625rem'\n                      },\n                      children: topic\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2123,\n                      columnNumber: 33\n                    }, this)), stakeholder.monitoringTopics.length > 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: '0.125rem 0.375rem',\n                        color: '#6b7280',\n                        fontSize: '0.625rem'\n                      },\n                      children: [\"+\", stakeholder.monitoringTopics.length - 3, \" more\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2134,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2121,\n                    columnNumber: 29\n                  }, this)]\n                }, stakeholder.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2079,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2077,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem',\n                  padding: '0.75rem',\n                  background: '#f0fdf4',\n                  borderRadius: '0.5rem',\n                  border: '1px solid #bbf7d0',\n                  fontSize: '0.875rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ready to proceed?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2156,\n                  columnNumber: 23\n                }, this), \" I'll automatically configure sources for all pre-indexed stakeholders and help you set up the rest.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2148,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2073,\n              columnNumber: 19\n            }, this), message.options && message.options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.5rem',\n                marginTop: '1rem',\n                flexWrap: 'wrap'\n              },\n              children: [console.log('Rendering options for message:', message.id, message.options), message.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUserResponse(option.value),\n                style: {\n                  padding: '0.5rem 1rem',\n                  background: '#f3f4f6',\n                  border: '1px solid #e5e7eb',\n                  borderRadius: '0.5rem',\n                  cursor: 'pointer',\n                  fontSize: '0.875rem',\n                  transition: 'all 0.2s'\n                },\n                onMouseEnter: e => {\n                  e.target.style.background = '#6366f1';\n                  e.target.style.color = 'white';\n                  e.target.style.borderColor = '#6366f1';\n                },\n                onMouseLeave: e => {\n                  e.target.style.background = '#f3f4f6';\n                  e.target.style.color = '#111827';\n                  e.target.style.borderColor = '#e5e7eb';\n                },\n                children: option.label || option.text\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2166,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2163,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1755,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '0.5rem',\n            color: '#6b7280'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            size: 16,\n            className: \"animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.875rem'\n            },\n            children: \"AI is thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1746,\n        columnNumber: 9\n      }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1.5rem',\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          borderRadius: '0.75rem',\n          margin: '1rem 2rem',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              fontSize: '1.125rem',\n              fontWeight: '600',\n              marginBottom: '0.5rem'\n            },\n            children: [\"\\uD83D\\uDD0D Analyzing \", organizationData.company]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '0.875rem',\n              opacity: 0.9\n            },\n            children: \"Using AI agents to discover stakeholders and intelligence targets...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            space: '0.75rem'\n          },\n          children: [{\n            key: 'organization',\n            label: 'Analyzing Organization',\n            icon: Building2\n          }, {\n            key: 'stakeholders',\n            label: 'Finding Competitors',\n            icon: Users\n          }, {\n            key: 'sources',\n            label: 'Discovering Topics',\n            icon: Database\n          }, {\n            key: 'strategy',\n            label: 'Building Strategy',\n            icon: Brain\n          }].map(({\n            key,\n            label,\n            icon: Icon\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '0.75rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                marginBottom: '0.25rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: '0.875rem'\n                  },\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2234,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2232,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.75rem'\n                },\n                children: [analysisProgress[key], \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2236,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '6px',\n                background: 'rgba(255, 255, 255, 0.2)',\n                borderRadius: '3px',\n                overflow: 'hidden'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '100%',\n                  width: `${analysisProgress[key]}%`,\n                  background: 'white',\n                  borderRadius: '3px',\n                  transition: 'width 0.3s ease'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2244,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2238,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2230,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2208,\n        columnNumber: 11\n      }, this), currentStep !== 'analyzing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem 2rem',\n          borderTop: '1px solid #e5e7eb',\n          background: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleInputSubmit();\n          },\n          style: {\n            display: 'flex',\n            gap: '0.5rem'\n          },\n          children: [currentStep === 'strategic_goals' || currentStep === 'priority_stakeholders' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            placeholder: currentStep === 'strategic_goals' ? \"Enter your strategic goals...\" : currentStep === 'priority_stakeholders' ? \"List important stakeholders or type 'none'...\" : \"Type your response...\",\n            style: {\n              flex: 1,\n              padding: '0.75rem',\n              border: '1px solid #e5e7eb',\n              borderRadius: '0.5rem',\n              fontSize: '0.875rem',\n              resize: 'vertical',\n              minHeight: '80px',\n              fontFamily: 'inherit'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2270,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            placeholder: currentStep === 'organization_input' ? \"Enter organization name and URL...\" : currentStep === 'company_info' ? \"Enter company name and URL...\" : currentStep === 'confirm_stakeholders' ? \"Choose an option above...\" : \"Type your response...\",\n            style: {\n              flex: 1,\n              padding: '0.75rem',\n              border: '1px solid #e5e7eb',\n              borderRadius: '0.5rem',\n              fontSize: '0.875rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !userInput.trim(),\n            style: {\n              padding: '0.75rem 1.5rem',\n              background: userInput.trim() ? '#6366f1' : '#e5e7eb',\n              color: 'white',\n              border: 'none',\n              borderRadius: '0.5rem',\n              cursor: userInput.trim() ? 'pointer' : 'not-allowed',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              fontSize: '0.875rem',\n              fontWeight: '500'\n            },\n            children: [\"Send\", /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2260,\n        columnNumber: 11\n      }, this), currentStep === 'review_stakeholders' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '1rem 2rem',\n          borderTop: '1px solid #e5e7eb',\n          background: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: finalizeStrategy,\n          style: {\n            width: '100%',\n            padding: '0.75rem',\n            background: '#6366f1',\n            color: 'white',\n            border: 'none',\n            borderRadius: '0.5rem',\n            cursor: 'pointer',\n            fontSize: '0.875rem',\n            fontWeight: '600',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2358,\n            columnNumber: 15\n          }, this), \"Confirm Stakeholders & Build Strategy\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2335,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1737,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        background: 'white',\n        borderLeft: '1px solid #e5e7eb',\n        padding: '1.5rem',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 1rem 0',\n          fontSize: '1.125rem',\n          fontWeight: '600',\n          color: '#111827'\n        },\n        children: \"Enhanced Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem',\n            background: '#f0f9ff',\n            borderRadius: '0.5rem',\n            border: '1px solid #bfdbfe'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Database, {\n              size: 16,\n              style: {\n                color: '#3b82f6'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600',\n                color: '#1e40af'\n              },\n              children: \"Pre-Indexed Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2386,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              fontSize: '0.75rem',\n              color: '#1e3a8a'\n            },\n            children: \"Instant access to verified sources for major stakeholders like BlackRock, SEC, and leading media outlets.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem',\n            background: '#f0fdf4',\n            borderRadius: '0.5rem',\n            border: '1px solid #bbf7d0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Brain, {\n              size: 16,\n              style: {\n                color: '#10b981'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600',\n                color: '#166534'\n              },\n              children: \"Deep Research\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2401,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              fontSize: '0.75rem',\n              color: '#166534'\n            },\n            children: \"AI-powered analysis of your organization to identify key stakeholders and their priorities.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '1rem',\n            background: '#fef3c7',\n            borderRadius: '0.5rem',\n            border: '1px solid #fde68a'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              marginBottom: '0.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Zap, {\n              size: 16,\n              style: {\n                color: '#f59e0b'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600',\n                color: '#92400e'\n              },\n              children: \"Auto Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              fontSize: '0.75rem',\n              color: '#92400e'\n            },\n            children: \"Sources are automatically configured with RSS feeds, APIs, and social media accounts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2377,\n        columnNumber: 9\n      }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.75rem 0',\n            fontSize: '0.875rem',\n            fontWeight: '600',\n            color: '#6b7280'\n          },\n          children: \"Research Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              fontSize: '0.75rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sources Analyzed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600'\n              },\n              children: \"47\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              fontSize: '0.75rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Stakeholders Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600'\n              },\n              children: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              fontSize: '0.75rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pre-Indexed Matches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: '600'\n              },\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1731,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedAIStrategyAdvisor, \"b3oFH3hvMID3y+7fQ8WH36tn1MQ=\");\n_c = EnhancedAIStrategyAdvisor;\nexport default EnhancedAIStrategyAdvisor;\nvar _c;\n$RefreshReg$(_c, \"EnhancedAIStrategyAdvisor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","API_BASE_URL","Sparkles","Bot","Building2","Users","Target","TrendingUp","Shield","Globe","CheckCircle","Brain","Zap","Database","Search","Loader","ChevronRight","AlertCircle","Info","findPreIndexedStakeholder","getMonitoringTopics","stakeholderIntelligenceService","jsxDEV","_jsxDEV","Fragment","_Fragment","EnhancedAIStrategyAdvisor","onStrategyComplete","mode","_s","messages","setMessages","isTyping","setIsTyping","userInput","setUserInput","currentStep","setCurrentStep","organizationData","setOrganizationData","company","url","additionalUrls","strategicGoals","priorityStakeholders","industry","description","stakeholders","setStakeholders","isAnalyzing","setIsAnalyzing","editableCompetitors","setEditableCompetitors","editableTopics","setEditableTopics","editingIndex","setEditingIndex","editingType","setEditingType","editValue","setEditValue","analysisProgress","setAnalysisProgress","organization","sources","strategy","initRef","current","addMessage","type","content","showForm","message","options","console","log","prev","id","Date","now","handleUserResponse","value","finalizeStrategy","handleInputSubmit","trim","userMessage","handleOrganizationInput","handleUnifiedInput","handleTopicInput","lines","split","forEach","line","toLowerCase","includes","_line$split$","slice","join","_line$split$2","find","l","filter","performCompetitorAnalysis","_line$split$3","parts","part","performAutomatedAnalysis","setTimeout","showTextarea","performDeepOrganizationAnalysis","newCompetitors","c","length","updatedCompetitors","editableTargets","competitors","topics","label","newTopics","t","updatedTopics","performAnalysis","orgData","performTopicAnalysis","input","inputLower","targets","competitorKeywords","topicKeywords","map","hasCompanyNames","some","words","word","toUpperCase","isCompetitorFocused","kw","isTopicFocused","companies","cleaned","replace","firstChar","push","performUnifiedAnalysis","entities","data","typeLabel","showProgress","phases","key","duration","phase","animateProgress","intelligenceTargets","entity","looksLikeCompany","name","priority","influence","keywords","reason","goals","getTopicKeywords","stakeholderResults","showSelection","text","companyIndicators","textLower","ind","topicWords","topicData","mainTopic","context","relatedTopics","_line$split$4","_line$split$5","topicTargets","generateTopicTargets","subtopics","generateSubtopics","subtopic","idx","relevance","aspects","influencers","generateTopicInfluencers","influencer","authority","expertise","topic","topicLower","generateCompetitorSuggestions","competitorStakeholders","comp","trackingPriority","threatLevel","reasons","fears","response","researchCompetitors","error","companyLower","p","index","trimmed","getCompetitorsForCompany","getTopicsForCompany","token","localStorage","getItem","headers","competitorsResponse","topicsResponse","Promise","all","fetch","method","body","JSON","stringify","competitorsData","json","topicsData","success","competitor","competitorTargets","competitorName","topicName","discoveredTargets","suggestedStakeholders","orgResult","createOrUpdateOrganization","determineIndustryFromUrl","organizationId","generateStakeholderSuggestions","generateSmartStakeholderSuggestions","resolve","progress","interval","setInterval","clearInterval","domain","_orgData$url","_orgData$strategicGoa","_orgData$priorityStak","suggestions","companyName","userStakeholders","isAgency","isB2B","targetingTech","preIndexed","sourceCount","monitoringTopics","userMentions","s","mention","unshift","isUserPriority","finalStakeholders","stakeholdersWithSources","discoverStakeholderSources","saveStakeholderConfiguration","enhancedStrategy","userPriorityStakeholders","stakeholderGroups","interest","sentiment","currentSentiment","targetSentiment","engagementLevel","trend","concerns","overview","enhancedFeatures","preIndexedCount","totalSources","reduce","acc","researchAgentsEnabled","urlAnalysisEnabled","strategicAlignment","backendIntegration","style","display","height","background","children","flex","flexDirection","maxWidth","margin","width","overflowY","padding","gap","justifyContent","borderRadius","color","boxShadow","alignItems","marginBottom","size","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","whiteSpace","marginTop","border","minWidth","onChange","e","target","onKeyPress","preventDefault","updated","onBlur","outline","autoFocus","onClick","_","i","cursor","textDecoration","newName","prompt","transition","onMouseEnter","currentTarget","borderStyle","onMouseLeave","Object","entries","textTransform","overflow","stakeholder","flexShrink","flexWrap","option","borderColor","className","opacity","space","icon","Icon","borderTop","onSubmit","placeholder","resize","minHeight","fontFamily","disabled","borderLeft","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/EnhancedAIStrategyAdvisor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport API_BASE_URL from '../../config/api';\nimport { \n  Sparkles, Bot, Building2, Users, Target, \n  TrendingUp, Shield, Globe, CheckCircle, \n  Brain, Zap, Database, Search, Loader,\n  ChevronRight, AlertCircle, Info\n} from 'lucide-react';\nimport { findPreIndexedStakeholder, getMonitoringTopics } from './EnhancedSourceDatabase';\nimport stakeholderIntelligenceService from '../../services/stakeholderIntelligenceService';\n\nconst EnhancedAIStrategyAdvisor = ({ onStrategyComplete, mode = 'stakeholders' }) => {\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [userInput, setUserInput] = useState('');\n  const [currentStep, setCurrentStep] = useState('initial');\n  const [organizationData, setOrganizationData] = useState({\n    company: '',\n    url: '',\n    additionalUrls: [],\n    strategicGoals: '',\n    priorityStakeholders: '',\n    industry: '',\n    description: ''\n  });\n  const [stakeholders, setStakeholders] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [editableCompetitors, setEditableCompetitors] = useState([]);\n  const [editableTopics, setEditableTopics] = useState([]);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [editingType, setEditingType] = useState(null);\n  const [editValue, setEditValue] = useState('');\n  const [analysisProgress, setAnalysisProgress] = useState({\n    organization: 0,\n    stakeholders: 0,\n    sources: 0,\n    strategy: 0\n  });\n  const initRef = useRef(false);\n\n  useEffect(() => {\n    // Use ref to ensure this only runs once, even in StrictMode\n    if (initRef.current) return;\n    initRef.current = true;\n    \n    // Initial greeting - focused on competitors and topics\n    if (mode === 'unified') {\n      setCurrentStep('organization_input');\n      addMessage({\n        type: 'ai',\n        content: \"Welcome to Intelligence Monitoring\\n\\nI'll help you discover and track competitors and topics relevant to your organization.\\n\\nEnter your company name:\",\n        showForm: true\n      });\n    } else if (mode === 'competitors') {\n      setCurrentStep('company_info');\n      addMessage({\n        type: 'ai',\n        content: \"👋 Hello! I'm your Competitor Intelligence Advisor. I'll help you identify and track your top competitors.\\n\\nLet's start by researching your organization. Please provide:\\n• Company name\\n• Website URL (optional but recommended)\\n• Brief description of what your company does\",\n        showForm: true\n      });\n    } else {\n      setCurrentStep('organization_input');\n      addMessage({\n        type: 'ai',\n        content: \"Hello! I'm your AI Strategy Advisor.\\n\\nTo build your intelligence monitoring strategy, please provide:\\n\\n• **Organization Name**: Your company or client name\\n• **Website URL**: https://example.com\\n\\nI'll analyze your organization and automatically identify relevant stakeholders, competitors, and topics to monitor.\",\n        showForm: true\n      });\n    }\n  }, []);\n\n  const addMessage = (message) => {\n    if (message.options) {\n      console.log('Adding message with options:', message.options);\n    }\n    setMessages(prev => [...prev, { ...message, id: Date.now() }]);\n  };\n\n  const handleUserResponse = async (value) => {\n    // Handle option selection after analysis\n    if (currentStep === 'confirm_targets' || currentStep === 'confirm_stakeholders') {\n      if (value === 'proceed') {\n        // Proceed with the discovered configuration\n        finalizeStrategy();\n      } else if (value === 'add_competitors') {\n        // Allow adding more competitors\n        addMessage({\n          type: 'ai',\n          content: \"Please list additional competitors you'd like to track (one per line):\",\n          showForm: true\n        });\n        setCurrentStep('add_competitors');\n      } else if (value === 'customize_topics') {\n        // Allow topic customization\n        addMessage({\n          type: 'ai',\n          content: \"Please list specific topics or trends you want to monitor (one per line):\",\n          showForm: true\n        });\n        setCurrentStep('customize_topics');\n      } else if (value === 'customize') {\n        // Legacy: Allow customization of stakeholders\n        addMessage({\n          type: 'ai',\n          content: \"You can customize the targets. Please tell me what to add or modify:\",\n          showForm: true\n        });\n        setCurrentStep('customize_stakeholders');\n      } else if (value === 'adjust') {\n        // Legacy: Allow topic adjustment\n        addMessage({\n          type: 'ai',\n          content: \"You can adjust the monitoring topics. Please specify changes:\",\n          showForm: true\n        });\n        setCurrentStep('adjust_topics');\n      }\n    }\n  };\n\n  const handleInputSubmit = async () => {\n    if (!userInput.trim()) return;\n\n    const userMessage = userInput;\n    setUserInput('');\n    addMessage({ type: 'user', content: userMessage });\n\n    console.log('Current step:', currentStep);\n\n    if (currentStep === 'organization_input') {\n      // Parse organization name and URL\n      handleOrganizationInput(userMessage);\n    } else if (currentStep === 'unified_input') {\n      // Parse what the user wants to monitor\n      handleUnifiedInput(userMessage);\n    } else if (currentStep === 'topic_input') {\n      // Handle topic monitoring input\n      handleTopicInput(userMessage);\n    } else if (currentStep === 'company_info_for_competitors') {\n      // Parse company info and then discover competitors\n      const lines = userMessage.split('\\n');\n      let company = '';\n      let url = '';\n      let description = '';\n      \n      lines.forEach(line => {\n        if (line.toLowerCase().includes('company:') || line.toLowerCase().includes('name:')) {\n          company = line.split(':')[1]?.trim() || '';\n        } else if (line.toLowerCase().includes('url:') || line.includes('http')) {\n          url = line.includes('http') ? line.trim() : line.split(':').slice(1).join(':').trim();\n        } else if (line.toLowerCase().includes('description:') || line.toLowerCase().includes('what')) {\n          description = line.split(':')[1]?.trim() || '';\n        }\n      });\n      \n      // If no structured format, try to parse intelligently\n      if (!company) {\n        company = lines[0].trim();\n        url = lines.find(l => l.includes('http') || l.includes('www.')) || '';\n        description = lines.filter(l => l !== company && l !== url).join(' ');\n      }\n      \n      // Now discover competitors\n      performCompetitorAnalysis({ company, url, description });\n    } else if (currentStep === 'company_info') {\n      // Parse company name and URL from input\n      const lines = userMessage.split('\\n');\n      let company = '';\n      let url = '';\n      \n      lines.forEach(line => {\n        if (line.toLowerCase().includes('company:')) {\n          company = line.split(':')[1]?.trim() || '';\n        } else if (line.toLowerCase().includes('url:') || line.includes('http')) {\n          url = line.includes('http') ? line.trim() : line.split(':').slice(1).join(':').trim();\n        }\n      });\n\n      // If no structured format, assume first line is company, second is URL\n      if (!company && !url) {\n        const parts = userMessage.split(/\\s+/);\n        company = userMessage;\n        url = parts.find(part => part.includes('http')) || '';\n      }\n\n      setOrganizationData(prev => ({ ...prev, company, url }));\n      \n      // Start analyzing immediately\n      performAutomatedAnalysis({ company, url });\n      \n    } else if (currentStep === 'strategic_goals') {\n      setOrganizationData(prev => ({ ...prev, strategicGoals: userMessage }));\n      setCurrentStep('priority_stakeholders');\n      \n      setIsTyping(true);\n      setTimeout(() => {\n        addMessage({\n          type: 'ai',\n          content: `Excellent strategic goals! I'll factor these into my analysis.\\n\\nLastly, are there any specific stakeholders you already know are important? This could include:\\n• Major investors (e.g., BlackRock, Vanguard)\\n• Key regulators (e.g., SEC, FTC)\\n• Important customers or partners\\n• Media outlets that cover you\\n\\nYou can list a few, or just type \"none\" to let me discover them all.`,\n          showTextarea: true\n        });\n        setIsTyping(false);\n      }, 1000);\n      \n    } else if (currentStep === 'priority_stakeholders') {\n      setOrganizationData(prev => ({ ...prev, priorityStakeholders: userMessage }));\n      // Now perform the comprehensive analysis with all data\n      performDeepOrganizationAnalysis(organizationData);\n      \n    } else if (currentStep === 'confirm_stakeholders') {\n      finalizeStrategy();\n    } else if (currentStep === 'add_competitors') {\n      // Add custom competitors\n      const newCompetitors = userMessage.split('\\n').filter(c => c.trim());\n      if (newCompetitors.length > 0) {\n        const updatedCompetitors = [...editableCompetitors, ...newCompetitors];\n        setEditableCompetitors(updatedCompetitors);\n        \n        addMessage({\n          type: 'ai',\n          content: `Added ${newCompetitors.length} competitor${newCompetitors.length > 1 ? 's' : ''}. Current list:`,\n          editableTargets: {\n            competitors: updatedCompetitors,\n            topics: editableTopics\n          },\n          options: [\n            { label: '✅ Start Monitoring', value: 'proceed' },\n            { label: '📝 Add Topics', value: 'customize_topics' }\n          ]\n        });\n      }\n      setCurrentStep('confirm_targets');\n    } else if (currentStep === 'customize_topics') {\n      // Add custom topics\n      const newTopics = userMessage.split('\\n').filter(t => t.trim());\n      if (newTopics.length > 0) {\n        const updatedTopics = [...editableTopics, ...newTopics];\n        setEditableTopics(updatedTopics);\n        \n        addMessage({\n          type: 'ai',\n          content: `Added ${newTopics.length} topic${newTopics.length > 1 ? 's' : ''}. Current list:`,\n          editableTargets: {\n            competitors: editableCompetitors,\n            topics: updatedTopics\n          },\n          options: [\n            { label: '✅ Start Monitoring', value: 'proceed' }\n          ]\n        });\n      }\n      setCurrentStep('confirm_targets');\n    } else if (currentStep === 'customize_stakeholders' || currentStep === 'adjust_topics') {\n      // Handle legacy customization responses\n      addMessage({\n        type: 'ai',\n        content: \"I've noted your customizations. The strategy will be updated accordingly.\"\n      });\n      finalizeStrategy();\n    } else {\n      console.log('Unhandled step:', currentStep);\n      // For any other step, try organization input\n      if (currentStep === 'organization_input' || currentStep === 'company_info') {\n        handleOrganizationInput(userMessage);\n      }\n    }\n  };\n\n  const performAnalysis = async (orgData) => {\n    if (mode === 'topics') {\n      performTopicAnalysis(orgData);\n    } else if (mode === 'competitors') {\n      performCompetitorAnalysis(orgData);\n    } else {\n      performDeepOrganizationAnalysis(orgData);\n    }\n  };\n\n  const handleUnifiedInput = (input) => {\n    const inputLower = input.toLowerCase();\n    const targets = [];\n    \n    // Detect if user is asking about competitors\n    const competitorKeywords = ['competitor', 'compete', 'rival', 'vs', 'versus', 'track my competitors'];\n    const topicKeywords = ['topic', 'trend', 'monitor', 'track', 'regulation', 'narrative', 'issue'];\n    \n    // Parse the input to identify entities and topics\n    const lines = input.split(/[,\\n;]/).map(l => l.trim()).filter(l => l);\n    \n    // Check if input contains company names (typically capitalized or known patterns)\n    const hasCompanyNames = lines.some(line => {\n      const words = line.split(' ');\n      return words.some(word => \n        word.length > 2 && \n        (word[0] === word[0].toUpperCase() || \n         word.toLowerCase().includes('corp') ||\n         word.toLowerCase().includes('inc') ||\n         word.toLowerCase().includes('llc'))\n      );\n    });\n    \n    // Determine primary intent\n    const isCompetitorFocused = competitorKeywords.some(kw => inputLower.includes(kw)) || hasCompanyNames;\n    const isTopicFocused = topicKeywords.some(kw => inputLower.includes(kw)) && !isCompetitorFocused;\n    \n    if (isCompetitorFocused) {\n      // Extract company names\n      const companies = [];\n      lines.forEach(line => {\n        // Remove common prefixes\n        const cleaned = line.replace(/^(track|monitor|watch|follow|my competitor[s]?:?|competitor[s]?:?)/gi, '').trim();\n        if (cleaned && cleaned.length > 1) {\n          // Check if it looks like a company name\n          const firstChar = cleaned[0];\n          if (firstChar === firstChar.toUpperCase() || cleaned.includes('.com') || cleaned.includes('Inc')) {\n            companies.push(cleaned);\n          }\n        }\n      });\n      \n      if (companies.length > 0) {\n        // User provided specific competitors\n        performUnifiedAnalysis({\n          type: 'competitors',\n          entities: companies,\n          userInput: input\n        });\n      } else {\n        // Ask for company info to discover competitors\n        setCurrentStep('company_info_for_competitors');\n        addMessage({\n          type: 'ai',\n          content: \"I see you want to track competitors. To identify the right ones, please tell me:\\n• Your company name\\n• Your website (optional)\\n• What your company does\",\n          showForm: true\n        });\n      }\n    } else if (isTopicFocused || !hasCompanyNames) {\n      // Extract topics\n      const topics = lines.map(line => {\n        return line.replace(/^(track|monitor|watch|follow|topic[s]?:?|trend[s]?:?)/gi, '').trim();\n      }).filter(t => t && t.length > 2);\n      \n      if (topics.length > 0) {\n        performUnifiedAnalysis({\n          type: 'topics',\n          entities: topics,\n          userInput: input\n        });\n      }\n    } else {\n      // Mixed or unclear - analyze everything\n      performUnifiedAnalysis({\n        type: 'mixed',\n        entities: lines,\n        userInput: input\n      });\n    }\n  };\n\n  const performUnifiedAnalysis = async (data) => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    \n    const typeLabel = data.type === 'competitors' ? 'competitors' : \n                     data.type === 'topics' ? 'topics' : \n                     'intelligence targets';\n    \n    addMessage({\n      type: 'ai',\n      content: `🔍 Analyzing your ${typeLabel}...\\n\\n` +\n        `**Targets identified:** ${data.entities.join(', ')}\\n\\n` +\n        `I'm now:\\n` +\n        `• Researching each target\\n` +\n        `• Finding the best monitoring sources\\n` +\n        `• Setting up tracking parameters\\n` +\n        `• Building your intelligence dashboard`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [\n      { key: 'organization', label: `Researching ${data.entities.length} targets`, duration: 2000 },\n      { key: 'stakeholders', label: 'Analyzing intelligence requirements', duration: 2000 },\n      { key: 'sources', label: 'Configuring monitoring sources', duration: 2000 },\n      { key: 'strategy', label: 'Building monitoring strategy', duration: 1500 }\n    ];\n\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate intelligence targets\n    const intelligenceTargets = [];\n    \n    for (const entity of data.entities) {\n      if (data.type === 'competitors' || (data.type === 'mixed' && looksLikeCompany(entity))) {\n        // Treat as competitor\n        intelligenceTargets.push({\n          id: `comp-${intelligenceTargets.length}`,\n          name: entity,\n          type: 'Competitor',\n          priority: 'high',\n          influence: 85,\n          keywords: [entity, `${entity} news`, `${entity} announcement`],\n          topics: ['product launches', 'funding', 'partnerships', 'leadership changes'],\n          reason: 'Competitive intelligence target',\n          goals: `Track ${entity}'s strategic moves and market positioning`,\n          description: `Monitor all activities and announcements from ${entity}`\n        });\n      } else {\n        // Treat as topic\n        intelligenceTargets.push({\n          id: `topic-${intelligenceTargets.length}`,\n          name: entity,\n          type: 'Topic',\n          priority: 'high',\n          influence: 80,\n          keywords: [entity, ...getTopicKeywords(entity)],\n          topics: ['breaking news', 'analysis', 'expert opinions', 'research'],\n          reason: 'Strategic monitoring topic',\n          goals: `Track developments related to ${entity}`,\n          description: `Monitor trends and discussions about ${entity}`\n        });\n      }\n    }\n    \n    setStakeholders(intelligenceTargets);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Analysis Complete!**\\n\\nI've configured monitoring for ${intelligenceTargets.length} intelligence targets. Each target has been set up with appropriate sources and tracking parameters.\\n\\n**Review and confirm your targets:**`,\n      stakeholderResults: intelligenceTargets,\n      showSelection: true\n    });\n  };\n\n  const looksLikeCompany = (text) => {\n    const companyIndicators = ['inc', 'corp', 'llc', 'ltd', 'company', '.com'];\n    const textLower = text.toLowerCase();\n    \n    // Check for company indicators\n    if (companyIndicators.some(ind => textLower.includes(ind))) return true;\n    \n    // Check if first letter is capitalized (proper noun)\n    if (text[0] === text[0].toUpperCase() && text.length > 2) {\n      // Check if it's likely a company name vs a topic\n      const topicWords = ['regulation', 'trend', 'technology', 'market', 'industry', 'disruption'];\n      if (!topicWords.some(word => textLower.includes(word))) {\n        return true;\n      }\n    }\n    \n    return false;\n  };\n\n  const handleTopicInput = (input) => {\n    // Parse topic information from input\n    const lines = input.split('\\n');\n    const topicData = {\n      mainTopic: lines[0] || input,\n      industry: '',\n      context: '',\n      relatedTopics: []\n    };\n    \n    // Extract additional context\n    lines.forEach(line => {\n      if (line.toLowerCase().includes('industry:')) {\n        topicData.industry = line.split(':')[1]?.trim() || '';\n      } else if (line.toLowerCase().includes('context:') || line.toLowerCase().includes('why:')) {\n        topicData.context = line.split(':')[1]?.trim() || '';\n      }\n    });\n    \n    // Perform topic analysis\n    performTopicAnalysis(topicData);\n  };\n\n  const performTopicAnalysis = async (topicData) => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    \n    addMessage({\n      type: 'ai',\n      content: `🔬 Analyzing \"${topicData.mainTopic}\" and related narratives...\\n\\n` +\n        `**Research Focus:**\\n` +\n        `• Identifying key influencers and thought leaders\\n` +\n        `• Mapping narrative evolution and trends\\n` +\n        `• Finding authoritative sources\\n` +\n        `• Discovering related topics and subtopics\\n\\n` +\n        `This will help me create a comprehensive monitoring strategy...`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [\n      { key: 'organization', label: `Researching \"${topicData.mainTopic}\"`, duration: 2000 },\n      { key: 'stakeholders', label: 'Identifying key voices and influencers', duration: 2500 },\n      { key: 'sources', label: 'Finding authoritative sources', duration: 2000 },\n      { key: 'strategy', label: 'Building monitoring strategy', duration: 1500 }\n    ];\n\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate topic-based intelligence targets\n    const topicTargets = generateTopicTargets(topicData);\n    \n    setStakeholders(topicTargets);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Topic Analysis Complete!**\\n\\nI've identified key aspects of \"${topicData.mainTopic}\" to monitor. These include subtopics, key sources, and influential voices.\\n\\n**Select the targets you want to track:**`,\n      stakeholderResults: topicTargets,\n      showSelection: true\n    });\n  };\n\n  const generateTopicTargets = (topicData) => {\n    const targets = [];\n    const mainTopic = topicData.mainTopic;\n    \n    // Main topic as primary target\n    targets.push({\n      id: 'topic-main',\n      name: mainTopic,\n      type: 'Primary Topic',\n      priority: 'high',\n      influence: 90,\n      keywords: [mainTopic, ...getTopicKeywords(mainTopic)],\n      topics: ['breaking news', 'industry analysis', 'expert opinions', 'research reports'],\n      reason: 'Core topic for monitoring',\n      goals: `Track all developments related to ${mainTopic}`,\n      description: topicData.context || `Primary monitoring focus`\n    });\n    \n    // Generate related subtopics\n    const subtopics = generateSubtopics(mainTopic, topicData.industry);\n    subtopics.forEach((subtopic, idx) => {\n      targets.push({\n        id: `topic-sub-${idx}`,\n        name: subtopic.name,\n        type: 'Subtopic',\n        priority: subtopic.priority || 'medium',\n        influence: subtopic.relevance || 70,\n        keywords: subtopic.keywords,\n        topics: subtopic.aspects,\n        reason: subtopic.reason,\n        goals: `Monitor ${subtopic.name} developments`,\n        description: subtopic.description\n      });\n    });\n    \n    // Add key influencers/sources as targets\n    const influencers = generateTopicInfluencers(mainTopic, topicData.industry);\n    influencers.forEach((influencer, idx) => {\n      targets.push({\n        id: `influencer-${idx}`,\n        name: influencer.name,\n        type: 'Key Source',\n        priority: 'medium',\n        influence: influencer.authority || 60,\n        keywords: [influencer.name, mainTopic],\n        topics: influencer.expertise,\n        reason: influencer.reason,\n        goals: `Track insights from ${influencer.name}`,\n        description: influencer.description\n      });\n    });\n    \n    return targets;\n  };\n\n  const getTopicKeywords = (topic) => {\n    // Generate related keywords for a topic\n    const topicLower = topic.toLowerCase();\n    \n    if (topicLower.includes('ai') || topicLower.includes('artificial intelligence')) {\n      return ['machine learning', 'deep learning', 'neural networks', 'LLM', 'generative AI'];\n    } else if (topicLower.includes('climate') || topicLower.includes('sustainability')) {\n      return ['ESG', 'carbon neutral', 'renewable energy', 'green technology', 'net zero'];\n    } else if (topicLower.includes('crypto') || topicLower.includes('blockchain')) {\n      return ['bitcoin', 'ethereum', 'DeFi', 'web3', 'NFT', 'digital assets'];\n    }\n    \n    // Default related terms\n    return ['trends', 'analysis', 'industry', 'innovation', 'research'];\n  };\n\n  const generateSubtopics = (mainTopic, industry) => {\n    const topicLower = mainTopic.toLowerCase();\n    \n    if (topicLower.includes('ai regulation')) {\n      return [\n        {\n          name: 'EU AI Act',\n          keywords: ['EU AI Act', 'European regulation', 'AI governance'],\n          aspects: ['policy updates', 'compliance requirements', 'implementation timeline'],\n          priority: 'high',\n          relevance: 85,\n          reason: 'Major regulatory framework',\n          description: 'European Union AI regulation and compliance'\n        },\n        {\n          name: 'AI Ethics & Bias',\n          keywords: ['AI ethics', 'algorithmic bias', 'fairness', 'transparency'],\n          aspects: ['ethical guidelines', 'bias detection', 'fairness metrics'],\n          priority: 'high',\n          relevance: 80,\n          reason: 'Critical compliance area',\n          description: 'Ethical considerations and bias in AI systems'\n        },\n        {\n          name: 'Industry Standards',\n          keywords: ['ISO AI standards', 'IEEE standards', 'best practices'],\n          aspects: ['standard updates', 'certification', 'compliance frameworks'],\n          priority: 'medium',\n          relevance: 70,\n          reason: 'Industry standardization',\n          description: 'Technical standards and certifications'\n        }\n      ];\n    }\n    \n    // Default subtopics\n    return [\n      {\n        name: `${mainTopic} Trends`,\n        keywords: [`${mainTopic} trends`, 'emerging', 'future'],\n        aspects: ['trend analysis', 'predictions', 'market shifts'],\n        priority: 'high',\n        relevance: 75,\n        reason: 'Track evolving trends',\n        description: 'Emerging trends and future directions'\n      },\n      {\n        name: `${mainTopic} Technology`,\n        keywords: [`${mainTopic} tech`, 'innovation', 'solutions'],\n        aspects: ['new technology', 'innovations', 'breakthroughs'],\n        priority: 'medium',\n        relevance: 70,\n        reason: 'Technology developments',\n        description: 'Technical innovations and solutions'\n      }\n    ];\n  };\n\n  const generateTopicInfluencers = (topic, industry) => {\n    const topicLower = topic.toLowerCase();\n    \n    if (topicLower.includes('ai')) {\n      return [\n        {\n          name: 'MIT Technology Review',\n          authority: 90,\n          expertise: ['AI research', 'technology trends', 'innovation'],\n          reason: 'Leading technology publication',\n          description: 'Authoritative source on AI developments'\n        },\n        {\n          name: 'Stanford HAI',\n          authority: 85,\n          expertise: ['AI research', 'policy', 'human-centered AI'],\n          reason: 'Academic thought leadership',\n          description: 'Stanford Human-Centered AI Institute'\n        }\n      ];\n    }\n    \n    // Default influencers\n    return [\n      {\n        name: 'Industry Reports',\n        authority: 75,\n        expertise: ['market analysis', 'industry trends', 'forecasts'],\n        reason: 'Market intelligence',\n        description: 'Key industry research firms and analysts'\n      },\n      {\n        name: 'Thought Leaders',\n        authority: 70,\n        expertise: ['expert opinions', 'insights', 'commentary'],\n        reason: 'Expert perspectives',\n        description: 'Industry experts and thought leaders'\n      }\n    ];\n  };\n\n  const performCompetitorAnalysis = async (orgData) => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    \n    addMessage({\n      type: 'ai',\n      content: `🔍 Excellent! I'm now researching ${orgData.company} to identify your key competitors.\\n\\n` +\n        `**Analyzing:**\\n` +\n        `• ${orgData.url ? 'Website content and positioning' : 'Industry positioning'}\\n` +\n        `• Market landscape and key players\\n` +\n        `• Direct and indirect competitors\\n` +\n        `• Competitive threats and opportunities\\n\\n` +\n        `This comprehensive analysis will help me identify your top 5-10 competitors...`,\n      showProgress: true\n    });\n\n    // Research phases\n    const phases = [\n      { key: 'organization', label: `Analyzing ${orgData.url || orgData.company}`, duration: 2000 },\n      { key: 'stakeholders', label: 'Researching industry landscape', duration: 2500 },\n      { key: 'sources', label: 'Identifying key competitors', duration: 3000 },\n      { key: 'strategy', label: 'Configuring tracking sources', duration: 1500 }\n    ];\n\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate competitor suggestions\n    const competitors = await generateCompetitorSuggestions(orgData);\n    \n    // Convert competitors to stakeholder format\n    const competitorStakeholders = competitors.map((comp, idx) => ({\n      id: `competitor-${idx}`,\n      name: comp.name,\n      type: 'Competitor',\n      priority: comp.trackingPriority || 'high',\n      influence: comp.threatLevel || 75,\n      keywords: [comp.name, ...((comp.keywords || []))],\n      topics: comp.reasons || ['product launches', 'funding', 'partnerships'],\n      reason: comp.description || `${comp.type || 'Direct competitor'} in your market`,\n      goals: `Track ${comp.name}'s strategic moves and market positioning`,\n      fears: `Missing competitive intelligence on ${comp.name}`,\n      description: comp.description,\n      threatLevel: comp.threatLevel,\n      trackingPriority: comp.trackingPriority\n    }));\n    \n    setStakeholders(competitorStakeholders);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `✅ **Research Complete!**\\n\\nBased on my analysis of ${orgData.company}, I've identified ${competitorStakeholders.length} key competitors in your market. These companies represent your main competitive threats and opportunities.\\n\\n**Select the competitors you want to track** (or confirm all):`,\n      stakeholderResults: competitorStakeholders,\n      showSelection: true\n    });\n  };\n\n  const generateCompetitorSuggestions = async (orgData) => {\n    // Try to use real research service first\n    try {\n      const response = await stakeholderIntelligenceService.researchCompetitors(orgData);\n      if (response && response.competitors) {\n        return response.competitors;\n      }\n    } catch (error) {\n      console.log('Using local competitor generation');\n    }\n\n    // Local intelligent competitor generation based on company\n    const companyLower = orgData.company.toLowerCase();\n    \n    // Smart competitor mapping\n    if (companyLower.includes('target')) {\n      return [\n        { \n          name: 'Walmart', \n          type: 'Direct Competitor',\n          description: 'Largest retail competitor with strong omnichannel presence',\n          threatLevel: 95,\n          trackingPriority: 'high',\n          reasons: ['Market leader', 'Price competition', 'Geographic overlap']\n        },\n        { \n          name: 'Amazon', \n          type: 'Direct Competitor',\n          description: 'E-commerce giant expanding into physical retail',\n          threatLevel: 90,\n          trackingPriority: 'high',\n          reasons: ['Digital dominance', 'Same-day delivery', 'Prime ecosystem']\n        },\n        { \n          name: 'Costco', \n          type: 'Indirect Competitor',\n          description: 'Membership-based wholesale retailer',\n          threatLevel: 70,\n          trackingPriority: 'medium',\n          reasons: ['Different model', 'Customer overlap', 'Bulk buying trend']\n        }\n      ];\n    }\n\n    // Default technology competitors\n    return [\n      { \n        name: 'Primary Competitor', \n        type: 'Direct Competitor',\n        description: 'Main rival in your core market',\n        threatLevel: 85,\n        trackingPriority: 'high',\n        reasons: ['Market share', 'Product overlap', 'Customer base']\n      },\n      { \n        name: 'Secondary Competitor', \n        type: 'Direct Competitor',\n        description: 'Growing threat in key segments',\n        threatLevel: 75,\n        trackingPriority: 'medium',\n        reasons: ['Fast growth', 'Innovation', 'Pricing pressure']\n      }\n    ];\n  };\n\n  const handleOrganizationInput = async (userMessage) => {\n    console.log('handleOrganizationInput called with:', userMessage);\n    \n    // Parse organization name and URL - handle various input formats\n    const lines = userMessage.split('\\n').filter(l => l.trim());\n    let company = '';\n    let url = '';\n    \n    // Smart parsing - handle both single line and multi-line input\n    if (lines.length === 1) {\n      // Single line - could be just company name or \"CompanyName https://url.com\"\n      const parts = lines[0].split(/\\s+/);\n      if (parts.some(p => p.includes('http') || p.includes('www.'))) {\n        // Has URL in the line\n        url = parts.find(p => p.includes('http') || p.includes('www.')) || '';\n        company = parts.filter(p => !p.includes('http') && !p.includes('www.')).join(' ').trim();\n      } else {\n        // Just company name\n        company = lines[0].trim();\n      }\n    } else {\n      // Multi-line input\n      lines.forEach((line, index) => {\n        const trimmed = line.trim();\n        if (trimmed.includes('http://') || trimmed.includes('https://') || trimmed.includes('www.')) {\n          url = trimmed.includes('http') ? trimmed : `https://${trimmed}`;\n        } else if (!company && trimmed) {\n          company = trimmed;\n        }\n      });\n    }\n    \n    console.log('Parsed company:', company, 'url:', url);\n    \n    if (!company || company.length === 0) {\n      addMessage({\n        type: 'ai',\n        content: \"I need at least your organization name to proceed. Please provide:\\n\\n• Organization Name\\n• Website URL (optional but recommended)\",\n        showForm: true\n      });\n      return;\n    }\n    \n    setOrganizationData(prev => ({ ...prev, company, url }));\n    \n    // Start automated analysis\n    addMessage({\n      type: 'ai',\n      content: `Perfect! Analyzing **${company}**${url ? ` (${url})` : ''}...\\n\\nI'm using AI agents to:\\n• 🏢 Identify your main competitors\\n• 📊 Discover industry topics to monitor\\n• 🎯 Find trending narratives in your space`\n    });\n    \n    setIsAnalyzing(true);\n    performAutomatedAnalysis({ company, url });\n  };\n\n  const getCompetitorsForCompany = (company, url) => {\n    // Smart competitor identification based on company name and URL\n    const companyLower = company.toLowerCase();\n    \n    // Tech companies\n    if (companyLower.includes('openai') || companyLower.includes('ai')) {\n      return ['Anthropic', 'Google DeepMind', 'Microsoft AI', 'Cohere', 'Stability AI'];\n    }\n    if (companyLower.includes('microsoft')) {\n      return ['Google', 'Amazon', 'Apple', 'Meta', 'Salesforce'];\n    }\n    if (companyLower.includes('google')) {\n      return ['Microsoft', 'Apple', 'Amazon', 'Meta', 'OpenAI'];\n    }\n    \n    // E-commerce\n    if (companyLower.includes('amazon') || companyLower.includes('shopify')) {\n      return ['Amazon', 'Walmart', 'eBay', 'Alibaba', 'Target'];\n    }\n    \n    // Social media\n    if (companyLower.includes('meta') || companyLower.includes('facebook')) {\n      return ['TikTok', 'X (Twitter)', 'LinkedIn', 'Snapchat', 'Pinterest'];\n    }\n    \n    // Default competitors for unknown companies\n    return ['Industry Leader 1', 'Industry Leader 2', 'Emerging Competitor 1', 'Emerging Competitor 2'];\n  };\n  \n  const getTopicsForCompany = (company, url) => {\n    // Smart topic identification based on company and industry\n    const companyLower = company.toLowerCase();\n    \n    // AI companies\n    if (companyLower.includes('ai') || companyLower.includes('openai')) {\n      return ['AI Regulation', 'AGI Development', 'AI Safety', 'LLM Advancements', 'AI Ethics'];\n    }\n    \n    // Tech companies\n    if (companyLower.includes('microsoft') || companyLower.includes('google') || companyLower.includes('apple')) {\n      return ['Cloud Computing', 'Cybersecurity', 'Digital Transformation', 'Privacy Regulations', 'Tech Antitrust'];\n    }\n    \n    // E-commerce\n    if (companyLower.includes('amazon') || companyLower.includes('shopify')) {\n      return ['E-commerce Trends', 'Supply Chain Innovation', 'Last-Mile Delivery', 'Retail Technology', 'Consumer Behavior'];\n    }\n    \n    // Finance\n    if (companyLower.includes('bank') || companyLower.includes('capital')) {\n      return ['Fintech Disruption', 'Digital Banking', 'Cryptocurrency', 'Financial Regulations', 'ESG Investing'];\n    }\n    \n    // Default topics\n    return ['Industry Trends', 'Market Dynamics', 'Regulatory Changes', 'Technology Innovation', 'Consumer Sentiment'];\n  };\n\n  const performAutomatedAnalysis = async (orgData) => {\n    setCurrentStep('analyzing');\n    setAnalysisProgress({ organization: 0, stakeholders: 0, sources: 0, strategy: 0 });\n    \n    // Progressive analysis animation\n    setTimeout(() => setAnalysisProgress(prev => ({ ...prev, organization: 100 })), 1000);\n    setTimeout(() => setAnalysisProgress(prev => ({ ...prev, stakeholders: 100 })), 2000);\n    setTimeout(() => setAnalysisProgress(prev => ({ ...prev, sources: 100 })), 3000);\n    setTimeout(() => setAnalysisProgress(prev => ({ ...prev, strategy: 100 })), 4000);\n    \n    // Fetch real data from backend\n    try {\n      // Get auth token from localStorage (same as other components)\n      const token = localStorage.getItem('token');\n      console.log('Using token:', token ? 'Token found' : 'No token found');\n      \n      // Build headers\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      \n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      \n      // Fetch competitors and topics in parallel\n      const [competitorsResponse, topicsResponse] = await Promise.all([\n        fetch(`${API_BASE_URL}/intelligence/discover-competitors`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({ company: orgData.company, industry: orgData.url || 'technology' })\n        }),\n        fetch(`${API_BASE_URL}/intelligence/discover-topics`, {\n          method: 'POST',\n          headers,\n          body: JSON.stringify({ company: orgData.company, industry: orgData.url || 'technology' })\n        })\n      ]);\n      \n      const competitorsData = await competitorsResponse.json();\n      const topicsData = await topicsResponse.json();\n      \n      // Use real data if available, fallback to local discovery\n      let competitors, topics;\n      \n      if (competitorsData.success && competitorsData.competitors) {\n        // Extract competitor names from the objects\n        competitors = competitorsData.competitors.map(c => \n          typeof c === 'object' ? (c.name || c.competitor || JSON.stringify(c)) : c\n        );\n        console.log('Real competitors found:', competitors);\n      } else {\n        competitors = getCompetitorsForCompany(orgData.company, orgData.url);\n      }\n      \n      if (topicsData.success && topicsData.topics) {\n        // Extract topic names from the objects\n        topics = topicsData.topics.map(t => \n          typeof t === 'object' ? (t.topic || t.name || JSON.stringify(t)) : t\n        );\n        console.log('Real topics found:', topics);\n      } else {\n        topics = getTopicsForCompany(orgData.company, orgData.url);\n      }\n      \n      // Wait for animation to complete\n      setTimeout(() => {\n        // Create individual targets for each competitor and topic\n        const competitorTargets = competitors.map(competitorName => ({\n          name: competitorName,\n          type: 'competitor',\n          priority: 'high',\n          reason: `Track ${competitorName}'s competitive moves and market positioning`,\n          keywords: [competitorName.toLowerCase()],\n          topics: ['Product Launches', 'Pricing Changes', 'Market Expansion', 'Partnership Announcements']\n        }));\n        \n        const topicTargets = topics.map(topicName => ({\n          name: topicName,\n          type: 'topic',\n          priority: 'high',\n          reason: `Monitor developments in ${topicName}`,\n          keywords: topicName.toLowerCase().split(' '),\n          topics: [topicName]\n        }));\n        \n        const discoveredTargets = [...competitorTargets, ...topicTargets];\n        \n        setStakeholders(discoveredTargets);\n        setIsAnalyzing(false);\n        \n        // Store editable lists\n        setEditableCompetitors(competitors);\n        setEditableTopics(topics);\n        \n        // Show results with real data\n        addMessage({\n          type: 'ai',\n          content: `✅ **Discovery Complete!**\\n\\n**Click any item below to edit it:**`,\n          editableTargets: {\n            competitors: competitors,\n            topics: topics\n          },\n          options: [\n            { label: '✅ Start Monitoring These', value: 'proceed' },\n            { label: '➕ Add More Competitors', value: 'add_competitors' },\n            { label: '📝 Add More Topics', value: 'customize_topics' }\n          ]\n        });\n        \n        setCurrentStep('confirm_targets');\n      }, 4500);\n      \n    } catch (error) {\n      console.error('Error fetching real data:', error);\n      // Fallback to local discovery\n      setTimeout(() => {\n        const competitors = getCompetitorsForCompany(orgData.company, orgData.url);\n        const topics = getTopicsForCompany(orgData.company, orgData.url);\n        \n        // Create individual targets for each competitor and topic (fallback)\n        const competitorTargets = competitors.map(competitorName => ({\n          name: competitorName,\n          type: 'competitor',\n          priority: 'high',\n          reason: `Track ${competitorName}'s competitive moves and market positioning`,\n          keywords: [competitorName.toLowerCase()],\n          topics: ['Product Launches', 'Pricing Changes', 'Market Expansion', 'Partnership Announcements']\n        }));\n        \n        const topicTargets = topics.map(topicName => ({\n          name: topicName,\n          type: 'topic',\n          priority: 'high',\n          reason: `Monitor developments in ${topicName}`,\n          keywords: topicName.toLowerCase().split(' '),\n          topics: [topicName]\n        }));\n        \n        const discoveredTargets = [...competitorTargets, ...topicTargets];\n        \n        setStakeholders(discoveredTargets);\n        setIsAnalyzing(false);\n        \n        // Store editable lists\n        setEditableCompetitors(competitors);\n        setEditableTopics(topics);\n        \n        addMessage({\n          type: 'ai',\n          content: `✅ **Discovery Complete!**\\n\\n**Click any item below to edit it:**`,\n          editableTargets: {\n            competitors: competitors,\n            topics: topics\n          },\n          options: [\n            { label: '✅ Start Monitoring These', value: 'proceed' },\n            { label: '➕ Add More Competitors', value: 'add_competitors' },\n            { label: '📝 Add More Topics', value: 'customize_topics' }\n          ]\n        });\n        \n        setCurrentStep('confirm_targets');\n      }, 4500);\n    }\n  };\n\n  const performDeepOrganizationAnalysis = async (orgData) => {\n    setIsAnalyzing(true);\n    setCurrentStep('analyzing');\n    \n    // Show analysis progress with all collected data\n    addMessage({\n      type: 'ai',\n      content: `Excellent! I'm now performing a deep analysis with the following information:\\n\\n` +\n        `🏢 **Organization**: ${orgData.company}\\n` +\n        `🌐 **Website**: ${orgData.url || 'Not provided'}\\n` +\n        `🎯 **Strategic Goals**: ${orgData.strategicGoals ? 'Identified' : 'Not provided'}\\n` +\n        `👥 **Known Stakeholders**: ${orgData.priorityStakeholders && orgData.priorityStakeholders.toLowerCase() !== 'none' ? 'Provided' : 'Will discover'}\\n\\n` +\n        `This comprehensive research will help me identify and configure your key stakeholders automatically.`,\n      showProgress: true\n    });\n\n    // Enhanced research phases showing deeper analysis\n    const phases = [\n      { key: 'organization', label: `Analyzing ${orgData.company} and ${orgData.url || 'industry context'}`, duration: 2000 },\n      { key: 'stakeholders', label: 'Mapping stakeholders to strategic goals', duration: 2500 },\n      { key: 'sources', label: 'Building custom intelligence sources', duration: 2000 },\n      { key: 'strategy', label: 'Creating goal-aligned monitoring strategy', duration: 1500 }\n    ];\n\n    for (const phase of phases) {\n      await animateProgress(phase.key, phase.duration);\n    }\n\n    // Generate intelligent stakeholder suggestions with all context\n    let suggestedStakeholders = [];\n    \n    try {\n      // First, create/update organization in database\n      const orgResult = await stakeholderIntelligenceService.createOrUpdateOrganization({\n        name: orgData.company,\n        url: orgData.url,\n        industry: determineIndustryFromUrl(orgData.url),\n        type: orgData.company.toLowerCase().includes('karv') || \n              orgData.company.toLowerCase().includes('agency') ? 'agency' : 'company',\n        strategicGoals: orgData.strategicGoals\n      });\n      \n      // Store organization ID for later use\n      orgData.organizationId = orgResult.organizationId;\n      setOrganizationData(prev => ({ ...prev, organizationId: orgResult.organizationId }));\n      \n      // Try to get AI-powered suggestions from backend\n      suggestedStakeholders = await stakeholderIntelligenceService.generateStakeholderSuggestions(orgData);\n      \n      // If API fails or returns empty, use local generation\n      if (!suggestedStakeholders || suggestedStakeholders.length === 0) {\n        suggestedStakeholders = await generateSmartStakeholderSuggestions(orgData);\n      }\n    } catch (error) {\n      console.error('Error with API, using local generation:', error);\n      // Fall back to local generation\n      suggestedStakeholders = await generateSmartStakeholderSuggestions(orgData);\n    }\n    \n    setStakeholders(suggestedStakeholders);\n    setIsAnalyzing(false);\n    setCurrentStep('review_stakeholders');\n\n    // Present results\n    addMessage({\n      type: 'ai',\n      content: `Analysis complete! Based on my research of ${orgData.company}, your strategic goals, and the URL analysis, I've identified ${suggestedStakeholders.length} key stakeholder groups that significantly influence your success. These groups represent dozens of individual entities we'll monitor.`,\n      stakeholderResults: suggestedStakeholders\n    });\n  };\n\n  const animateProgress = (key, duration) => {\n    return new Promise(resolve => {\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += 10;\n        setAnalysisProgress(prev => ({ ...prev, [key]: progress }));\n        if (progress >= 100) {\n          clearInterval(interval);\n          resolve();\n        }\n      }, duration / 10);\n    });\n  };\n\n  const determineIndustryFromUrl = (url) => {\n    if (!url) return null;\n    const domain = url.toLowerCase();\n    \n    // Simple industry detection based on domain patterns\n    if (domain.includes('tech') || domain.includes('.io') || domain.includes('software')) return 'Technology';\n    if (domain.includes('bank') || domain.includes('capital') || domain.includes('invest')) return 'Financial Services';\n    if (domain.includes('health') || domain.includes('med') || domain.includes('pharma')) return 'Healthcare';\n    if (domain.includes('retail') || domain.includes('shop') || domain.includes('store')) return 'Retail';\n    if (domain.includes('energy') || domain.includes('oil') || domain.includes('solar')) return 'Energy';\n    \n    return 'Technology'; // Default fallback\n  };\n\n  const generateSmartStakeholderSuggestions = async (orgData) => {\n    const suggestions = [];\n    \n    // Determine company type and context\n    const companyName = orgData.company.toLowerCase();\n    const url = orgData.url?.toLowerCase() || '';\n    const goals = orgData.strategicGoals?.toLowerCase() || '';\n    const userStakeholders = orgData.priorityStakeholders?.toLowerCase() || '';\n    \n    // Analyze company type from name, URL, and context\n    // KARV and similar names should be detected as agencies\n    const isAgency = companyName.includes('communications') || companyName.includes('pr') || \n                     companyName.includes('marketing') || companyName.includes('agency') ||\n                     companyName.includes('karv') || companyName.includes('publicis') ||\n                     companyName.includes('omnicom') || companyName.includes('wpp') ||\n                     url.includes('agency') || url.includes('communications') ||\n                     goals.includes('new business') || goals.includes('win clients');\n    \n    const isB2B = goals.includes('business') || goals.includes('enterprise') || \n                  goals.includes('b2b') || companyName.includes('solutions');\n    \n    const targetingTech = goals.includes('technology') || goals.includes('tech') || \n                          goals.includes('software') || goals.includes('saas') ||\n                          goals.includes('generate new business with tech');\n    \n    // For KARV (communications firm) wanting new tech business\n    if (isAgency && targetingTech) {\n      // Specific Major Tech Companies as PROSPECTS\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Microsoft',\n        type: 'Target Client - Enterprise',\n        priority: 'critical',\n        reason: 'Major tech company that regularly uses PR agencies for product launches and corporate comms',\n        influence: 10,\n        keywords: ['microsoft', 'msft', 'satya nadella', 'azure', 'office'],\n        preIndexed: true,\n        sourceCount: 15,\n        entities: ['Microsoft'],\n        monitoringTopics: [\n          'product launches needing PR support',\n          'PR agency RFPs',\n          'marketing leadership changes',\n          'crisis communications needs',\n          'market expansion announcements'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Salesforce',\n        type: 'Target Client - Enterprise SaaS',\n        priority: 'critical',\n        reason: 'Leading SaaS company with extensive PR needs for Dreamforce and product launches',\n        influence: 10,\n        keywords: ['salesforce', 'crm', 'marc benioff', 'dreamforce'],\n        preIndexed: true,\n        sourceCount: 12,\n        entities: ['Salesforce'],\n        monitoringTopics: [\n          'Dreamforce planning',\n          'acquisition communications',\n          'product launch campaigns',\n          'executive thought leadership'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'High-Growth Tech Startups',\n        type: 'Target Client Segment',\n        priority: 'critical',\n        reason: 'Series B-D startups often need first-time PR agency partnerships',\n        influence: 9,\n        keywords: ['series b', 'series c', 'unicorn', 'startup', 'scale-up'],\n        preIndexed: false,\n        sourceCount: 40,\n        entities: ['Funded Startups', 'Unicorns', 'Pre-IPO Companies'],\n        monitoringTopics: [\n          'funding announcements (PR opportunity)',\n          'first CMO/VP Marketing hire',\n          'product launches',\n          'market expansion',\n          'competitive positioning needs'\n        ]\n      });\n\n      // Specific Competitor Agencies\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Edelman',\n        type: 'Competitor - Global Leader',\n        priority: 'high',\n        reason: 'World\\'s largest PR firm - monitor for competitive intelligence',\n        influence: 8,\n        keywords: ['edelman', 'edelman pr'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['Edelman'],\n        monitoringTopics: [\n          'tech client wins',\n          'new service offerings',\n          'talent acquisitions',\n          'industry thought leadership'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Weber Shandwick',\n        type: 'Competitor - Major Agency',\n        priority: 'medium',\n        reason: 'Leading global PR agency with strong tech practice',\n        influence: 7,\n        keywords: ['weber shandwick', 'weber'],\n        preIndexed: true,\n        sourceCount: 6,\n        entities: ['Weber Shandwick'],\n        monitoringTopics: [\n          'client movements',\n          'tech sector focus',\n          'award wins',\n          'executive changes'\n        ]\n      });\n\n      // Specific Tech Media Outlets\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'TechCrunch',\n        type: 'Media Partner - Tech',\n        priority: 'high',\n        reason: 'Premier tech media outlet for client coverage and thought leadership',\n        influence: 9,\n        keywords: ['techcrunch', 'tc', 'disrupt'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['TechCrunch'],\n        monitoringTopics: [\n          'reporter beats and interests',\n          'editorial calendar',\n          'Disrupt conference',\n          'startup coverage priorities'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Wall Street Journal Tech',\n        type: 'Media Partner - Business',\n        priority: 'high',\n        reason: 'Leading business publication for enterprise tech coverage',\n        influence: 9,\n        keywords: ['wsj', 'wall street journal', 'dow jones'],\n        preIndexed: true,\n        sourceCount: 8,\n        entities: ['Wall Street Journal'],\n        monitoringTopics: [\n          'enterprise tech coverage',\n          'tech reporter needs',\n          'opinion section opportunities',\n          'executive profiles'\n        ]\n      });\n\n      // Specific VC Firms as Referral Partners  \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Sequoia Capital',\n        type: 'Referral Partner - Premier VC',\n        priority: 'high',\n        reason: 'Top-tier VC that frequently refers PR agencies to portfolio companies',\n        influence: 10,\n        keywords: ['sequoia', 'sequoia capital', 'roelof botha'],\n        preIndexed: true,\n        sourceCount: 10,\n        entities: ['Sequoia Capital'],\n        monitoringTopics: [\n          'new portfolio investments',\n          'portfolio company launches',\n          'partner recommendations',\n          'portfolio PR needs'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Andreessen Horowitz',\n        type: 'Referral Partner - Major VC',\n        priority: 'high',\n        reason: 'Leading VC with 400+ portfolio companies often needing PR services',\n        influence: 10,\n        keywords: ['a16z', 'andreessen horowitz', 'marc andreessen'],\n        preIndexed: true,\n        sourceCount: 12,\n        entities: ['Andreessen Horowitz'],\n        monitoringTopics: [\n          'new investments',\n          'portfolio expansions',\n          'marketing services program',\n          'portfolio company needs'\n        ]\n      });\n      \n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Y Combinator',\n        type: 'Referral Partner - Accelerator',\n        priority: 'high',\n        reason: 'YC companies often need PR help post-Demo Day',\n        influence: 9,\n        keywords: ['y combinator', 'yc', 'demo day'],\n        preIndexed: false,\n        sourceCount: 15,\n        entities: ['Y Combinator'],\n        monitoringTopics: [\n          'Demo Day announcements',\n          'new batch companies',\n          'YC partner advice on PR',\n          'portfolio launches'\n        ]\n      });\n\n    } else if (isB2B && !isAgency) {\n      // B2B Software/SaaS Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Enterprise Customers & Prospects',\n        type: 'Revenue Drivers',\n        priority: 'critical',\n        reason: 'Current customers and target accounts driving revenue growth',\n        influence: 10,\n        keywords: ['customer', 'client', 'account', 'enterprise', 'fortune 500'],\n        preIndexed: false,\n        sourceCount: 30,\n        entities: ['Current Enterprise Accounts', 'Target Fortune 500', 'Strategic Partners'],\n        monitoringTopics: ['digital transformation', 'technology budgets', 'vendor evaluations', 'RFPs']\n      });\n\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Technology Investors',\n        type: 'Financial Stakeholders',\n        priority: 'high',\n        reason: 'VCs and growth investors influencing strategy and providing capital',\n        influence: 9,\n        keywords: ['venture capital', 'private equity', 'investor', 'funding'],\n        preIndexed: true,\n        sourceCount: 40,\n        entities: ['Current Investors', 'Target VCs', 'Growth Equity Firms'],\n        monitoringTopics: ['portfolio movements', 'investment thesis', 'market opinions', 'fund raising']\n      });\n\n    } else if (companyName.includes('health') || url.includes('health') || goals.includes('patient')) {\n      // Healthcare Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Healthcare Regulators & Compliance Bodies',\n        type: 'Regulatory Oversight',\n        priority: 'critical',\n        reason: 'FDA, CMS, and other bodies controlling market access and compliance',\n        influence: 10,\n        keywords: ['fda', 'cms', 'healthcare regulation', 'hipaa', 'compliance'],\n        preIndexed: true,\n        sourceCount: 35,\n        entities: ['FDA', 'CMS', 'HHS', 'State Health Departments'],\n        monitoringTopics: ['regulatory changes', 'compliance requirements', 'approval processes', 'enforcement actions']\n      });\n\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Healthcare Providers & Systems',\n        type: 'Customer Base',\n        priority: 'high',\n        reason: 'Hospitals, clinics, and providers implementing your solutions',\n        influence: 9,\n        keywords: ['hospital', 'health system', 'clinic', 'physician', 'provider'],\n        preIndexed: false,\n        sourceCount: 30,\n        entities: ['Major Health Systems', 'Academic Medical Centers', 'Provider Networks'],\n        monitoringTopics: ['technology adoption', 'budget cycles', 'clinical needs', 'patient outcomes']\n      });\n\n    } else if (companyName.includes('retail') || url.includes('retail') || goals.includes('consumer')) {\n      // Retail/Consumer Company\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Consumer Groups & Influencers',\n        type: 'Market Drivers',\n        priority: 'critical',\n        reason: 'End consumers and social influencers driving brand perception',\n        influence: 9,\n        keywords: ['consumer', 'customer', 'influencer', 'social media', 'review'],\n        preIndexed: false,\n        sourceCount: 40,\n        entities: ['Consumer Advocacy Groups', 'Social Media Influencers', 'Review Platforms'],\n        monitoringTopics: ['consumer sentiment', 'product reviews', 'social trends', 'brand mentions']\n      });\n\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'Retail Partners & Distributors',\n        type: 'Channel Partners',\n        priority: 'high',\n        reason: 'Key retail chains and distribution partners affecting market reach',\n        influence: 8,\n        keywords: ['retailer', 'distributor', 'wholesale', 'amazon', 'walmart'],\n        preIndexed: true,\n        sourceCount: 25,\n        entities: ['Major Retailers', 'E-commerce Platforms', 'Distribution Networks'],\n        monitoringTopics: ['partner requirements', 'shelf space', 'promotional opportunities', 'supply chain']\n      });\n\n    } else {\n      // Default but still try to be intelligent based on goals\n      if (goals.includes('ipo') || goals.includes('public')) {\n        suggestions.push({\n          id: `stakeholder-${suggestions.length}`,\n          name: 'IPO Readiness Stakeholders',\n          type: 'Go-Public Strategy',\n          priority: 'critical',\n          reason: 'Investment banks, analysts, and regulators critical for IPO success',\n          influence: 10,\n          keywords: ['investment bank', 'ipo', 'sec', 'analyst', 'underwriter'],\n          preIndexed: true,\n          sourceCount: 35,\n          entities: ['Goldman Sachs', 'Morgan Stanley', 'JPMorgan', 'SEC', 'Financial Analysts'],\n          monitoringTopics: ['ipo market conditions', 'comparable valuations', 'regulatory requirements', 'analyst coverage']\n        });\n      }\n\n      if (goals.includes('acquisition') || goals.includes('m&a')) {\n        suggestions.push({\n          id: `stakeholder-${suggestions.length}`,\n          name: 'M&A Targets & Strategic Buyers',\n          type: 'Growth Strategy',\n          priority: 'high',\n          reason: 'Potential acquisition targets and strategic acquirers',\n          influence: 9,\n          keywords: ['acquisition', 'merger', 'strategic buyer', 'private equity'],\n          preIndexed: false,\n          sourceCount: 30,\n          entities: ['Strategic Buyers', 'PE Firms', 'Acquisition Targets', 'Investment Banks'],\n          monitoringTopics: ['M&A activity', 'valuations', 'strategic moves', 'integration challenges']\n        });\n      }\n    }\n\n    // Add industry-specific associations\n    if (isAgency) {\n      suggestions.push({\n        id: `stakeholder-${suggestions.length}`,\n        name: 'PR & Marketing Associations',\n        type: 'Industry Organizations',\n        priority: 'medium',\n        reason: 'Industry credibility, awards, best practices, and networking',\n        influence: 6,\n        keywords: ['prsa', 'prca', 'marketing association', 'communications association'],\n        preIndexed: false,\n        sourceCount: 15,\n        entities: ['PRSA', 'PRCA', 'AMA', 'Content Marketing Institute'],\n        monitoringTopics: [\n          'industry trends',\n          'award deadlines',\n          'best practices',\n          'regulatory changes',\n          'industry events'\n        ]\n      });\n    }\n\n    // Always add user-mentioned stakeholders with enhanced context\n    if (userStakeholders && userStakeholders !== 'none') {\n      const userMentions = userStakeholders.split(/[,;]/).map(s => s.trim());\n      userMentions.forEach(mention => {\n        if (mention) {\n          suggestions.unshift({\n            id: `user-${suggestions.length}`,\n            name: mention,\n            type: 'User Priority',\n            priority: 'critical',\n            reason: 'Specifically identified as important by your team',\n            influence: 10,\n            keywords: [mention.toLowerCase()],\n            preIndexed: false,\n            sourceCount: 20,\n            entities: [mention],\n            monitoringTopics: ['all relevant news', 'announcements', 'leadership changes'],\n            isUserPriority: true\n          });\n        }\n      });\n    }\n\n    return suggestions;\n  };\n\n  const finalizeStrategy = async () => {\n    setIsTyping(true);\n    \n    addMessage({\n      type: 'ai',\n      content: \"✅ **Excellent!** I'm finalizing your intelligence monitoring strategy...\\n\\nConfiguring:\\n• Stakeholder monitoring sources\\n• Topic tracking systems\\n• Real-time intelligence gathering\\n• Automated alerts and insights\"\n    });\n\n    // Generate organization ID if not present\n    if (!organizationData.organizationId) {\n      organizationData.organizationId = `org-${Date.now()}`;\n    }\n\n    // Build final stakeholders list from editable lists\n    const finalStakeholders = [];\n    \n    // Add competitors\n    if (editableCompetitors && editableCompetitors.length > 0) {\n      editableCompetitors.forEach(name => {\n        finalStakeholders.push({\n          name: name,\n          type: 'competitor',\n          priority: 'high',\n          keywords: [name.toLowerCase()],\n          topics: ['Product Launches', 'Market Moves', 'Partnerships', 'Funding']\n        });\n      });\n    }\n    \n    // Add topics\n    if (editableTopics && editableTopics.length > 0) {\n      editableTopics.forEach(name => {\n        finalStakeholders.push({\n          name: name,\n          type: 'topic',\n          priority: 'high',\n          keywords: name.toLowerCase().split(' '),\n          topics: [name]\n        });\n      });\n    }\n    \n    // Update stakeholders with final list\n    setStakeholders(finalStakeholders);\n\n    try {\n      // Save stakeholder configuration to backend if we have an organization ID\n      if (organizationData.organizationId) {\n        // Prepare stakeholders with sources for backend\n        const stakeholdersWithSources = await Promise.all(finalStakeholders.map(async (s) => {\n          let sources = [];\n          \n          // If pre-indexed, get sources from database\n          if (s.preIndexed && s.name) {\n            const preIndexed = findPreIndexedStakeholder(s.name);\n            if (preIndexed && preIndexed.sources) {\n              sources = preIndexed.sources;\n            }\n          } else {\n            // Discover sources using API\n            try {\n              sources = await stakeholderIntelligenceService.discoverStakeholderSources(s.name, s.type);\n            } catch (error) {\n              console.error('Error discovering sources for', s.name, error);\n            }\n          }\n          \n          return {\n            ...s,\n            sources: sources\n          };\n        }));\n        \n        // Save configuration to database\n        await stakeholderIntelligenceService.saveStakeholderConfiguration(\n          organizationData.organizationId,\n          stakeholdersWithSources\n        );\n      }\n    } catch (error) {\n      console.error('Error saving stakeholder configuration:', error);\n      // Continue even if save fails - user can still see the strategy\n    }\n\n    // Prepare enhanced strategy data with all collected information\n    // Use finalStakeholders directly since setState might not have updated yet\n    const enhancedStrategy = {\n      organizationId: organizationData.organizationId,\n      company: organizationData.company,\n      url: organizationData.url,\n      industry: determineIndustryFromUrl(organizationData.url) || 'Technology',\n      strategicGoals: organizationData.strategicGoals,\n      userPriorityStakeholders: organizationData.priorityStakeholders,\n      stakeholders: finalStakeholders.map(s => ({\n        ...s,\n        topics: s.monitoringTopics || s.topics,\n        sources: s.preIndexed ? 'Pre-configured' : 'To be configured',\n        goals: `Monitor ${s.name} for strategic intelligence`,\n        fears: `Missing critical ${s.type.toLowerCase()} signals`\n      })),\n      stakeholderGroups: finalStakeholders.map((s, idx) => ({\n        id: `stakeholder-${idx}`,\n        name: s.name,\n        type: s.type,\n        influence: s.priority === 'high' ? 9 : s.priority === 'medium' ? 7 : 5,\n        interest: s.priority === 'high' ? 9 : s.priority === 'medium' ? 7 : 5,\n        sentiment: 'neutral',\n        currentSentiment: 5,\n        targetSentiment: 8,\n        engagementLevel: 6,\n        trend: 'stable',\n        concerns: [s.reason],\n        keywords: s.keywords || [],\n        topics: s.topics || [],\n        preIndexed: s.preIndexed || false,\n        sourceCount: s.sourceCount || 0\n      })),\n      overview: `Automated intelligence monitoring for ${organizationData.company}`,\n      enhancedFeatures: {\n        preIndexedCount: finalStakeholders.filter(s => s.preIndexed).length,\n        totalSources: finalStakeholders.reduce((acc, s) => acc + s.sourceCount, 0),\n        researchAgentsEnabled: true,\n        urlAnalysisEnabled: true,\n        strategicAlignment: true,\n        backendIntegration: true\n      }\n    };\n\n    setTimeout(() => {\n      onStrategyComplete(enhancedStrategy);\n      setIsTyping(false);\n    }, 2000);\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      height: '100%',\n      background: '#f9fafb'\n    }}>\n      {/* Chat Interface */}\n      <div style={{\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '800px',\n        margin: '0 auto',\n        width: '100%'\n      }}>\n        {/* Messages */}\n        <div style={{\n          flex: 1,\n          overflowY: 'auto',\n          padding: '2rem',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '1rem'\n        }}>\n          {messages.map(message => (\n            <div key={message.id} style={{\n              display: 'flex',\n              justifyContent: message.type === 'user' ? 'flex-end' : 'flex-start'\n            }}>\n              <div style={{\n                maxWidth: '70%',\n                padding: '1rem',\n                borderRadius: '0.75rem',\n                background: message.type === 'user' ? '#6366f1' : 'white',\n                color: message.type === 'user' ? 'white' : '#111827',\n                boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n              }}>\n                {message.type === 'ai' && (\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\n                    <Bot size={16} />\n                    <span style={{ fontWeight: '600', fontSize: '0.875rem' }}>AI Strategy Advisor</span>\n                  </div>\n                )}\n                \n                <div style={{ whiteSpace: 'pre-wrap' }}>{message.content}</div>\n                \n                {/* Editable Targets Lists */}\n                {message.editableTargets && (\n                  <div style={{ marginTop: '1rem' }}>\n                    {/* Competitors List - Use live state */}\n                    {editableCompetitors && editableCompetitors.length > 0 && (\n                      <div style={{ marginBottom: '1.5rem' }}>\n                        <h4 style={{ fontSize: '1rem', fontWeight: '600', marginBottom: '0.5rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n                          <Building2 size={18} /> Competitors to Track\n                        </h4>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                          {editableCompetitors.map((competitor, idx) => (\n                            <div key={`comp-${idx}`} style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '0.5rem',\n                              padding: '0.5rem',\n                              background: '#f9fafb',\n                              borderRadius: '0.5rem',\n                              border: '1px solid #e5e7eb'\n                            }}>\n                              <span style={{ fontWeight: '600', color: '#6366f1', minWidth: '20px' }}>{idx + 1}.</span>\n                              {editingType === 'competitor' && editingIndex === idx ? (\n                                <>\n                                  <input\n                                    type=\"text\"\n                                    value={editValue}\n                                    onChange={(e) => setEditValue(e.target.value)}\n                                    onKeyPress={(e) => {\n                                      if (e.key === 'Enter') {\n                                        e.preventDefault();\n                                        const updated = [...editableCompetitors];\n                                        updated[idx] = editValue;\n                                        setEditableCompetitors(updated);\n                                        setEditingType(null);\n                                        setEditingIndex(null);\n                                        setEditValue('');\n                                      }\n                                    }}\n                                    onBlur={() => {\n                                      const updated = [...editableCompetitors];\n                                      updated[idx] = editValue;\n                                      setEditableCompetitors(updated);\n                                      setEditingType(null);\n                                      setEditingIndex(null);\n                                      setEditValue('');\n                                    }}\n                                    style={{\n                                      flex: 1,\n                                      padding: '0.25rem',\n                                      border: '1px solid #6366f1',\n                                      borderRadius: '0.25rem',\n                                      outline: 'none'\n                                    }}\n                                    autoFocus\n                                  />\n                                  <button\n                                    onClick={() => {\n                                      const updated = editableCompetitors.filter((_, i) => i !== idx);\n                                      setEditableCompetitors(updated);\n                                      setEditingType(null);\n                                      setEditingIndex(null);\n                                    }}\n                                    style={{\n                                      padding: '0.25rem',\n                                      background: '#ef4444',\n                                      color: 'white',\n                                      border: 'none',\n                                      borderRadius: '0.25rem',\n                                      cursor: 'pointer',\n                                      fontSize: '0.75rem'\n                                    }}\n                                  >\n                                    Remove\n                                  </button>\n                                </>\n                              ) : (\n                                <span\n                                  onClick={() => {\n                                    setEditingType('competitor');\n                                    setEditingIndex(idx);\n                                    setEditValue(competitor);\n                                  }}\n                                  style={{\n                                    flex: 1,\n                                    cursor: 'pointer',\n                                    color: '#374151',\n                                    textDecoration: 'underline'\n                                  }}\n                                >\n                                  {competitor}\n                                </span>\n                              )}\n                            </div>\n                          ))}\n                          {/* Add new competitor button */}\n                          <button\n                            onClick={() => {\n                              const newName = prompt('Enter competitor name:');\n                              if (newName && newName.trim()) {\n                                const updated = [...editableCompetitors, newName.trim()];\n                                setEditableCompetitors(updated);\n                              }\n                            }}\n                            style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '0.5rem',\n                              padding: '0.5rem',\n                              background: 'white',\n                              borderRadius: '0.5rem',\n                              border: '1px dashed #6366f1',\n                              color: '#6366f1',\n                              cursor: 'pointer',\n                              fontSize: '0.875rem',\n                              fontWeight: '500',\n                              transition: 'all 0.2s'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.currentTarget.style.background = '#f0f0ff';\n                              e.currentTarget.style.borderStyle = 'solid';\n                            }}\n                            onMouseLeave={(e) => {\n                              e.currentTarget.style.background = 'white';\n                              e.currentTarget.style.borderStyle = 'dashed';\n                            }}\n                          >\n                            <span style={{ fontSize: '1.2rem' }}>+</span> Add Competitor\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {/* Topics List - Use live state */}\n                    {editableTopics && editableTopics.length > 0 && (\n                      <div>\n                        <h4 style={{ fontSize: '1rem', fontWeight: '600', marginBottom: '0.5rem', display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n                          <TrendingUp size={18} /> Topics to Monitor\n                        </h4>\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                          {editableTopics.map((topic, idx) => (\n                            <div key={`topic-${idx}`} style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '0.5rem',\n                              padding: '0.5rem',\n                              background: '#f9fafb',\n                              borderRadius: '0.5rem',\n                              border: '1px solid #e5e7eb'\n                            }}>\n                              <span style={{ fontWeight: '600', color: '#10b981', minWidth: '20px' }}>{idx + 1}.</span>\n                              {editingType === 'topic' && editingIndex === idx ? (\n                                <>\n                                  <input\n                                    type=\"text\"\n                                    value={editValue}\n                                    onChange={(e) => setEditValue(e.target.value)}\n                                    onKeyPress={(e) => {\n                                      if (e.key === 'Enter') {\n                                        e.preventDefault();\n                                        const updated = [...editableTopics];\n                                        updated[idx] = editValue;\n                                        setEditableTopics(updated);\n                                        setEditingType(null);\n                                        setEditingIndex(null);\n                                        setEditValue('');\n                                      }\n                                    }}\n                                    onBlur={() => {\n                                      const updated = [...editableTopics];\n                                      updated[idx] = editValue;\n                                      setEditableTopics(updated);\n                                      setEditingType(null);\n                                      setEditingIndex(null);\n                                      setEditValue('');\n                                    }}\n                                    style={{\n                                      flex: 1,\n                                      padding: '0.25rem',\n                                      border: '1px solid #10b981',\n                                      borderRadius: '0.25rem',\n                                      outline: 'none'\n                                    }}\n                                    autoFocus\n                                  />\n                                  <button\n                                    onClick={() => {\n                                      const updated = editableTopics.filter((_, i) => i !== idx);\n                                      setEditableTopics(updated);\n                                      setEditingType(null);\n                                      setEditingIndex(null);\n                                    }}\n                                    style={{\n                                      padding: '0.25rem',\n                                      background: '#ef4444',\n                                      color: 'white',\n                                      border: 'none',\n                                      borderRadius: '0.25rem',\n                                      cursor: 'pointer',\n                                      fontSize: '0.75rem'\n                                    }}\n                                  >\n                                    Remove\n                                  </button>\n                                </>\n                              ) : (\n                                <span\n                                  onClick={() => {\n                                    setEditingType('topic');\n                                    setEditingIndex(idx);\n                                    setEditValue(topic);\n                                  }}\n                                  style={{\n                                    flex: 1,\n                                    cursor: 'pointer',\n                                    color: '#374151',\n                                    textDecoration: 'underline'\n                                  }}\n                                >\n                                  {topic}\n                                </span>\n                              )}\n                            </div>\n                          ))}\n                          {/* Add new topic button */}\n                          <button\n                            onClick={() => {\n                              const newName = prompt('Enter topic to monitor:');\n                              if (newName && newName.trim()) {\n                                const updated = [...editableTopics, newName.trim()];\n                                setEditableTopics(updated);\n                              }\n                            }}\n                            style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '0.5rem',\n                              padding: '0.5rem',\n                              background: 'white',\n                              borderRadius: '0.5rem',\n                              border: '1px dashed #10b981',\n                              color: '#10b981',\n                              cursor: 'pointer',\n                              fontSize: '0.875rem',\n                              fontWeight: '500',\n                              transition: 'all 0.2s'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.currentTarget.style.background = '#f0fff0';\n                              e.currentTarget.style.borderStyle = 'solid';\n                            }}\n                            onMouseLeave={(e) => {\n                              e.currentTarget.style.background = 'white';\n                              e.currentTarget.style.borderStyle = 'dashed';\n                            }}\n                          >\n                            <span style={{ fontSize: '1.2rem' }}>+</span> Add Topic\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                \n                {/* Progress Indicator */}\n                {message.showProgress && isAnalyzing && (\n                  <div style={{ marginTop: '1rem' }}>\n                    {Object.entries(analysisProgress).map(([key, value]) => (\n                      <div key={key} style={{ marginBottom: '0.75rem' }}>\n                        <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '0.25rem' }}>\n                          <span style={{ fontSize: '0.875rem', textTransform: 'capitalize' }}>\n                            {key === 'organization' && 'Organization Analysis'}\n                            {key === 'stakeholders' && 'Stakeholder Discovery'}\n                            {key === 'sources' && 'Source Configuration'}\n                            {key === 'strategy' && 'Strategy Generation'}\n                          </span>\n                          <span style={{ fontSize: '0.875rem' }}>{value}%</span>\n                        </div>\n                        <div style={{\n                          height: '6px',\n                          background: '#e5e7eb',\n                          borderRadius: '3px',\n                          overflow: 'hidden'\n                        }}>\n                          <div style={{\n                            height: '100%',\n                            background: '#6366f1',\n                            width: `${value}%`,\n                            transition: 'width 0.3s ease'\n                          }} />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                {/* Stakeholder Results */}\n                {message.stakeholderResults && (\n                  <div style={{ marginTop: '1rem' }}>\n                    <h4 style={{ margin: '0 0 0.75rem 0', fontSize: '1rem', fontWeight: '600' }}>\n                      Discovered Stakeholders:\n                    </h4>\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n                      {message.stakeholderResults.map(stakeholder => (\n                        <div key={stakeholder.id} style={{\n                          padding: '0.75rem',\n                          background: stakeholder.preIndexed ? '#f0f9ff' : '#f9fafb',\n                          borderRadius: '0.5rem',\n                          border: `1px solid ${stakeholder.preIndexed ? '#bfdbfe' : '#e5e7eb'}`\n                        }}>\n                          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'start' }}>\n                            <div style={{ flex: 1 }}>\n                              <div style={{ fontWeight: '600', marginBottom: '0.25rem' }}>\n                                {stakeholder.name}\n                              </div>\n                              <div style={{ fontSize: '0.875rem', color: '#6b7280', marginBottom: '0.25rem' }}>\n                                {stakeholder.type} • Influence: {stakeholder.influence}/10\n                              </div>\n                              <div style={{ fontSize: '0.75rem', color: '#6b7280' }}>\n                                {stakeholder.reason}\n                              </div>\n                              {stakeholder.entities && stakeholder.entities.length > 0 && (\n                                <div style={{ marginTop: '0.5rem', fontSize: '0.75rem', color: '#4b5563' }}>\n                                  <strong>Includes:</strong> {stakeholder.entities.join(', ')}\n                                </div>\n                              )}\n                            </div>\n                            {stakeholder.preIndexed && (\n                              <div style={{\n                                display: 'flex',\n                                alignItems: 'center',\n                                gap: '0.25rem',\n                                padding: '0.25rem 0.5rem',\n                                background: '#dbeafe',\n                                borderRadius: '0.375rem',\n                                fontSize: '0.75rem',\n                                color: '#1e40af',\n                                fontWeight: '500',\n                                flexShrink: 0\n                              }}>\n                                <Database size={12} />\n                                {stakeholder.sourceCount} sources\n                              </div>\n                            )}\n                          </div>\n                          {stakeholder.monitoringTopics && stakeholder.monitoringTopics.length > 0 && (\n                            <div style={{ marginTop: '0.5rem', display: 'flex', flexWrap: 'wrap', gap: '0.25rem' }}>\n                              {stakeholder.monitoringTopics.slice(0, 3).map((topic, idx) => (\n                                <span key={idx} style={{\n                                  padding: '0.125rem 0.375rem',\n                                  background: '#e0e7ff',\n                                  color: '#4338ca',\n                                  borderRadius: '0.25rem',\n                                  fontSize: '0.625rem'\n                                }}>\n                                  {topic}\n                                </span>\n                              ))}\n                              {stakeholder.monitoringTopics.length > 3 && (\n                                <span style={{\n                                  padding: '0.125rem 0.375rem',\n                                  color: '#6b7280',\n                                  fontSize: '0.625rem'\n                                }}>\n                                  +{stakeholder.monitoringTopics.length - 3} more\n                                </span>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <div style={{\n                      marginTop: '1rem',\n                      padding: '0.75rem',\n                      background: '#f0fdf4',\n                      borderRadius: '0.5rem',\n                      border: '1px solid #bbf7d0',\n                      fontSize: '0.875rem'\n                    }}>\n                      <strong>Ready to proceed?</strong> I'll automatically configure sources for all pre-indexed stakeholders and help you set up the rest.\n                    </div>\n                  </div>\n                )}\n                \n                {/* Options */}\n                {message.options && message.options.length > 0 && (\n                  <div style={{ display: 'flex', gap: '0.5rem', marginTop: '1rem', flexWrap: 'wrap' }}>\n                    {console.log('Rendering options for message:', message.id, message.options)}\n                    {message.options.map((option, idx) => (\n                      <button\n                        key={idx}\n                        onClick={() => handleUserResponse(option.value)}\n                        style={{\n                          padding: '0.5rem 1rem',\n                          background: '#f3f4f6',\n                          border: '1px solid #e5e7eb',\n                          borderRadius: '0.5rem',\n                          cursor: 'pointer',\n                          fontSize: '0.875rem',\n                          transition: 'all 0.2s'\n                        }}\n                        onMouseEnter={e => {\n                          e.target.style.background = '#6366f1';\n                          e.target.style.color = 'white';\n                          e.target.style.borderColor = '#6366f1';\n                        }}\n                        onMouseLeave={e => {\n                          e.target.style.background = '#f3f4f6';\n                          e.target.style.color = '#111827';\n                          e.target.style.borderColor = '#e5e7eb';\n                        }}\n                      >\n                        {option.label || option.text}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          ))}\n          \n          {isTyping && (\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', color: '#6b7280' }}>\n              <Loader size={16} className=\"animate-spin\" />\n              <span style={{ fontSize: '0.875rem' }}>AI is thinking...</span>\n            </div>\n          )}\n        </div>\n\n        {/* Analysis Progress Indicator */}\n        {isAnalyzing && (\n          <div style={{\n            padding: '1.5rem',\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n            borderRadius: '0.75rem',\n            margin: '1rem 2rem',\n            color: 'white'\n          }}>\n            <div style={{ marginBottom: '1rem' }}>\n              <h3 style={{ fontSize: '1.125rem', fontWeight: '600', marginBottom: '0.5rem' }}>\n                🔍 Analyzing {organizationData.company}\n              </h3>\n              <p style={{ fontSize: '0.875rem', opacity: 0.9 }}>\n                Using AI agents to discover stakeholders and intelligence targets...\n              </p>\n            </div>\n            <div style={{ space: '0.75rem' }}>\n              {[\n                { key: 'organization', label: 'Analyzing Organization', icon: Building2 },\n                { key: 'stakeholders', label: 'Finding Competitors', icon: Users },\n                { key: 'sources', label: 'Discovering Topics', icon: Database },\n                { key: 'strategy', label: 'Building Strategy', icon: Brain }\n              ].map(({ key, label, icon: Icon }) => (\n                <div key={key} style={{ marginBottom: '0.75rem' }}>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '0.25rem' }}>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem' }}>\n                      <Icon size={16} />\n                      <span style={{ fontSize: '0.875rem' }}>{label}</span>\n                    </div>\n                    <span style={{ fontSize: '0.75rem' }}>{analysisProgress[key]}%</span>\n                  </div>\n                  <div style={{\n                    height: '6px',\n                    background: 'rgba(255, 255, 255, 0.2)',\n                    borderRadius: '3px',\n                    overflow: 'hidden'\n                  }}>\n                    <div style={{\n                      height: '100%',\n                      width: `${analysisProgress[key]}%`,\n                      background: 'white',\n                      borderRadius: '3px',\n                      transition: 'width 0.3s ease'\n                    }} />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Input */}\n        {currentStep !== 'analyzing' && (\n          <div style={{\n            padding: '1rem 2rem',\n            borderTop: '1px solid #e5e7eb',\n            background: 'white'\n          }}>\n            <form onSubmit={(e) => { e.preventDefault(); handleInputSubmit(); }} style={{\n              display: 'flex',\n              gap: '0.5rem'\n            }}>\n              {(currentStep === 'strategic_goals' || currentStep === 'priority_stakeholders') ? (\n                <textarea\n                  value={userInput}\n                  onChange={(e) => setUserInput(e.target.value)}\n                  placeholder={\n                    currentStep === 'strategic_goals' ? \"Enter your strategic goals...\" :\n                    currentStep === 'priority_stakeholders' ? \"List important stakeholders or type 'none'...\" :\n                    \"Type your response...\"\n                  }\n                  style={{\n                    flex: 1,\n                    padding: '0.75rem',\n                    border: '1px solid #e5e7eb',\n                    borderRadius: '0.5rem',\n                    fontSize: '0.875rem',\n                    resize: 'vertical',\n                    minHeight: '80px',\n                    fontFamily: 'inherit'\n                  }}\n                />\n              ) : (\n                <input\n                  type=\"text\"\n                  value={userInput}\n                  onChange={(e) => setUserInput(e.target.value)}\n                  placeholder={\n                    currentStep === 'organization_input' ? \"Enter organization name and URL...\" :\n                    currentStep === 'company_info' ? \"Enter company name and URL...\" :\n                    currentStep === 'confirm_stakeholders' ? \"Choose an option above...\" :\n                    \"Type your response...\"\n                  }\n                  style={{\n                    flex: 1,\n                    padding: '0.75rem',\n                    border: '1px solid #e5e7eb',\n                    borderRadius: '0.5rem',\n                    fontSize: '0.875rem'\n                  }}\n                />\n              )}\n              <button\n                type=\"submit\"\n                disabled={!userInput.trim()}\n                style={{\n                  padding: '0.75rem 1.5rem',\n                  background: userInput.trim() ? '#6366f1' : '#e5e7eb',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '0.5rem',\n                  cursor: userInput.trim() ? 'pointer' : 'not-allowed',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem',\n                  fontSize: '0.875rem',\n                  fontWeight: '500'\n                }}\n              >\n                Send\n                <ChevronRight size={16} />\n              </button>\n            </form>\n          </div>\n        )}\n\n        {/* Confirm button for stakeholders */}\n        {currentStep === 'review_stakeholders' && (\n          <div style={{\n            padding: '1rem 2rem',\n            borderTop: '1px solid #e5e7eb',\n            background: 'white'\n          }}>\n            <button\n              onClick={finalizeStrategy}\n              style={{\n                width: '100%',\n                padding: '0.75rem',\n                background: '#6366f1',\n                color: 'white',\n                border: 'none',\n                borderRadius: '0.5rem',\n                cursor: 'pointer',\n                fontSize: '0.875rem',\n                fontWeight: '600',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                gap: '0.5rem'\n              }}\n            >\n              <CheckCircle size={16} />\n              Confirm Stakeholders & Build Strategy\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Side Panel */}\n      <div style={{\n        width: '320px',\n        background: 'white',\n        borderLeft: '1px solid #e5e7eb',\n        padding: '1.5rem',\n        overflowY: 'auto'\n      }}>\n        <h3 style={{ margin: '0 0 1rem 0', fontSize: '1.125rem', fontWeight: '600', color: '#111827' }}>\n          Enhanced Features\n        </h3>\n        \n        <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n          <div style={{\n            padding: '1rem',\n            background: '#f0f9ff',\n            borderRadius: '0.5rem',\n            border: '1px solid #bfdbfe'\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\n              <Database size={16} style={{ color: '#3b82f6' }} />\n              <span style={{ fontWeight: '600', color: '#1e40af' }}>Pre-Indexed Database</span>\n            </div>\n            <p style={{ margin: 0, fontSize: '0.75rem', color: '#1e3a8a' }}>\n              Instant access to verified sources for major stakeholders like BlackRock, SEC, and leading media outlets.\n            </p>\n          </div>\n\n          <div style={{\n            padding: '1rem',\n            background: '#f0fdf4',\n            borderRadius: '0.5rem',\n            border: '1px solid #bbf7d0'\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\n              <Brain size={16} style={{ color: '#10b981' }} />\n              <span style={{ fontWeight: '600', color: '#166534' }}>Deep Research</span>\n            </div>\n            <p style={{ margin: 0, fontSize: '0.75rem', color: '#166534' }}>\n              AI-powered analysis of your organization to identify key stakeholders and their priorities.\n            </p>\n          </div>\n\n          <div style={{\n            padding: '1rem',\n            background: '#fef3c7',\n            borderRadius: '0.5rem',\n            border: '1px solid #fde68a'\n          }}>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\n              <Zap size={16} style={{ color: '#f59e0b' }} />\n              <span style={{ fontWeight: '600', color: '#92400e' }}>Auto Configuration</span>\n            </div>\n            <p style={{ margin: 0, fontSize: '0.75rem', color: '#92400e' }}>\n              Sources are automatically configured with RSS feeds, APIs, and social media accounts.\n            </p>\n          </div>\n        </div>\n\n        {/* Stats */}\n        {isAnalyzing && (\n          <div style={{ marginTop: '2rem' }}>\n            <h4 style={{ margin: '0 0 0.75rem 0', fontSize: '0.875rem', fontWeight: '600', color: '#6b7280' }}>\n              Research Progress\n            </h4>\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.75rem' }}>\n                <span>Sources Analyzed</span>\n                <span style={{ fontWeight: '600' }}>47</span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.75rem' }}>\n                <span>Stakeholders Found</span>\n                <span style={{ fontWeight: '600' }}>12</span>\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.75rem' }}>\n                <span>Pre-Indexed Matches</span>\n                <span style={{ fontWeight: '600' }}>4</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedAIStrategyAdvisor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}