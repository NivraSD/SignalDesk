{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/EnhancedSourceConfigurator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Plus, Sparkles, Globe, Shield, FileText, Trash2, CheckCircle, AlertCircle, Users, Twitter, Github, Youtube, Search, ChevronDown, ChevronRight, Newspaper, Building, DollarSign, Briefcase, Heart, Target, Database, Zap, RefreshCw, Check, X, Megaphone } from 'lucide-react';\nimport { StakeholderSourceDatabase, findPreIndexedStakeholder, getSourcesByType, getMonitoringTopics } from './EnhancedSourceDatabase';\nimport stakeholderIntelligenceService from '../../services/stakeholderIntelligenceService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EnhancedSourceConfigurator = ({\n  stakeholderStrategy,\n  onSourcesUpdate\n}) => {\n  _s();\n  var _stakeholderStrategy$2;\n  const [stakeholderSources, setStakeholderSources] = useState({});\n  const [expandedStakeholders, setExpandedStakeholders] = useState({});\n  const [loadingStates, setLoadingStates] = useState({});\n  const [preIndexedMatches, setPreIndexedMatches] = useState({});\n\n  // Initialize with enhanced sources\n  useEffect(() => {\n    var _stakeholderStrategy$;\n    console.log('🔍 EnhancedSourceConfigurator MOUNTED/UPDATED');\n    console.log('🔍 Received stakeholderStrategy:', stakeholderStrategy);\n    console.log('🔍 stakeholderGroups:', stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.stakeholderGroups);\n    console.log('🔍 stakeholderGroups length:', stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : (_stakeholderStrategy$ = stakeholderStrategy.stakeholderGroups) === null || _stakeholderStrategy$ === void 0 ? void 0 : _stakeholderStrategy$.length);\n    if (stakeholderStrategy !== null && stakeholderStrategy !== void 0 && stakeholderStrategy.stakeholderGroups && stakeholderStrategy.stakeholderGroups.length > 0) {\n      console.log('✅ Initializing sources for', stakeholderStrategy.stakeholderGroups.length, 'stakeholders');\n      console.log('✅ First stakeholder:', stakeholderStrategy.stakeholderGroups[0]);\n      initializeEnhancedSources();\n    } else {\n      console.warn('❌ No stakeholder groups found in strategy');\n      console.warn('❌ Full strategy object:', JSON.stringify(stakeholderStrategy, null, 2));\n    }\n  }, [stakeholderStrategy]);\n  const initializeEnhancedSources = async () => {\n    const newSources = {};\n    const newMatches = {};\n    const loading = {};\n    for (const stakeholder of stakeholderStrategy.stakeholderGroups) {\n      const stakeholderId = stakeholder.id || stakeholder.name;\n      loading[stakeholderId] = true;\n    }\n    setLoadingStates(loading);\n\n    // Process each stakeholder\n    for (const stakeholder of stakeholderStrategy.stakeholderGroups) {\n      const stakeholderId = stakeholder.id || stakeholder.name;\n      console.log('Processing stakeholder:', stakeholder.name, 'Type:', stakeholder.type);\n\n      // Check for pre-indexed match\n      const preIndexed = findPreIndexedStakeholder(stakeholder.name);\n      if (preIndexed && preIndexed.name.toLowerCase() === stakeholder.name.toLowerCase()) {\n        console.log('Found exact pre-indexed match for', stakeholder.name);\n        // Use pre-indexed sources\n        newMatches[stakeholderId] = preIndexed;\n        newSources[stakeholderId] = {\n          stakeholder: stakeholder,\n          sources: preIndexed.sources,\n          topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n          isPreIndexed: true,\n          matchConfidence: 0.95\n        };\n      } else {\n        console.log('No pre-indexed match for', stakeholder.name, '- discovering sources via API');\n\n        // Special handling for different target types\n        if (stakeholder.type === 'competitor' || stakeholder.type === 'Competitor') {\n          console.log('Generating competitor-specific sources for', stakeholder.name);\n\n          // For generic \"Competitors\" stakeholder, use a real company name for discovery\n          const searchName = stakeholder.name === 'Competitors' ? 'Microsoft' : stakeholder.name;\n          const searchStakeholder = {\n            ...stakeholder,\n            name: searchName\n          };\n\n          // First try to get sources from API\n          try {\n            const discoveredSources = await stakeholderIntelligenceService.discoverSourcesForStakeholder(searchStakeholder);\n            if (discoveredSources && discoveredSources.length > 0) {\n              console.log('API discovered', discoveredSources.length, 'sources for competitor', stakeholder.name);\n\n              // Use the discovered sources\n              const verifiedSources = discoveredSources.map((source, index) => ({\n                ...source,\n                id: `${stakeholderId}-api-${index}`,\n                category: source.type === 'regulatory' ? 'Regulatory' : source.type === 'research' ? 'Research' : source.type === 'news' ? 'News' : 'Web',\n                icon: getSourceIcon(source.type),\n                verified: source.verified !== false,\n                active: source.verified !== false,\n                priority: source.relevance >= 0.9 ? 'high' : source.relevance >= 0.7 ? 'medium' : 'low',\n                frequency: 'daily'\n              }));\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: verifiedSources,\n                topics: {\n                  topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'],\n                  source: 'stakeholder'\n                },\n                isPreIndexed: discoveredSources.some(s => s.source === 'database'),\n                matchConfidence: 0.9\n              };\n            } else {\n              // Fall back to generated sources\n              const competitorSources = await generateCompetitorSources(stakeholder);\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: competitorSources,\n                topics: {\n                  topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'],\n                  source: 'stakeholder'\n                },\n                isPreIndexed: false,\n                matchConfidence: 0.8\n              };\n            }\n          } catch (error) {\n            console.error('Error discovering sources for competitor', stakeholder.name, error);\n            // Fall back to generated sources\n            const competitorSources = await generateCompetitorSources(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: competitorSources,\n              topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'],\n              isPreIndexed: false,\n              matchConfidence: 0.8\n            };\n          }\n        } else if (stakeholder.type === 'topic' || stakeholder.type === 'Primary Topic' || stakeholder.type === 'Subtopic' || stakeholder.type === 'Key Source') {\n          console.log('Generating topic-specific sources for', stakeholder.name);\n\n          // For generic \"Industry Topics\" stakeholder, use a real topic name for discovery\n          const searchName = stakeholder.name === 'Industry Topics' ? 'Cloud Computing' : stakeholder.name;\n          const searchStakeholder = {\n            ...stakeholder,\n            name: searchName\n          };\n\n          // First try to get sources from API\n          try {\n            const discoveredSources = await stakeholderIntelligenceService.discoverSourcesForStakeholder(searchStakeholder);\n            if (discoveredSources && discoveredSources.length > 0) {\n              console.log('API discovered', discoveredSources.length, 'sources for topic', stakeholder.name);\n\n              // Use the discovered sources\n              const verifiedSources = discoveredSources.map((source, index) => ({\n                ...source,\n                id: `${stakeholderId}-api-${index}`,\n                category: source.type === 'regulatory' ? 'Regulatory' : source.type === 'research' ? 'Research' : source.type === 'news' ? 'News' : 'Web',\n                icon: getSourceIcon(source.type),\n                verified: source.verified !== false,\n                active: source.verified !== false,\n                priority: source.relevance >= 0.9 ? 'high' : source.relevance >= 0.7 ? 'medium' : 'low',\n                frequency: 'daily'\n              }));\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: verifiedSources,\n                topics: {\n                  topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'],\n                  source: 'stakeholder'\n                },\n                isPreIndexed: discoveredSources.some(s => s.source === 'database'),\n                matchConfidence: 0.9\n              };\n            } else {\n              // Fall back to generated sources\n              const topicSources = await generateTopicSources(stakeholder);\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: topicSources,\n                topics: {\n                  topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'],\n                  source: 'stakeholder'\n                },\n                isPreIndexed: false,\n                matchConfidence: 0.85\n              };\n            }\n          } catch (error) {\n            console.error('Error discovering sources for topic', stakeholder.name, error);\n            // Fall back to generated sources\n            const topicSources = await generateTopicSources(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: topicSources,\n              topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'],\n              isPreIndexed: false,\n              matchConfidence: 0.85\n            };\n          }\n        } else {\n          try {\n            // Try to discover sources using backend API\n            const discoveredSources = await stakeholderIntelligenceService.discoverStakeholderSources(stakeholder.name, stakeholder.type);\n            if (discoveredSources && discoveredSources.length > 0) {\n              console.log('API discovered', discoveredSources.length, 'sources for', stakeholder.name);\n\n              // Validate sources in parallel\n              const validationResults = await stakeholderIntelligenceService.batchValidateSources(discoveredSources.map(s => s.url).filter(url => url));\n\n              // Mark sources as verified based on validation\n              const verifiedSources = discoveredSources.map((source, index) => {\n                var _validationResults$in, _validationResults$in2;\n                return {\n                  ...source,\n                  id: `${stakeholderId}-api-${index}`,\n                  verified: ((_validationResults$in = validationResults[index]) === null || _validationResults$in === void 0 ? void 0 : _validationResults$in.valid) || false,\n                  active: ((_validationResults$in2 = validationResults[index]) === null || _validationResults$in2 === void 0 ? void 0 : _validationResults$in2.valid) || false\n                };\n              });\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: verifiedSources,\n                topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n                isPreIndexed: false,\n                matchConfidence: 0.7\n              };\n            } else {\n              // Fall back to basic recommendations\n              const recommendedSources = getBasicRecommendations(stakeholder);\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: recommendedSources,\n                topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n                isPreIndexed: false,\n                matchConfidence: 0\n              };\n            }\n          } catch (error) {\n            console.error('Error discovering sources for', stakeholder.name, error);\n            // Fall back to basic recommendations\n            const recommendedSources = getBasicRecommendations(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: recommendedSources,\n              topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n              isPreIndexed: false,\n              matchConfidence: 0\n            };\n          }\n        }\n      }\n      setLoadingStates(prev => ({\n        ...prev,\n        [stakeholderId]: false\n      }));\n    }\n    setStakeholderSources(newSources);\n    setPreIndexedMatches(newMatches);\n\n    // Notify parent of all active sources\n    if (onSourcesUpdate) {\n      const allActiveSources = Object.entries(newSources).flatMap(([stakeholderId, config]) => config.sources.filter(s => s.active).map(source => ({\n        ...source,\n        stakeholderId,\n        stakeholderName: config.stakeholder.name\n      })));\n      onSourcesUpdate(allActiveSources);\n    }\n  };\n\n  // Enhanced recommendations based on stakeholder type\n  const generateTopicSources = async stakeholder => {\n    const sources = [];\n    const topicName = stakeholder.name;\n    const keywords = stakeholder.keywords || [topicName];\n\n    // Google News - primary source for topics\n    sources.push({\n      id: `${stakeholder.id}-news-google`,\n      name: `${topicName} - Google News`,\n      type: 'news',\n      category: 'News',\n      icon: Newspaper,\n      url: `https://news.google.com/search?q=\"${encodeURIComponent(topicName)}\"`,\n      query: keywords.join(' OR '),\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'real-time'\n    });\n\n    // Reddit discussions\n    sources.push({\n      id: `${stakeholder.id}-reddit`,\n      name: `${topicName} - Reddit`,\n      type: 'social',\n      category: 'Community',\n      icon: Users,\n      url: `https://www.reddit.com/search/?q=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: true,\n      priority: 'medium',\n      frequency: 'daily'\n    });\n\n    // Twitter/X monitoring\n    sources.push({\n      id: `${stakeholder.id}-twitter`,\n      name: `${topicName} - Twitter/X`,\n      type: 'social',\n      category: 'Social Media',\n      icon: Twitter,\n      url: `https://twitter.com/search?q=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'real-time'\n    });\n\n    // Academic sources for research topics\n    if (stakeholder.type === 'Primary Topic' || stakeholder.name.toLowerCase().includes('research')) {\n      sources.push({\n        id: `${stakeholder.id}-scholar`,\n        name: `${topicName} - Academic Research`,\n        type: 'research',\n        category: 'Research',\n        icon: FileText,\n        url: `https://scholar.google.com/scholar?q=${encodeURIComponent(topicName)}`,\n        query: topicName,\n        verified: true,\n        active: true,\n        priority: 'medium',\n        frequency: 'weekly'\n      });\n    }\n\n    // Industry publications for Key Sources\n    if (stakeholder.type === 'Key Source') {\n      sources.push({\n        id: `${stakeholder.id}-publication`,\n        name: stakeholder.name,\n        type: 'publication',\n        category: 'Publication',\n        icon: Newspaper,\n        url: stakeholder.url || `https://www.google.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n        query: keywords.join(' OR '),\n        verified: false,\n        active: true,\n        priority: 'high',\n        frequency: 'daily'\n      });\n    }\n\n    // YouTube for video content\n    sources.push({\n      id: `${stakeholder.id}-youtube`,\n      name: `${topicName} - YouTube`,\n      type: 'video',\n      category: 'Video',\n      icon: Youtube,\n      url: `https://www.youtube.com/results?search_query=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: false,\n      // Off by default\n      priority: 'low',\n      frequency: 'weekly'\n    });\n    return sources;\n  };\n  const generateCompetitorSources = async stakeholder => {\n    const sources = [];\n    const competitorName = stakeholder.name;\n\n    // Core news sources for competitors\n    sources.push({\n      id: `${stakeholder.id}-news-1`,\n      name: `${competitorName} News`,\n      type: 'news',\n      category: 'News',\n      icon: Newspaper,\n      url: `https://news.google.com/search?q=\"${competitorName}\"`,\n      query: `\"${competitorName}\" OR \"${competitorName} company\"`,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'daily'\n    });\n\n    // Press releases\n    sources.push({\n      id: `${stakeholder.id}-pr-1`,\n      name: `${competitorName} Press Releases`,\n      type: 'press',\n      category: 'Press Releases',\n      icon: Megaphone,\n      url: `https://www.prnewswire.com/search/news/?keyword=${encodeURIComponent(competitorName)}`,\n      query: competitorName,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'daily'\n    });\n\n    // LinkedIn Company\n    sources.push({\n      id: `${stakeholder.id}-linkedin-1`,\n      name: `${competitorName} LinkedIn`,\n      type: 'social',\n      category: 'Social Media',\n      icon: Building,\n      url: `https://www.linkedin.com/company/${competitorName.toLowerCase().replace(/\\s+/g, '-')}`,\n      query: competitorName,\n      verified: false,\n      active: true,\n      priority: 'medium',\n      frequency: 'daily'\n    });\n\n    // Industry-specific sources\n    if (stakeholder.threatLevel && stakeholder.threatLevel > 80) {\n      // High-threat competitors get more intensive monitoring\n      sources.push({\n        id: `${stakeholder.id}-crunchbase-1`,\n        name: `${competitorName} Funding`,\n        type: 'funding',\n        category: 'Financial',\n        icon: DollarSign,\n        url: `https://www.crunchbase.com/organization/${competitorName.toLowerCase().replace(/\\s+/g, '-')}`,\n        query: competitorName,\n        verified: false,\n        active: true,\n        priority: 'high',\n        frequency: 'weekly'\n      });\n      sources.push({\n        id: `${stakeholder.id}-jobs-1`,\n        name: `${competitorName} Jobs`,\n        type: 'jobs',\n        category: 'Hiring',\n        icon: Briefcase,\n        url: `https://www.linkedin.com/jobs/search/?keywords=${encodeURIComponent(competitorName)}`,\n        query: `\"${competitorName}\" hiring`,\n        verified: false,\n        active: true,\n        priority: 'low',\n        frequency: 'weekly'\n      });\n    }\n    return sources;\n  };\n  const getBasicRecommendations = stakeholder => {\n    var _stakeholder$type;\n    const name = stakeholder.name.toLowerCase();\n    const type = ((_stakeholder$type = stakeholder.type) === null || _stakeholder$type === void 0 ? void 0 : _stakeholder$type.toLowerCase()) || '';\n    const prContext = stakeholder.prContext || '';\n    const recommendations = [];\n\n    // Always add Google News for the stakeholder\n    recommendations.push({\n      name: `Google News - ${stakeholder.name}`,\n      url: `https://news.google.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n      type: 'news',\n      extractionMethod: 'scraping',\n      active: true\n    });\n\n    // PR-specific source recommendations\n    if (prContext === 'earned_media' || name.includes('media outlets') || type === 'media') {\n      recommendations.push({\n        name: 'PR Newswire',\n        url: 'https://www.prnewswire.com/rss/news-releases-list.rss',\n        type: 'news',\n        extractionMethod: 'rss',\n        active: true\n      }, {\n        name: 'Business Wire',\n        url: 'https://feed.businesswire.com/rss/home/',\n        type: 'news',\n        extractionMethod: 'rss',\n        active: true\n      }, {\n        name: 'TechCrunch',\n        url: 'https://techcrunch.com/feed/',\n        type: 'news',\n        extractionMethod: 'rss',\n        active: true\n      });\n    } else if (prContext === 'media_relations' || name.includes('journalist') || type === 'influencer') {\n      recommendations.push({\n        name: 'HARO (Help a Reporter)',\n        url: 'https://www.helpareporter.com',\n        type: 'media',\n        extractionMethod: 'email',\n        active: true\n      }, {\n        name: 'Muck Rack Daily',\n        url: 'https://muckrack.com/daily',\n        type: 'media',\n        extractionMethod: 'scraping',\n        active: true\n      }, {\n        name: 'Journalist Twitter Lists',\n        url: 'https://twitter.com/lists',\n        type: 'social',\n        extractionMethod: 'api',\n        active: true\n      });\n    } else if (prContext === 'business_development' || name.includes('prospects') || type === 'prospect') {\n      recommendations.push({\n        name: 'Crunchbase Funding Rounds',\n        url: 'https://news.crunchbase.com/feed/',\n        type: 'financial',\n        extractionMethod: 'rss',\n        active: true\n      }, {\n        name: 'Product Hunt Launches',\n        url: 'https://www.producthunt.com/feed',\n        type: 'product',\n        extractionMethod: 'rss',\n        active: true\n      });\n    }\n\n    // For competing agencies and competitors\n    if (type.includes('competitive') || name.includes('compet') || prContext === 'competitive_analysis' || prContext === 'competitive_intel') {\n      recommendations.push({\n        name: 'PR Week Agency News',\n        url: 'https://www.prweek.com/us/agency',\n        type: 'industry',\n        extractionMethod: 'scraping',\n        active: true\n      }, {\n        name: 'Agency Spotter Updates',\n        url: 'https://www.agencyspotter.com/news',\n        type: 'industry',\n        extractionMethod: 'scraping',\n        active: false\n      });\n    }\n\n    // For client monitoring\n    if (type === 'client' || prContext === 'client_results') {\n      recommendations.push({\n        name: 'Client Brand Monitoring',\n        url: `https://www.google.com/alerts/feeds/client-${stakeholder.id}`,\n        type: 'alert',\n        extractionMethod: 'rss',\n        active: true\n      }, {\n        name: 'Client Social Media',\n        url: `https://twitter.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n        type: 'social',\n        extractionMethod: 'api',\n        active: true\n      });\n    }\n\n    // For journalists and influencers (additional sources)\n    if (name.includes('journalist') || name.includes('influencer')) {\n      recommendations.push({\n        name: 'HARO (Help a Reporter)',\n        url: 'https://www.helpareporter.com',\n        type: 'media',\n        extractionMethod: 'email',\n        active: true\n      }, {\n        name: 'Muck Rack Daily',\n        url: 'https://muckrack.com/daily',\n        type: 'media',\n        extractionMethod: 'scraping',\n        active: true\n      });\n    }\n\n    // For VCs and investors\n    if (name.includes('venture') || name.includes('investor') || type.includes('referral')) {\n      recommendations.push({\n        name: 'PitchBook VC News',\n        url: 'https://pitchbook.com/news',\n        type: 'financial',\n        extractionMethod: 'scraping',\n        active: true\n      }, {\n        name: 'Term Sheet Newsletter',\n        url: 'https://fortune.com/tag/term-sheet/',\n        type: 'financial',\n        extractionMethod: 'rss',\n        active: true\n      });\n    }\n\n    // Add topic-specific sources\n    if (stakeholder.monitoringTopics || stakeholder.topics) {\n      const topics = stakeholder.monitoringTopics || stakeholder.topics || [];\n      topics.slice(0, 2).forEach(topic => {\n        recommendations.push({\n          name: `${topic} News`,\n          url: `https://news.google.com/search?q=${encodeURIComponent(topic)}`,\n          type: 'news',\n          extractionMethod: 'scraping',\n          active: true\n        });\n      });\n    }\n\n    // Add Reddit monitoring for all stakeholders\n    recommendations.push({\n      name: `Reddit - ${stakeholder.name}`,\n      url: `https://www.reddit.com/search/?q=${encodeURIComponent(stakeholder.name)}`,\n      type: 'social',\n      extractionMethod: 'scraping',\n      active: false // Off by default\n    });\n\n    // Add LinkedIn monitoring for B2B stakeholders\n    if (type === 'prospect' || type === 'client' || type === 'competitive') {\n      recommendations.push({\n        name: `LinkedIn - ${stakeholder.name}`,\n        url: `https://www.linkedin.com/search/results/content/?keywords=${encodeURIComponent(stakeholder.name)}`,\n        type: 'professional',\n        extractionMethod: 'scraping',\n        active: true\n      });\n    }\n\n    // Default sources if we still don't have enough\n    if (recommendations.length < 3) {\n      recommendations.push({\n        name: 'Google Alerts',\n        url: `https://www.google.com/alerts#query:\"${stakeholder.name}\"`,\n        type: 'alert',\n        extractionMethod: 'email',\n        active: true\n      }, {\n        name: 'Bing News',\n        url: `https://www.bing.com/news/search?q=${encodeURIComponent(stakeholder.name)}`,\n        type: 'news',\n        extractionMethod: 'scraping',\n        active: false\n      });\n    }\n    return recommendations.map((source, idx) => ({\n      ...source,\n      id: `${stakeholder.id}-rec-${idx}`,\n      isRecommended: true\n    }));\n  };\n  const toggleStakeholder = stakeholderId => {\n    setExpandedStakeholders(prev => ({\n      ...prev,\n      [stakeholderId]: !prev[stakeholderId]\n    }));\n  };\n  const toggleSource = (stakeholderId, sourceId) => {\n    setStakeholderSources(prev => ({\n      ...prev,\n      [stakeholderId]: {\n        ...prev[stakeholderId],\n        sources: prev[stakeholderId].sources.map(s => s.id === sourceId ? {\n          ...s,\n          active: !s.active\n        } : s)\n      }\n    }));\n\n    // Update parent\n    updateParentSources();\n  };\n  const updateParentSources = () => {\n    if (onSourcesUpdate) {\n      const allActiveSources = Object.entries(stakeholderSources).flatMap(([stakeholderId, config]) => config.sources.filter(s => s.active).map(source => ({\n        ...source,\n        stakeholderId,\n        stakeholderName: config.stakeholder.name\n      })));\n      onSourcesUpdate(allActiveSources);\n    }\n  };\n  const getSourceIcon = type => {\n    const icons = {\n      web: Globe,\n      news: Newspaper,\n      social: Twitter,\n      regulatory: Shield,\n      financial: DollarSign,\n      industry: Building,\n      professional: Briefcase,\n      community: Heart\n    };\n    return icons[type] || Globe;\n  };\n  const getActiveSourceCount = stakeholderId => {\n    var _stakeholderSources$s, _stakeholderSources$s2;\n    return ((_stakeholderSources$s = stakeholderSources[stakeholderId]) === null || _stakeholderSources$s === void 0 ? void 0 : (_stakeholderSources$s2 = _stakeholderSources$s.sources) === null || _stakeholderSources$s2 === void 0 ? void 0 : _stakeholderSources$s2.filter(s => s.active).length) || 0;\n  };\n\n  // Show message if no stakeholder groups\n  if (!(stakeholderStrategy !== null && stakeholderStrategy !== void 0 && stakeholderStrategy.stakeholderGroups) || stakeholderStrategy.stakeholderGroups.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#f9fafb',\n        padding: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          maxWidth: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Target, {\n          size: 48,\n          style: {\n            color: '#9ca3af',\n            margin: '0 auto 1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            marginBottom: '0.5rem'\n          },\n          children: \"No Targets Configured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#6b7280',\n            marginBottom: '1.5rem'\n          },\n          children: \"Please complete the Intelligence Targets setup first to configure monitoring sources.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100%',\n      display: 'flex',\n      background: '#f9fafb',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '2rem',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: '1200px',\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: '0 0 0.5rem 0',\n              fontSize: '1.5rem',\n              fontWeight: '600',\n              color: '#111827'\n            },\n            children: \"Enhanced Source Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              color: '#6b7280'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Database, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Powered by pre-indexed stakeholder database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '1rem'\n          },\n          children: stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : (_stakeholderStrategy$2 = stakeholderStrategy.stakeholderGroups) === null || _stakeholderStrategy$2 === void 0 ? void 0 : _stakeholderStrategy$2.map(stakeholder => {\n            var _config$sources;\n            const stakeholderId = stakeholder.id || stakeholder.name;\n            const isExpanded = expandedStakeholders[stakeholderId];\n            const activeCount = getActiveSourceCount(stakeholderId);\n            const config = stakeholderSources[stakeholderId];\n            const isLoading = loadingStates[stakeholderId];\n            const preIndexedMatch = preIndexedMatches[stakeholderId];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'white',\n                borderRadius: '0.75rem',\n                boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n                overflow: 'hidden',\n                border: preIndexedMatch ? '2px solid #6366f1' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => toggleStakeholder(stakeholderId),\n                style: {\n                  padding: '1.25rem',\n                  cursor: 'pointer',\n                  borderBottom: isExpanded ? '1px solid #e5e7eb' : 'none',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '0.75rem'\n                  },\n                  children: [isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 37\n                  }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      style: {\n                        margin: 0,\n                        fontSize: '1.125rem',\n                        fontWeight: '600',\n                        color: '#111827'\n                      },\n                      children: stakeholder.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 816,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        margin: '0.25rem 0 0 0',\n                        fontSize: '0.875rem',\n                        color: '#6b7280'\n                      },\n                      children: [activeCount, \" active source\", activeCount !== 1 ? 's' : '', (config === null || config === void 0 ? void 0 : (_config$sources = config.sources) === null || _config$sources === void 0 ? void 0 : _config$sources.length) > 0 && ` (${config.sources.length} available)`]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 815,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '1rem'\n                  },\n                  children: [preIndexedMatch && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '0.25rem 0.75rem',\n                      background: '#ede9fe',\n                      color: '#6d28d9',\n                      borderRadius: '1rem',\n                      fontSize: '0.75rem',\n                      fontWeight: '500',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.25rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Database, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 839,\n                      columnNumber: 27\n                    }, this), \"Pre-indexed Match\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 25\n                  }, this), isLoading ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n                    size: 16,\n                    className: \"animate-spin\",\n                    style: {\n                      color: '#6b7280'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '0.25rem 0.75rem',\n                      background: activeCount > 0 ? '#dcfce7' : '#f3f4f6',\n                      color: activeCount > 0 ? '#166534' : '#6b7280',\n                      borderRadius: '1rem',\n                      fontSize: '0.75rem',\n                      fontWeight: '500'\n                    },\n                    children: activeCount > 0 ? 'Monitoring Active' : 'Not Configured'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 847,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 19\n              }, this), isExpanded && config && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '1.25rem'\n                },\n                children: [preIndexedMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginBottom: '1.5rem',\n                    padding: '1rem',\n                    background: '#f0f9ff',\n                    borderRadius: '0.5rem',\n                    border: '1px solid #bfdbfe'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      marginBottom: '0.5rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Zap, {\n                      size: 16,\n                      style: {\n                        color: '#3b82f6'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 874,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: '600',\n                        color: '#1e40af'\n                      },\n                      children: [\"Exact Match Found: \", preIndexedMatch.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 875,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      margin: 0,\n                      fontSize: '0.875rem',\n                      color: '#3730a3'\n                    },\n                    children: [\"We've pre-configured \", config.sources.length, \" verified sources for this stakeholder, including official channels, regulatory filings, and social media accounts.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 879,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 25\n                }, this), config.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      margin: '0 0 0.75rem 0',\n                      fontSize: '0.875rem',\n                      fontWeight: '600',\n                      color: '#374151',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                      size: 16,\n                      style: {\n                        color: '#6366f1'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 898,\n                      columnNumber: 29\n                    }, this), \"Available Sources\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 889,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'grid',\n                      gridTemplateColumns: '1fr 1fr',\n                      gap: '0.5rem'\n                    },\n                    children: config.sources.map(source => {\n                      const Icon = getSourceIcon(source.type);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          padding: '0.75rem',\n                          background: source.active ? '#f0f9ff' : '#f9fafb',\n                          border: `1px solid ${source.active ? '#bfdbfe' : '#e5e7eb'}`,\n                          borderRadius: '0.5rem',\n                          display: 'flex',\n                          alignItems: 'flex-start',\n                          gap: '0.75rem',\n                          cursor: 'pointer',\n                          transition: 'all 0.2s'\n                        },\n                        onClick: () => toggleSource(stakeholderId, source.id),\n                        children: [/*#__PURE__*/_jsxDEV(Icon, {\n                          size: 18,\n                          style: {\n                            color: source.active ? '#3b82f6' : '#9ca3af',\n                            marginTop: '2px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 921,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            flex: 1\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontWeight: '500',\n                              fontSize: '0.875rem',\n                              color: source.active ? '#1e40af' : '#374151'\n                            },\n                            children: source.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 927,\n                            columnNumber: 37\n                          }, this), source.url && /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.75rem',\n                              color: '#6b7280',\n                              marginTop: '2px',\n                              wordBreak: 'break-all'\n                            },\n                            children: source.url\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 935,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              fontSize: '0.75rem',\n                              color: '#9ca3af',\n                              marginTop: '4px',\n                              display: 'flex',\n                              gap: '0.5rem'\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: source.extractionMethod\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 951,\n                              columnNumber: 39\n                            }, this), source.rss && /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: \"\\u2022 RSS\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 952,\n                              columnNumber: 54\n                            }, this), source.isPreIndexed && /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: \"\\u2022 Verified\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 953,\n                              columnNumber: 63\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 944,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 926,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            width: '20px',\n                            height: '20px',\n                            borderRadius: '50%',\n                            border: `2px solid ${source.active ? '#3b82f6' : '#d1d5db'}`,\n                            background: source.active ? '#3b82f6' : 'white',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                          },\n                          children: source.active && /*#__PURE__*/_jsxDEV(Check, {\n                            size: 12,\n                            color: \"white\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 967,\n                            columnNumber: 55\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 957,\n                          columnNumber: 35\n                        }, this)]\n                      }, source.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 906,\n                        columnNumber: 33\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 902,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 25\n                }, this), config.topics && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: '1.5rem',\n                    paddingTop: '1.5rem',\n                    borderTop: '1px solid #e5e7eb'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      margin: '0 0 0.75rem 0',\n                      fontSize: '0.875rem',\n                      fontWeight: '600',\n                      color: '#374151',\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Target, {\n                      size: 16,\n                      style: {\n                        color: '#6366f1'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 992,\n                      columnNumber: 29\n                    }, this), \"Recommended Monitoring Topics\", config.topics && config.topics.source === 'pre-indexed database' && /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: '0.75rem',\n                        color: '#6366f1',\n                        fontWeight: 'normal',\n                        marginLeft: '0.5rem'\n                      },\n                      children: \"(from database)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 995,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: '0.5rem'\n                    },\n                    children: (config.topics && config.topics.topics ? config.topics.topics : Array.isArray(config.topics) ? config.topics : []).map((topic, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        padding: '0.375rem 0.75rem',\n                        background: '#ede9fe',\n                        color: '#6d28d9',\n                        borderRadius: '1rem',\n                        fontSize: '0.75rem',\n                        fontWeight: '500'\n                      },\n                      children: topic\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1008,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1006,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 978,\n                  columnNumber: 25\n                }, this), config.sources.filter(s => !s.active).length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setStakeholderSources(prev => ({\n                      ...prev,\n                      [stakeholderId]: {\n                        ...prev[stakeholderId],\n                        sources: prev[stakeholderId].sources.map(s => ({\n                          ...s,\n                          active: true\n                        }))\n                      }\n                    }));\n                    updateParentSources();\n                  },\n                  style: {\n                    width: '100%',\n                    marginTop: '1rem',\n                    padding: '0.75rem',\n                    background: '#6366f1',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '0.5rem',\n                    fontWeight: '500',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: '0.5rem'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Zap, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1055,\n                    columnNumber: 27\n                  }, this), \"Enable All Sources\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 21\n              }, this)]\n            }, stakeholderId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 756,\n    columnNumber: 5\n  }, this);\n};\n_s(EnhancedSourceConfigurator, \"XK8V8FBfe8LgBTLyrd3H3iAeHuQ=\");\n_c = EnhancedSourceConfigurator;\nexport default EnhancedSourceConfigurator;\nvar _c;\n$RefreshReg$(_c, \"EnhancedSourceConfigurator\");","map":{"version":3,"names":["React","useState","useEffect","Plus","Sparkles","Globe","Shield","FileText","Trash2","CheckCircle","AlertCircle","Users","Twitter","Github","Youtube","Search","ChevronDown","ChevronRight","Newspaper","Building","DollarSign","Briefcase","Heart","Target","Database","Zap","RefreshCw","Check","X","Megaphone","StakeholderSourceDatabase","findPreIndexedStakeholder","getSourcesByType","getMonitoringTopics","stakeholderIntelligenceService","jsxDEV","_jsxDEV","EnhancedSourceConfigurator","stakeholderStrategy","onSourcesUpdate","_s","_stakeholderStrategy$2","stakeholderSources","setStakeholderSources","expandedStakeholders","setExpandedStakeholders","loadingStates","setLoadingStates","preIndexedMatches","setPreIndexedMatches","_stakeholderStrategy$","console","log","stakeholderGroups","length","initializeEnhancedSources","warn","JSON","stringify","newSources","newMatches","loading","stakeholder","stakeholderId","id","name","type","preIndexed","toLowerCase","sources","topics","industry","isPreIndexed","matchConfidence","searchName","searchStakeholder","discoveredSources","discoverSourcesForStakeholder","verifiedSources","map","source","index","category","icon","getSourceIcon","verified","active","priority","relevance","frequency","some","s","competitorSources","generateCompetitorSources","error","topicSources","generateTopicSources","discoverStakeholderSources","validationResults","batchValidateSources","url","filter","_validationResults$in","_validationResults$in2","valid","recommendedSources","getBasicRecommendations","prev","allActiveSources","Object","entries","flatMap","config","stakeholderName","topicName","keywords","push","encodeURIComponent","query","join","includes","competitorName","replace","threatLevel","_stakeholder$type","prContext","recommendations","extractionMethod","monitoringTopics","slice","forEach","topic","idx","isRecommended","toggleStakeholder","toggleSource","sourceId","updateParentSources","icons","web","news","social","regulatory","financial","professional","community","getActiveSourceCount","_stakeholderSources$s","_stakeholderSources$s2","style","height","display","alignItems","justifyContent","background","padding","children","textAlign","maxWidth","size","color","margin","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","marginBottom","overflow","flex","gap","flexDirection","_config$sources","isExpanded","activeCount","isLoading","preIndexedMatch","borderRadius","boxShadow","border","onClick","cursor","borderBottom","className","gridTemplateColumns","Icon","transition","marginTop","wordBreak","rss","width","paddingTop","borderTop","marginLeft","flexWrap","Array","isArray","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/EnhancedSourceConfigurator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Plus, Sparkles, Globe, Shield, FileText, \n  Trash2, CheckCircle, AlertCircle, Users,\n  Twitter, Github, Youtube, Search, ChevronDown, ChevronRight,\n  Newspaper, Building, DollarSign, Briefcase, Heart, Target,\n  Database, Zap, RefreshCw, Check, X, Megaphone\n} from 'lucide-react';\nimport { StakeholderSourceDatabase, findPreIndexedStakeholder, getSourcesByType, getMonitoringTopics } from './EnhancedSourceDatabase';\nimport stakeholderIntelligenceService from '../../services/stakeholderIntelligenceService';\n\nconst EnhancedSourceConfigurator = ({ stakeholderStrategy, onSourcesUpdate }) => {\n  const [stakeholderSources, setStakeholderSources] = useState({});\n  const [expandedStakeholders, setExpandedStakeholders] = useState({});\n  const [loadingStates, setLoadingStates] = useState({});\n  const [preIndexedMatches, setPreIndexedMatches] = useState({});\n\n  // Initialize with enhanced sources\n  useEffect(() => {\n    console.log('🔍 EnhancedSourceConfigurator MOUNTED/UPDATED');\n    console.log('🔍 Received stakeholderStrategy:', stakeholderStrategy);\n    console.log('🔍 stakeholderGroups:', stakeholderStrategy?.stakeholderGroups);\n    console.log('🔍 stakeholderGroups length:', stakeholderStrategy?.stakeholderGroups?.length);\n    \n    if (stakeholderStrategy?.stakeholderGroups && stakeholderStrategy.stakeholderGroups.length > 0) {\n      console.log('✅ Initializing sources for', stakeholderStrategy.stakeholderGroups.length, 'stakeholders');\n      console.log('✅ First stakeholder:', stakeholderStrategy.stakeholderGroups[0]);\n      initializeEnhancedSources();\n    } else {\n      console.warn('❌ No stakeholder groups found in strategy');\n      console.warn('❌ Full strategy object:', JSON.stringify(stakeholderStrategy, null, 2));\n    }\n  }, [stakeholderStrategy]);\n\n  const initializeEnhancedSources = async () => {\n    const newSources = {};\n    const newMatches = {};\n    const loading = {};\n\n    for (const stakeholder of stakeholderStrategy.stakeholderGroups) {\n      const stakeholderId = stakeholder.id || stakeholder.name;\n      loading[stakeholderId] = true;\n    }\n\n    setLoadingStates(loading);\n\n    // Process each stakeholder\n    for (const stakeholder of stakeholderStrategy.stakeholderGroups) {\n      const stakeholderId = stakeholder.id || stakeholder.name;\n      console.log('Processing stakeholder:', stakeholder.name, 'Type:', stakeholder.type);\n      \n      // Check for pre-indexed match\n      const preIndexed = findPreIndexedStakeholder(stakeholder.name);\n      \n      if (preIndexed && preIndexed.name.toLowerCase() === stakeholder.name.toLowerCase()) {\n        console.log('Found exact pre-indexed match for', stakeholder.name);\n        // Use pre-indexed sources\n        newMatches[stakeholderId] = preIndexed;\n        newSources[stakeholderId] = {\n          stakeholder: stakeholder,\n          sources: preIndexed.sources,\n          topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n          isPreIndexed: true,\n          matchConfidence: 0.95\n        };\n      } else {\n        console.log('No pre-indexed match for', stakeholder.name, '- discovering sources via API');\n        \n        // Special handling for different target types\n        if (stakeholder.type === 'competitor' || stakeholder.type === 'Competitor') {\n          console.log('Generating competitor-specific sources for', stakeholder.name);\n          \n          // For generic \"Competitors\" stakeholder, use a real company name for discovery\n          const searchName = stakeholder.name === 'Competitors' ? 'Microsoft' : stakeholder.name;\n          const searchStakeholder = { ...stakeholder, name: searchName };\n          \n          // First try to get sources from API\n          try {\n            const discoveredSources = await stakeholderIntelligenceService.discoverSourcesForStakeholder(searchStakeholder);\n            \n            if (discoveredSources && discoveredSources.length > 0) {\n              console.log('API discovered', discoveredSources.length, 'sources for competitor', stakeholder.name);\n              \n              // Use the discovered sources\n              const verifiedSources = discoveredSources.map((source, index) => ({\n                ...source,\n                id: `${stakeholderId}-api-${index}`,\n                category: source.type === 'regulatory' ? 'Regulatory' : \n                          source.type === 'research' ? 'Research' : \n                          source.type === 'news' ? 'News' : 'Web',\n                icon: getSourceIcon(source.type),\n                verified: source.verified !== false,\n                active: source.verified !== false,\n                priority: source.relevance >= 0.9 ? 'high' : \n                         source.relevance >= 0.7 ? 'medium' : 'low',\n                frequency: 'daily'\n              }));\n              \n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: verifiedSources,\n                topics: { topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'], source: 'stakeholder' },\n                isPreIndexed: discoveredSources.some(s => s.source === 'database'),\n                matchConfidence: 0.9\n              };\n            } else {\n              // Fall back to generated sources\n              const competitorSources = await generateCompetitorSources(stakeholder);\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: competitorSources,\n                topics: { topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'], source: 'stakeholder' },\n                isPreIndexed: false,\n                matchConfidence: 0.8\n              };\n            }\n          } catch (error) {\n            console.error('Error discovering sources for competitor', stakeholder.name, error);\n            // Fall back to generated sources\n            const competitorSources = await generateCompetitorSources(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: competitorSources,\n              topics: stakeholder.topics || ['product launches', 'funding', 'partnerships', 'executive changes'],\n              isPreIndexed: false,\n              matchConfidence: 0.8\n            };\n          }\n        } else if (stakeholder.type === 'topic' || stakeholder.type === 'Primary Topic' || stakeholder.type === 'Subtopic' || stakeholder.type === 'Key Source') {\n          console.log('Generating topic-specific sources for', stakeholder.name);\n          \n          // For generic \"Industry Topics\" stakeholder, use a real topic name for discovery\n          const searchName = stakeholder.name === 'Industry Topics' ? 'Cloud Computing' : stakeholder.name;\n          const searchStakeholder = { ...stakeholder, name: searchName };\n          \n          // First try to get sources from API\n          try {\n            const discoveredSources = await stakeholderIntelligenceService.discoverSourcesForStakeholder(searchStakeholder);\n            \n            if (discoveredSources && discoveredSources.length > 0) {\n              console.log('API discovered', discoveredSources.length, 'sources for topic', stakeholder.name);\n              \n              // Use the discovered sources\n              const verifiedSources = discoveredSources.map((source, index) => ({\n                ...source,\n                id: `${stakeholderId}-api-${index}`,\n                category: source.type === 'regulatory' ? 'Regulatory' : \n                          source.type === 'research' ? 'Research' : \n                          source.type === 'news' ? 'News' : 'Web',\n                icon: getSourceIcon(source.type),\n                verified: source.verified !== false,\n                active: source.verified !== false,\n                priority: source.relevance >= 0.9 ? 'high' : \n                         source.relevance >= 0.7 ? 'medium' : 'low',\n                frequency: 'daily'\n              }));\n              \n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: verifiedSources,\n                topics: { topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'], source: 'stakeholder' },\n                isPreIndexed: discoveredSources.some(s => s.source === 'database'),\n                matchConfidence: 0.9\n              };\n            } else {\n              // Fall back to generated sources\n              const topicSources = await generateTopicSources(stakeholder);\n              newSources[stakeholderId] = {\n                stakeholder: stakeholder,\n                sources: topicSources,\n                topics: { topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'], source: 'stakeholder' },\n                isPreIndexed: false,\n                matchConfidence: 0.85\n              };\n            }\n          } catch (error) {\n            console.error('Error discovering sources for topic', stakeholder.name, error);\n            // Fall back to generated sources\n            const topicSources = await generateTopicSources(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: topicSources,\n              topics: stakeholder.topics || ['breaking news', 'analysis', 'research', 'expert opinions'],\n              isPreIndexed: false,\n              matchConfidence: 0.85\n            };\n          }\n        } else {\n          try {\n            // Try to discover sources using backend API\n            const discoveredSources = await stakeholderIntelligenceService.discoverStakeholderSources(\n              stakeholder.name,\n              stakeholder.type\n            );\n          \n          if (discoveredSources && discoveredSources.length > 0) {\n            console.log('API discovered', discoveredSources.length, 'sources for', stakeholder.name);\n            \n            // Validate sources in parallel\n            const validationResults = await stakeholderIntelligenceService.batchValidateSources(\n              discoveredSources.map(s => s.url).filter(url => url)\n            );\n            \n            // Mark sources as verified based on validation\n            const verifiedSources = discoveredSources.map((source, index) => ({\n              ...source,\n              id: `${stakeholderId}-api-${index}`,\n              verified: validationResults[index]?.valid || false,\n              active: validationResults[index]?.valid || false\n            }));\n            \n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: verifiedSources,\n              topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n              isPreIndexed: false,\n              matchConfidence: 0.7\n            };\n          } else {\n            // Fall back to basic recommendations\n            const recommendedSources = getBasicRecommendations(stakeholder);\n            newSources[stakeholderId] = {\n              stakeholder: stakeholder,\n              sources: recommendedSources,\n              topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n              isPreIndexed: false,\n              matchConfidence: 0\n            };\n          }\n        } catch (error) {\n          console.error('Error discovering sources for', stakeholder.name, error);\n          // Fall back to basic recommendations\n          const recommendedSources = getBasicRecommendations(stakeholder);\n          newSources[stakeholderId] = {\n            stakeholder: stakeholder,\n            sources: recommendedSources,\n            topics: getMonitoringTopics(stakeholder, stakeholderStrategy.industry),\n            isPreIndexed: false,\n            matchConfidence: 0\n          };\n        }\n      }\n      }\n      \n      setLoadingStates(prev => ({ ...prev, [stakeholderId]: false }));\n    }\n\n    setStakeholderSources(newSources);\n    setPreIndexedMatches(newMatches);\n    \n    // Notify parent of all active sources\n    if (onSourcesUpdate) {\n      const allActiveSources = Object.entries(newSources).flatMap(([stakeholderId, config]) =>\n        config.sources.filter(s => s.active).map(source => ({\n          ...source,\n          stakeholderId,\n          stakeholderName: config.stakeholder.name\n        }))\n      );\n      onSourcesUpdate(allActiveSources);\n    }\n  };\n\n  // Enhanced recommendations based on stakeholder type\n  const generateTopicSources = async (stakeholder) => {\n    const sources = [];\n    const topicName = stakeholder.name;\n    const keywords = stakeholder.keywords || [topicName];\n    \n    // Google News - primary source for topics\n    sources.push({\n      id: `${stakeholder.id}-news-google`,\n      name: `${topicName} - Google News`,\n      type: 'news',\n      category: 'News',\n      icon: Newspaper,\n      url: `https://news.google.com/search?q=\"${encodeURIComponent(topicName)}\"`,\n      query: keywords.join(' OR '),\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'real-time'\n    });\n    \n    // Reddit discussions\n    sources.push({\n      id: `${stakeholder.id}-reddit`,\n      name: `${topicName} - Reddit`,\n      type: 'social',\n      category: 'Community',\n      icon: Users,\n      url: `https://www.reddit.com/search/?q=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: true,\n      priority: 'medium',\n      frequency: 'daily'\n    });\n    \n    // Twitter/X monitoring\n    sources.push({\n      id: `${stakeholder.id}-twitter`,\n      name: `${topicName} - Twitter/X`,\n      type: 'social',\n      category: 'Social Media',\n      icon: Twitter,\n      url: `https://twitter.com/search?q=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'real-time'\n    });\n    \n    // Academic sources for research topics\n    if (stakeholder.type === 'Primary Topic' || stakeholder.name.toLowerCase().includes('research')) {\n      sources.push({\n        id: `${stakeholder.id}-scholar`,\n        name: `${topicName} - Academic Research`,\n        type: 'research',\n        category: 'Research',\n        icon: FileText,\n        url: `https://scholar.google.com/scholar?q=${encodeURIComponent(topicName)}`,\n        query: topicName,\n        verified: true,\n        active: true,\n        priority: 'medium',\n        frequency: 'weekly'\n      });\n    }\n    \n    // Industry publications for Key Sources\n    if (stakeholder.type === 'Key Source') {\n      sources.push({\n        id: `${stakeholder.id}-publication`,\n        name: stakeholder.name,\n        type: 'publication',\n        category: 'Publication',\n        icon: Newspaper,\n        url: stakeholder.url || `https://www.google.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n        query: keywords.join(' OR '),\n        verified: false,\n        active: true,\n        priority: 'high',\n        frequency: 'daily'\n      });\n    }\n    \n    // YouTube for video content\n    sources.push({\n      id: `${stakeholder.id}-youtube`,\n      name: `${topicName} - YouTube`,\n      type: 'video',\n      category: 'Video',\n      icon: Youtube,\n      url: `https://www.youtube.com/results?search_query=${encodeURIComponent(topicName)}`,\n      query: topicName,\n      verified: true,\n      active: false, // Off by default\n      priority: 'low',\n      frequency: 'weekly'\n    });\n    \n    return sources;\n  };\n\n  const generateCompetitorSources = async (stakeholder) => {\n    const sources = [];\n    const competitorName = stakeholder.name;\n    \n    // Core news sources for competitors\n    sources.push({\n      id: `${stakeholder.id}-news-1`,\n      name: `${competitorName} News`,\n      type: 'news',\n      category: 'News',\n      icon: Newspaper,\n      url: `https://news.google.com/search?q=\"${competitorName}\"`,\n      query: `\"${competitorName}\" OR \"${competitorName} company\"`,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'daily'\n    });\n    \n    // Press releases\n    sources.push({\n      id: `${stakeholder.id}-pr-1`,\n      name: `${competitorName} Press Releases`,\n      type: 'press',\n      category: 'Press Releases',\n      icon: Megaphone,\n      url: `https://www.prnewswire.com/search/news/?keyword=${encodeURIComponent(competitorName)}`,\n      query: competitorName,\n      verified: true,\n      active: true,\n      priority: 'high',\n      frequency: 'daily'\n    });\n    \n    // LinkedIn Company\n    sources.push({\n      id: `${stakeholder.id}-linkedin-1`,\n      name: `${competitorName} LinkedIn`,\n      type: 'social',\n      category: 'Social Media',\n      icon: Building,\n      url: `https://www.linkedin.com/company/${competitorName.toLowerCase().replace(/\\s+/g, '-')}`,\n      query: competitorName,\n      verified: false,\n      active: true,\n      priority: 'medium',\n      frequency: 'daily'\n    });\n    \n    // Industry-specific sources\n    if (stakeholder.threatLevel && stakeholder.threatLevel > 80) {\n      // High-threat competitors get more intensive monitoring\n      sources.push({\n        id: `${stakeholder.id}-crunchbase-1`,\n        name: `${competitorName} Funding`,\n        type: 'funding',\n        category: 'Financial',\n        icon: DollarSign,\n        url: `https://www.crunchbase.com/organization/${competitorName.toLowerCase().replace(/\\s+/g, '-')}`,\n        query: competitorName,\n        verified: false,\n        active: true,\n        priority: 'high',\n        frequency: 'weekly'\n      });\n      \n      sources.push({\n        id: `${stakeholder.id}-jobs-1`,\n        name: `${competitorName} Jobs`,\n        type: 'jobs',\n        category: 'Hiring',\n        icon: Briefcase,\n        url: `https://www.linkedin.com/jobs/search/?keywords=${encodeURIComponent(competitorName)}`,\n        query: `\"${competitorName}\" hiring`,\n        verified: false,\n        active: true,\n        priority: 'low',\n        frequency: 'weekly'\n      });\n    }\n    \n    return sources;\n  };\n\n  const getBasicRecommendations = (stakeholder) => {\n    const name = stakeholder.name.toLowerCase();\n    const type = stakeholder.type?.toLowerCase() || '';\n    const prContext = stakeholder.prContext || '';\n    const recommendations = [];\n    \n    // Always add Google News for the stakeholder\n    recommendations.push({\n      name: `Google News - ${stakeholder.name}`,\n      url: `https://news.google.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n      type: 'news',\n      extractionMethod: 'scraping',\n      active: true\n    });\n    \n    // PR-specific source recommendations\n    if (prContext === 'earned_media' || name.includes('media outlets') || type === 'media') {\n      recommendations.push(\n        { \n          name: 'PR Newswire', \n          url: 'https://www.prnewswire.com/rss/news-releases-list.rss', \n          type: 'news', \n          extractionMethod: 'rss',\n          active: true \n        },\n        { \n          name: 'Business Wire', \n          url: 'https://feed.businesswire.com/rss/home/', \n          type: 'news', \n          extractionMethod: 'rss',\n          active: true \n        },\n        { \n          name: 'TechCrunch', \n          url: 'https://techcrunch.com/feed/', \n          type: 'news', \n          extractionMethod: 'rss',\n          active: true \n        }\n      );\n    } else if (prContext === 'media_relations' || name.includes('journalist') || type === 'influencer') {\n      recommendations.push(\n        { \n          name: 'HARO (Help a Reporter)', \n          url: 'https://www.helpareporter.com', \n          type: 'media', \n          extractionMethod: 'email',\n          active: true \n        },\n        { \n          name: 'Muck Rack Daily', \n          url: 'https://muckrack.com/daily', \n          type: 'media', \n          extractionMethod: 'scraping',\n          active: true \n        },\n        { \n          name: 'Journalist Twitter Lists', \n          url: 'https://twitter.com/lists', \n          type: 'social', \n          extractionMethod: 'api',\n          active: true \n        }\n      );\n    } else if (prContext === 'business_development' || name.includes('prospects') || type === 'prospect') {\n      recommendations.push(\n        { \n          name: 'Crunchbase Funding Rounds', \n          url: 'https://news.crunchbase.com/feed/', \n          type: 'financial', \n          extractionMethod: 'rss',\n          active: true \n        },\n        {\n          name: 'Product Hunt Launches',\n          url: 'https://www.producthunt.com/feed',\n          type: 'product',\n          extractionMethod: 'rss',\n          active: true\n        }\n      );\n    }\n    \n    // For competing agencies and competitors\n    if (type.includes('competitive') || name.includes('compet') || prContext === 'competitive_analysis' || prContext === 'competitive_intel') {\n      recommendations.push(\n        { \n          name: 'PR Week Agency News', \n          url: 'https://www.prweek.com/us/agency', \n          type: 'industry', \n          extractionMethod: 'scraping',\n          active: true \n        },\n        { \n          name: 'Agency Spotter Updates', \n          url: 'https://www.agencyspotter.com/news', \n          type: 'industry', \n          extractionMethod: 'scraping',\n          active: false \n        }\n      );\n    }\n    \n    // For client monitoring\n    if (type === 'client' || prContext === 'client_results') {\n      recommendations.push(\n        {\n          name: 'Client Brand Monitoring',\n          url: `https://www.google.com/alerts/feeds/client-${stakeholder.id}`,\n          type: 'alert',\n          extractionMethod: 'rss',\n          active: true\n        },\n        {\n          name: 'Client Social Media',\n          url: `https://twitter.com/search?q=${encodeURIComponent(stakeholder.name)}`,\n          type: 'social',\n          extractionMethod: 'api',\n          active: true\n        }\n      );\n    }\n    \n    // For journalists and influencers (additional sources)\n    if (name.includes('journalist') || name.includes('influencer')) {\n      recommendations.push(\n        { \n          name: 'HARO (Help a Reporter)', \n          url: 'https://www.helpareporter.com', \n          type: 'media', \n          extractionMethod: 'email',\n          active: true \n        },\n        { \n          name: 'Muck Rack Daily', \n          url: 'https://muckrack.com/daily', \n          type: 'media', \n          extractionMethod: 'scraping',\n          active: true \n        }\n      );\n    }\n    \n    // For VCs and investors\n    if (name.includes('venture') || name.includes('investor') || type.includes('referral')) {\n      recommendations.push(\n        { \n          name: 'PitchBook VC News', \n          url: 'https://pitchbook.com/news', \n          type: 'financial', \n          extractionMethod: 'scraping',\n          active: true \n        },\n        { \n          name: 'Term Sheet Newsletter', \n          url: 'https://fortune.com/tag/term-sheet/', \n          type: 'financial', \n          extractionMethod: 'rss',\n          active: true \n        }\n      );\n    }\n    \n    // Add topic-specific sources\n    if (stakeholder.monitoringTopics || stakeholder.topics) {\n      const topics = stakeholder.monitoringTopics || stakeholder.topics || [];\n      topics.slice(0, 2).forEach(topic => {\n        recommendations.push({\n          name: `${topic} News`,\n          url: `https://news.google.com/search?q=${encodeURIComponent(topic)}`,\n          type: 'news',\n          extractionMethod: 'scraping',\n          active: true\n        });\n      });\n    }\n    \n    // Add Reddit monitoring for all stakeholders\n    recommendations.push({\n      name: `Reddit - ${stakeholder.name}`,\n      url: `https://www.reddit.com/search/?q=${encodeURIComponent(stakeholder.name)}`,\n      type: 'social',\n      extractionMethod: 'scraping',\n      active: false // Off by default\n    });\n    \n    // Add LinkedIn monitoring for B2B stakeholders\n    if (type === 'prospect' || type === 'client' || type === 'competitive') {\n      recommendations.push({\n        name: `LinkedIn - ${stakeholder.name}`,\n        url: `https://www.linkedin.com/search/results/content/?keywords=${encodeURIComponent(stakeholder.name)}`,\n        type: 'professional',\n        extractionMethod: 'scraping',\n        active: true\n      });\n    }\n    \n    // Default sources if we still don't have enough\n    if (recommendations.length < 3) {\n      recommendations.push(\n        { \n          name: 'Google Alerts', \n          url: `https://www.google.com/alerts#query:\"${stakeholder.name}\"`, \n          type: 'alert', \n          extractionMethod: 'email',\n          active: true \n        },\n        {\n          name: 'Bing News',\n          url: `https://www.bing.com/news/search?q=${encodeURIComponent(stakeholder.name)}`,\n          type: 'news',\n          extractionMethod: 'scraping',\n          active: false\n        }\n      );\n    }\n    \n    return recommendations.map((source, idx) => ({\n      ...source,\n      id: `${stakeholder.id}-rec-${idx}`,\n      isRecommended: true\n    }));\n  };\n\n  const toggleStakeholder = (stakeholderId) => {\n    setExpandedStakeholders(prev => ({\n      ...prev,\n      [stakeholderId]: !prev[stakeholderId]\n    }));\n  };\n\n  const toggleSource = (stakeholderId, sourceId) => {\n    setStakeholderSources(prev => ({\n      ...prev,\n      [stakeholderId]: {\n        ...prev[stakeholderId],\n        sources: prev[stakeholderId].sources.map(s => \n          s.id === sourceId ? { ...s, active: !s.active } : s\n        )\n      }\n    }));\n    \n    // Update parent\n    updateParentSources();\n  };\n\n  const updateParentSources = () => {\n    if (onSourcesUpdate) {\n      const allActiveSources = Object.entries(stakeholderSources).flatMap(([stakeholderId, config]) =>\n        config.sources.filter(s => s.active).map(source => ({\n          ...source,\n          stakeholderId,\n          stakeholderName: config.stakeholder.name\n        }))\n      );\n      onSourcesUpdate(allActiveSources);\n    }\n  };\n\n  const getSourceIcon = (type) => {\n    const icons = {\n      web: Globe,\n      news: Newspaper,\n      social: Twitter,\n      regulatory: Shield,\n      financial: DollarSign,\n      industry: Building,\n      professional: Briefcase,\n      community: Heart\n    };\n    return icons[type] || Globe;\n  };\n\n  const getActiveSourceCount = (stakeholderId) => {\n    return stakeholderSources[stakeholderId]?.sources?.filter(s => s.active).length || 0;\n  };\n\n  // Show message if no stakeholder groups\n  if (!stakeholderStrategy?.stakeholderGroups || stakeholderStrategy.stakeholderGroups.length === 0) {\n    return (\n      <div style={{\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#f9fafb',\n        padding: '2rem'\n      }}>\n        <div style={{\n          textAlign: 'center',\n          maxWidth: '500px'\n        }}>\n          <Target size={48} style={{ color: '#9ca3af', margin: '0 auto 1rem' }} />\n          <h3 style={{ fontSize: '1.25rem', fontWeight: '600', marginBottom: '0.5rem' }}>\n            No Targets Configured\n          </h3>\n          <p style={{ color: '#6b7280', marginBottom: '1.5rem' }}>\n            Please complete the Intelligence Targets setup first to configure monitoring sources.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{\n      height: '100%',\n      display: 'flex',\n      background: '#f9fafb',\n      overflow: 'hidden'\n    }}>\n      {/* Main Content */}\n      <div style={{\n        flex: 1,\n        padding: '2rem',\n        overflow: 'auto'\n      }}>\n        <div style={{ maxWidth: '1200px', margin: '0 auto' }}>\n          {/* Header */}\n          <div style={{ marginBottom: '2rem' }}>\n            <h2 style={{ margin: '0 0 0.5rem 0', fontSize: '1.5rem', fontWeight: '600', color: '#111827' }}>\n              Enhanced Source Configuration\n            </h2>\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', color: '#6b7280' }}>\n              <Database size={16} />\n              <span>Powered by pre-indexed stakeholder database</span>\n            </div>\n          </div>\n\n          {/* Stakeholder List */}\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n            {stakeholderStrategy?.stakeholderGroups?.map(stakeholder => {\n              const stakeholderId = stakeholder.id || stakeholder.name;\n              const isExpanded = expandedStakeholders[stakeholderId];\n              const activeCount = getActiveSourceCount(stakeholderId);\n              const config = stakeholderSources[stakeholderId];\n              const isLoading = loadingStates[stakeholderId];\n              const preIndexedMatch = preIndexedMatches[stakeholderId];\n              \n              return (\n                <div\n                  key={stakeholderId}\n                  style={{\n                    background: 'white',\n                    borderRadius: '0.75rem',\n                    boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n                    overflow: 'hidden',\n                    border: preIndexedMatch ? '2px solid #6366f1' : 'none'\n                  }}\n                >\n                  {/* Stakeholder Header */}\n                  <div\n                    onClick={() => toggleStakeholder(stakeholderId)}\n                    style={{\n                      padding: '1.25rem',\n                      cursor: 'pointer',\n                      borderBottom: isExpanded ? '1px solid #e5e7eb' : 'none',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    }}\n                  >\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '0.75rem' }}>\n                      {isExpanded ? <ChevronDown size={20} /> : <ChevronRight size={20} />}\n                      <div>\n                        <h3 style={{ margin: 0, fontSize: '1.125rem', fontWeight: '600', color: '#111827' }}>\n                          {stakeholder.name}\n                        </h3>\n                        <p style={{ margin: '0.25rem 0 0 0', fontSize: '0.875rem', color: '#6b7280' }}>\n                          {activeCount} active source{activeCount !== 1 ? 's' : ''} \n                          {config?.sources?.length > 0 && ` (${config.sources.length} available)`}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n                      {preIndexedMatch && (\n                        <span style={{\n                          padding: '0.25rem 0.75rem',\n                          background: '#ede9fe',\n                          color: '#6d28d9',\n                          borderRadius: '1rem',\n                          fontSize: '0.75rem',\n                          fontWeight: '500',\n                          display: 'flex',\n                          alignItems: 'center',\n                          gap: '0.25rem'\n                        }}>\n                          <Database size={12} />\n                          Pre-indexed Match\n                        </span>\n                      )}\n                      \n                      {isLoading ? (\n                        <RefreshCw size={16} className=\"animate-spin\" style={{ color: '#6b7280' }} />\n                      ) : (\n                        <span style={{\n                          padding: '0.25rem 0.75rem',\n                          background: activeCount > 0 ? '#dcfce7' : '#f3f4f6',\n                          color: activeCount > 0 ? '#166534' : '#6b7280',\n                          borderRadius: '1rem',\n                          fontSize: '0.75rem',\n                          fontWeight: '500'\n                        }}>\n                          {activeCount > 0 ? 'Monitoring Active' : 'Not Configured'}\n                        </span>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Expanded Content */}\n                  {isExpanded && config && (\n                    <div style={{ padding: '1.25rem' }}>\n                      {/* Pre-indexed Match Info */}\n                      {preIndexedMatch && (\n                        <div style={{\n                          marginBottom: '1.5rem',\n                          padding: '1rem',\n                          background: '#f0f9ff',\n                          borderRadius: '0.5rem',\n                          border: '1px solid #bfdbfe'\n                        }}>\n                          <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\n                            <Zap size={16} style={{ color: '#3b82f6' }} />\n                            <span style={{ fontWeight: '600', color: '#1e40af' }}>\n                              Exact Match Found: {preIndexedMatch.name}\n                            </span>\n                          </div>\n                          <p style={{ margin: 0, fontSize: '0.875rem', color: '#3730a3' }}>\n                            We've pre-configured {config.sources.length} verified sources for this stakeholder, \n                            including official channels, regulatory filings, and social media accounts.\n                          </p>\n                        </div>\n                      )}\n\n                      {/* Sources by Category */}\n                      {config.sources.length > 0 && (\n                        <div>\n                          <h4 style={{ \n                            margin: '0 0 0.75rem 0', \n                            fontSize: '0.875rem', \n                            fontWeight: '600', \n                            color: '#374151',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '0.5rem'\n                          }}>\n                            <Sparkles size={16} style={{ color: '#6366f1' }} />\n                            Available Sources\n                          </h4>\n                          \n                          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '0.5rem' }}>\n                            {config.sources.map(source => {\n                              const Icon = getSourceIcon(source.type);\n                              return (\n                                <div\n                                  key={source.id}\n                                  style={{\n                                    padding: '0.75rem',\n                                    background: source.active ? '#f0f9ff' : '#f9fafb',\n                                    border: `1px solid ${source.active ? '#bfdbfe' : '#e5e7eb'}`,\n                                    borderRadius: '0.5rem',\n                                    display: 'flex',\n                                    alignItems: 'flex-start',\n                                    gap: '0.75rem',\n                                    cursor: 'pointer',\n                                    transition: 'all 0.2s'\n                                  }}\n                                  onClick={() => toggleSource(stakeholderId, source.id)}\n                                >\n                                  <Icon size={18} style={{ \n                                    color: source.active ? '#3b82f6' : '#9ca3af',\n                                    marginTop: '2px'\n                                  }} />\n                                  \n                                  <div style={{ flex: 1 }}>\n                                    <div style={{ \n                                      fontWeight: '500', \n                                      fontSize: '0.875rem',\n                                      color: source.active ? '#1e40af' : '#374151'\n                                    }}>\n                                      {source.name}\n                                    </div>\n                                    {source.url && (\n                                      <div style={{ \n                                        fontSize: '0.75rem', \n                                        color: '#6b7280',\n                                        marginTop: '2px',\n                                        wordBreak: 'break-all'\n                                      }}>\n                                        {source.url}\n                                      </div>\n                                    )}\n                                    <div style={{ \n                                      fontSize: '0.75rem', \n                                      color: '#9ca3af',\n                                      marginTop: '4px',\n                                      display: 'flex',\n                                      gap: '0.5rem'\n                                    }}>\n                                      <span>{source.extractionMethod}</span>\n                                      {source.rss && <span>• RSS</span>}\n                                      {source.isPreIndexed && <span>• Verified</span>}\n                                    </div>\n                                  </div>\n                                  \n                                  <div style={{\n                                    width: '20px',\n                                    height: '20px',\n                                    borderRadius: '50%',\n                                    border: `2px solid ${source.active ? '#3b82f6' : '#d1d5db'}`,\n                                    background: source.active ? '#3b82f6' : 'white',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center'\n                                  }}>\n                                    {source.active && <Check size={12} color=\"white\" />}\n                                  </div>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Monitoring Topics */}\n                      {config.topics && (\n                        <div style={{ \n                          marginTop: '1.5rem',\n                          paddingTop: '1.5rem',\n                          borderTop: '1px solid #e5e7eb'\n                        }}>\n                          <h4 style={{ \n                            margin: '0 0 0.75rem 0', \n                            fontSize: '0.875rem', \n                            fontWeight: '600', \n                            color: '#374151',\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '0.5rem'\n                          }}>\n                            <Target size={16} style={{ color: '#6366f1' }} />\n                            Recommended Monitoring Topics\n                            {config.topics && config.topics.source === 'pre-indexed database' && (\n                              <span style={{\n                                fontSize: '0.75rem',\n                                color: '#6366f1',\n                                fontWeight: 'normal',\n                                marginLeft: '0.5rem'\n                              }}>\n                                (from database)\n                              </span>\n                            )}\n                          </h4>\n                          \n                          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '0.5rem' }}>\n                            {((config.topics && config.topics.topics) ? config.topics.topics : (Array.isArray(config.topics) ? config.topics : [])).map((topic, idx) => (\n                              <span\n                                key={idx}\n                                style={{\n                                  padding: '0.375rem 0.75rem',\n                                  background: '#ede9fe',\n                                  color: '#6d28d9',\n                                  borderRadius: '1rem',\n                                  fontSize: '0.75rem',\n                                  fontWeight: '500'\n                                }}\n                              >\n                                {topic}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Quick Enable All */}\n                      {config.sources.filter(s => !s.active).length > 0 && (\n                        <button\n                          onClick={() => {\n                            setStakeholderSources(prev => ({\n                              ...prev,\n                              [stakeholderId]: {\n                                ...prev[stakeholderId],\n                                sources: prev[stakeholderId].sources.map(s => ({ ...s, active: true }))\n                              }\n                            }));\n                            updateParentSources();\n                          }}\n                          style={{\n                            width: '100%',\n                            marginTop: '1rem',\n                            padding: '0.75rem',\n                            background: '#6366f1',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '0.5rem',\n                            fontWeight: '500',\n                            cursor: 'pointer',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: '0.5rem'\n                          }}\n                        >\n                          <Zap size={16} />\n                          Enable All Sources\n                        </button>\n                      )}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default EnhancedSourceConfigurator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}