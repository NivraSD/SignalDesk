{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/contexts/ProjectContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContext = /*#__PURE__*/createContext();\nexport const useProject = () => {\n  _s();\n  const context = useContext(ProjectContext);\n  if (!context) {\n    throw new Error(\"useProject must be used within ProjectProvider\");\n  }\n  return context;\n};\n_s(useProject, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s2();\n  const [activeProject, setActiveProject] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [monitoringCache, setMonitoringCache] = useState({});\n  useEffect(() => {\n    // Load projects on mount\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    // Restore active project when projects are loaded\n    const savedProjectId = localStorage.getItem(\"activeProjectId\");\n    if (savedProjectId && projects.length > 0) {\n      const project = projects.find(p => p.id === parseInt(savedProjectId));\n      if (project) {\n        setActiveProject(project);\n      }\n    }\n  }, [projects]);\n  const fetchProjects = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const data = await api.getProjects();\n      if (data.success) {\n        setProjects(data.projects);\n      }\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const selectProject = project => {\n    setActiveProject(project);\n    if (project) {\n      localStorage.setItem(\"activeProjectId\", project.id);\n    } else {\n      localStorage.removeItem(\"activeProjectId\");\n    }\n  };\n  const createProject = async projectData => {\n    try {\n      const data = await api.createProject(projectData);\n      if (data.success) {\n        await fetchProjects();\n        return data.project;\n      }\n      throw new Error(data.message);\n    } catch (error) {\n      console.error(\"Error creating project:\", error);\n      throw error;\n    }\n  };\n\n  // Monitoring cache functions\n  const setMonitoringData = (projectId, data) => {\n    setMonitoringCache(prev => ({\n      ...prev,\n      [projectId]: {\n        ...data,\n        lastUpdated: new Date().toISOString()\n      }\n    }));\n  };\n  const getMonitoringData = projectId => {\n    return monitoringCache[projectId] || null;\n  };\n  const clearMonitoringCache = projectId => {\n    if (projectId) {\n      setMonitoringCache(prev => {\n        const newCache = {\n          ...prev\n        };\n        delete newCache[projectId];\n        return newCache;\n      });\n    } else {\n      setMonitoringCache({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      activeProject,\n      projects,\n      loading,\n      selectProject,\n      fetchProjects,\n      createProject,\n      monitoringCache,\n      setMonitoringData,\n      getMonitoringData,\n      clearMonitoringCache\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProjectProvider, \"5SD/XStld6CKEIyT2KH9r9bdxOo=\");\n_c = ProjectProvider;\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","ProjectContext","useProject","_s","context","Error","ProjectProvider","children","_s2","activeProject","setActiveProject","projects","setProjects","loading","setLoading","monitoringCache","setMonitoringCache","fetchProjects","savedProjectId","localStorage","getItem","length","project","find","p","id","parseInt","token","data","getProjects","success","error","console","selectProject","setItem","removeItem","createProject","projectData","message","setMonitoringData","projectId","prev","lastUpdated","Date","toISOString","getMonitoringData","clearMonitoringCache","newCache","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/contexts/ProjectContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../services/api\";\n\nconst ProjectContext = createContext();\n\nexport const useProject = () => {\n  const context = useContext(ProjectContext);\n  if (!context) {\n    throw new Error(\"useProject must be used within ProjectProvider\");\n  }\n  return context;\n};\n\nexport const ProjectProvider = ({ children }) => {\n  const [activeProject, setActiveProject] = useState(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [monitoringCache, setMonitoringCache] = useState({});\n\n  useEffect(() => {\n    // Load projects on mount\n    fetchProjects();\n  }, []);\n\n  useEffect(() => {\n    // Restore active project when projects are loaded\n    const savedProjectId = localStorage.getItem(\"activeProjectId\");\n    if (savedProjectId && projects.length > 0) {\n      const project = projects.find((p) => p.id === parseInt(savedProjectId));\n      if (project) {\n        setActiveProject(project);\n      }\n    }\n  }, [projects]);\n\n  const fetchProjects = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n\n      const data = await api.getProjects();\n      if (data.success) {\n        setProjects(data.projects);\n      }\n    } catch (error) {\n      console.error(\"Error fetching projects:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const selectProject = (project) => {\n    setActiveProject(project);\n    if (project) {\n      localStorage.setItem(\"activeProjectId\", project.id);\n    } else {\n      localStorage.removeItem(\"activeProjectId\");\n    }\n  };\n\n  const createProject = async (projectData) => {\n    try {\n      const data = await api.createProject(projectData);\n      if (data.success) {\n        await fetchProjects();\n        return data.project;\n      }\n      throw new Error(data.message);\n    } catch (error) {\n      console.error(\"Error creating project:\", error);\n      throw error;\n    }\n  };\n\n  // Monitoring cache functions\n  const setMonitoringData = (projectId, data) => {\n    setMonitoringCache(prev => ({\n      ...prev,\n      [projectId]: {\n        ...data,\n        lastUpdated: new Date().toISOString()\n      }\n    }));\n  };\n\n  const getMonitoringData = (projectId) => {\n    return monitoringCache[projectId] || null;\n  };\n\n  const clearMonitoringCache = (projectId) => {\n    if (projectId) {\n      setMonitoringCache(prev => {\n        const newCache = { ...prev };\n        delete newCache[projectId];\n        return newCache;\n      });\n    } else {\n      setMonitoringCache({});\n    }\n  };\n\n  return (\n    <ProjectContext.Provider\n      value={{\n        activeProject,\n        projects,\n        loading,\n        selectProject,\n        fetchProjects,\n        createProject,\n        monitoringCache,\n        setMonitoringData,\n        getMonitoringData,\n        clearMonitoringCache,\n      }}\n    >\n      {children}\n    </ProjectContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}