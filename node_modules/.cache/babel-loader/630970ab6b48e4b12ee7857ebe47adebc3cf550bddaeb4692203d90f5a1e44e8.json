{"ast":null,"code":"// Unified Data Loader - Single source of truth for organization data\n// Fixes inconsistency where different modules read from different localStorage keys\nexport const getUnifiedOrganization=()=>{// Priority order: signaldesk_unified_profile > signaldesk_organization > signaldesk_onboarding\n// Check unified profile first (most complete)\nconst unifiedProfile=localStorage.getItem('signaldesk_unified_profile');if(unifiedProfile){try{var _profile$organization;const profile=JSON.parse(unifiedProfile);if((_profile$organization=profile.organization)!==null&&_profile$organization!==void 0&&_profile$organization.name){return profile.organization;}}catch(e){console.warn('Error parsing unified profile:',e);}}// Check direct organization storage\nconst directOrg=localStorage.getItem('signaldesk_organization');if(directOrg){try{const org=JSON.parse(directOrg);if(org.name){return org;}}catch(e){console.warn('Error parsing organization:',e);}}// Fallback to onboarding data\nconst onboardingData=localStorage.getItem('signaldesk_onboarding');if(onboardingData){try{var _data$organization;const data=JSON.parse(onboardingData);if((_data$organization=data.organization)!==null&&_data$organization!==void 0&&_data$organization.name){return data.organization;}}catch(e){console.warn('Error parsing onboarding data:',e);}}console.warn('No organization data found in localStorage');return null;};export const getUnifiedCompleteProfile=()=>{// Get the COMPLETE profile including all stakeholders\nconst unifiedProfile=localStorage.getItem('signaldesk_unified_profile');if(unifiedProfile){try{const profile=JSON.parse(unifiedProfile);console.log('ðŸ“‚ Loaded profile from localStorage:',{hasOrganization:!!profile.organization,competitors:profile.competitors,regulators:profile.regulators,media_outlets:profile.media_outlets,activists:profile.activists,investors:profile.investors,analysts:profile.analysts});return{organization:profile.organization,competitors:profile.competitors||[],monitoring_topics:profile.monitoring_topics||[],// Include ALL stakeholder types\nstakeholders:profile.stakeholders||{},regulators:profile.regulators||[],activists:profile.activists||[],media_outlets:profile.media_outlets||[],investors:profile.investors||[],analysts:profile.analysts||[],// Include opportunity config\nopportunities:profile.opportunities,brand:profile.brand,messaging:profile.messaging,media:profile.media,spokespeople:profile.spokespeople};}catch(e){console.warn('Error parsing unified profile:',e);}}// Fallback to organization only\nreturn{organization:getUnifiedOrganization(),competitors:[],monitoring_topics:[],stakeholders:{},regulators:[],activists:[],media_outlets:[],investors:[],analysts:[]};};export const getUnifiedOpportunityConfig=()=>{// Priority: opportunity_profile > signaldesk_unified_profile > defaults\nconst opportunityProfile=localStorage.getItem('opportunity_profile');if(opportunityProfile){try{return JSON.parse(opportunityProfile);}catch(e){console.warn('Error parsing opportunity profile:',e);}}// Extract from unified profile\nconst unifiedProfile=localStorage.getItem('signaldesk_unified_profile');if(unifiedProfile){try{var _profile$opportunitie,_profile$opportunitie2,_profile$brand,_profile$media,_profile$brand2,_profile$brand3,_profile$messaging,_profile$organization2;const profile=JSON.parse(unifiedProfile);return{minimum_confidence:((_profile$opportunitie=profile.opportunities)===null||_profile$opportunitie===void 0?void 0:_profile$opportunitie.minimum_confidence)||70,opportunity_types:((_profile$opportunitie2=profile.opportunities)===null||_profile$opportunitie2===void 0?void 0:_profile$opportunitie2.types)||{competitor_weakness:true,narrative_vacuum:true,cascade_effect:true,crisis_prevention:true,viral_moment:false},risk_tolerance:((_profile$brand=profile.brand)===null||_profile$brand===void 0?void 0:_profile$brand.risk_tolerance)||'moderate',preferred_tiers:((_profile$media=profile.media)===null||_profile$media===void 0?void 0:_profile$media.preferred_tiers)||['tier1_business','tier1_tech'],voice:((_profile$brand2=profile.brand)===null||_profile$brand2===void 0?void 0:_profile$brand2.voice)||'professional',response_speed:((_profile$brand3=profile.brand)===null||_profile$brand3===void 0?void 0:_profile$brand3.response_speed)||'immediate',core_value_props:((_profile$messaging=profile.messaging)===null||_profile$messaging===void 0?void 0:_profile$messaging.core_value_props)||[],industry:((_profile$organization2=profile.organization)===null||_profile$organization2===void 0?void 0:_profile$organization2.industry)||'technology'};}catch(e){console.warn('Error parsing unified profile for opportunities:',e);}}// Default config\nreturn{minimum_confidence:70,opportunity_types:{competitor_weakness:true,narrative_vacuum:true,cascade_effect:true,crisis_prevention:true,viral_moment:false},risk_tolerance:'moderate',preferred_tiers:['tier1_business','tier1_tech'],voice:'professional',response_speed:'immediate',industry:'technology'};};// Sync all storage keys to ensure consistency\nexport const syncOrganizationData=organization=>{if(!(organization!==null&&organization!==void 0&&organization.name))return;console.log('ðŸ”„ Syncing organization data across all storage keys:',organization);// Update all storage locations\nlocalStorage.setItem('signaldesk_organization',JSON.stringify(organization));// Update unified profile\nconst unifiedProfile=localStorage.getItem('signaldesk_unified_profile');if(unifiedProfile){try{const profile=JSON.parse(unifiedProfile);profile.organization=organization;localStorage.setItem('signaldesk_unified_profile',JSON.stringify(profile));}catch(e){console.warn('Error updating unified profile:',e);}}// Update onboarding data\nconst onboardingData=localStorage.getItem('signaldesk_onboarding');if(onboardingData){try{const data=JSON.parse(onboardingData);data.organization=organization;localStorage.setItem('signaldesk_onboarding',JSON.stringify(data));}catch(e){console.warn('Error updating onboarding data:',e);}}};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}