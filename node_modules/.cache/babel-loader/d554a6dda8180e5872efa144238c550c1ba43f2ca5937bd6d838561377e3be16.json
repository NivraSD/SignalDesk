{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Migration utility to convert existing onboarding data to unified profile\nexport const migrateToUnifiedProfile=()=>{// Check if unified profile already exists\nif(localStorage.getItem('signaldesk_unified_profile')){console.log('‚úÖ Unified profile already exists, skipping migration');return false;}// Check for existing onboarding data\nconst legacyOnboarding=localStorage.getItem('signaldesk_onboarding');const opportunityProfile=localStorage.getItem('opportunity_profile');const organizationData=localStorage.getItem('signaldesk_organization');if(!legacyOnboarding&&!opportunityProfile&&!organizationData){console.log('‚ÑπÔ∏è No existing data to migrate');return false;}console.log('üîÑ Starting migration to unified profile...');// Initialize unified profile structure\nconst unifiedProfile={// Organization Basics (from legacy onboarding)\norganization:{name:'',industry:'',website:'',description:''},// Competitors (from legacy onboarding)\ncompetitors:[],// Topics to Monitor (from legacy onboarding)\nmonitoring_topics:[],// Brand & Voice (from opportunity profile or defaults)\nbrand:{voice:'professional',risk_tolerance:'moderate',response_speed:'considered'},// Key Messages (from opportunity profile or empty)\nmessaging:{core_value_props:[],proof_points:[],competitive_advantages:[],key_narratives:[]},// Media Strategy (from opportunity profile or empty)\nmedia:{preferred_tiers:[],journalist_relationships:[],no_comment_topics:[],exclusive_partners:[]},// Spokespeople (from opportunity profile or empty)\nspokespeople:[],// Opportunity Preferences (from opportunity profile or defaults)\nopportunities:{types:{competitor_weakness:true,narrative_vacuum:true,cascade_effect:true,crisis_prevention:true,alliance_opening:false},minimum_confidence:70,auto_execute_threshold:95},// Migration metadata\nmigrated_at:new Date().toISOString(),version:'2.0',migrated_from:[]};// Migrate legacy onboarding data\nif(legacyOnboarding){try{const legacy=JSON.parse(legacyOnboarding);unifiedProfile.migrated_from.push('signaldesk_onboarding');if(legacy.organization){unifiedProfile.organization=_objectSpread(_objectSpread({},unifiedProfile.organization),legacy.organization);}if(legacy.competitors){unifiedProfile.competitors=legacy.competitors.map(comp=>{if(typeof comp==='string'){return{name:comp,advantage:''};}return comp;});}if(legacy.monitoring_topics){unifiedProfile.monitoring_topics=legacy.monitoring_topics;}console.log('‚úÖ Migrated legacy onboarding data');}catch(error){console.error('‚ö†Ô∏è Error migrating legacy onboarding:',error);}}// Migrate opportunity profile data\nif(opportunityProfile){try{const oppProfile=JSON.parse(opportunityProfile);unifiedProfile.migrated_from.push('opportunity_profile');// Brand settings\nif(oppProfile.voice)unifiedProfile.brand.voice=oppProfile.voice;if(oppProfile.risk_tolerance)unifiedProfile.brand.risk_tolerance=oppProfile.risk_tolerance;if(oppProfile.response_speed)unifiedProfile.brand.response_speed=oppProfile.response_speed;// Messaging\nif(oppProfile.core_value_props)unifiedProfile.messaging.core_value_props=oppProfile.core_value_props;if(oppProfile.proof_points)unifiedProfile.messaging.proof_points=oppProfile.proof_points;if(oppProfile.competitive_advantages)unifiedProfile.messaging.competitive_advantages=oppProfile.competitive_advantages;if(oppProfile.key_narratives)unifiedProfile.messaging.key_narratives=oppProfile.key_narratives;// Media\nif(oppProfile.preferred_tiers)unifiedProfile.media.preferred_tiers=oppProfile.preferred_tiers;if(oppProfile.journalist_relationships)unifiedProfile.media.journalist_relationships=oppProfile.journalist_relationships;if(oppProfile.no_comment_topics)unifiedProfile.media.no_comment_topics=oppProfile.no_comment_topics;if(oppProfile.exclusive_partners)unifiedProfile.media.exclusive_partners=oppProfile.exclusive_partners;// Spokespeople\nif(oppProfile.spokespeople)unifiedProfile.spokespeople=oppProfile.spokespeople;// Opportunity types\nif(oppProfile.opportunity_types)unifiedProfile.opportunities.types=oppProfile.opportunity_types;if(oppProfile.minimum_confidence)unifiedProfile.opportunities.minimum_confidence=oppProfile.minimum_confidence;if(oppProfile.auto_execute_threshold)unifiedProfile.opportunities.auto_execute_threshold=oppProfile.auto_execute_threshold;// If competitors exist in opportunity profile but not in legacy, use them\nif(oppProfile.competitors&&unifiedProfile.competitors.length===0){unifiedProfile.competitors=oppProfile.competitors.map(comp=>{if(typeof comp==='string'){return{name:comp,advantage:''};}return comp;});}console.log('‚úÖ Migrated opportunity profile data');}catch(error){console.error('‚ö†Ô∏è Error migrating opportunity profile:',error);}}// Migrate standalone organization data if nothing else provided it\nif(organizationData&&!unifiedProfile.organization.name){try{const org=JSON.parse(organizationData);unifiedProfile.migrated_from.push('signaldesk_organization');unifiedProfile.organization=_objectSpread(_objectSpread({},unifiedProfile.organization),org);console.log('‚úÖ Migrated organization data');}catch(error){console.error('‚ö†Ô∏è Error migrating organization data:',error);}}// Save the unified profile\nlocalStorage.setItem('signaldesk_unified_profile',JSON.stringify(unifiedProfile));// Also update backward compatibility storage\nlocalStorage.setItem('signaldesk_organization',JSON.stringify(unifiedProfile.organization));localStorage.setItem('opportunity_profile',JSON.stringify(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},unifiedProfile.brand),unifiedProfile.messaging),unifiedProfile.media),{},{spokespeople:unifiedProfile.spokespeople,opportunity_types:unifiedProfile.opportunities.types,minimum_confidence:unifiedProfile.opportunities.minimum_confidence,auto_execute_threshold:unifiedProfile.opportunities.auto_execute_threshold,competitors:unifiedProfile.competitors})));// Update legacy onboarding with new structure\nlocalStorage.setItem('signaldesk_onboarding',JSON.stringify({organization:unifiedProfile.organization,competitors:unifiedProfile.competitors,monitoring_topics:unifiedProfile.monitoring_topics}));console.log('‚úÖ Migration complete! Unified profile created:',unifiedProfile);return true;};// Auto-run migration on module load\nif(typeof window!=='undefined'){try{const migrated=migrateToUnifiedProfile();if(migrated){console.log('üéâ Profile migration successful');}}catch(error){console.error('‚ùå Profile migration failed:',error);}}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}