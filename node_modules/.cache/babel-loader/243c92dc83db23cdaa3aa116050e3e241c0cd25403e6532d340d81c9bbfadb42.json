{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/NivRealtimeChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { supabase } from '../config/supabase';\nimport { Send, Bot, User, Loader, FileText, CheckCircle, AlertCircle, Edit3, Eye, Download } from 'lucide-react';\nimport './NivRealtimeChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NivRealtimeChat = () => {\n  _s();\n  // State management\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [artifacts, setArtifacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionId] = useState(`session-${Date.now()}`);\n  const [selectedArtifact, setSelectedArtifact] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n\n  // Refs\n  const messagesEndRef = useRef(null);\n  const conversationChannel = useRef(null);\n  const artifactChannel = useRef(null);\n\n  // Initialize realtime subscriptions\n  useEffect(() => {\n    // Re-enabled database sync\n    setupRealtimeSubscriptions();\n    loadSessionData();\n    console.log('NivRealtimeChat initialized with database sync');\n    return () => {\n      // Cleanup subscriptions\n      if (conversationChannel.current) {\n        supabase.removeChannel(conversationChannel.current);\n      }\n      if (artifactChannel.current) {\n        supabase.removeChannel(artifactChannel.current);\n      }\n    };\n  }, [sessionId]);\n\n  // Auto-scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const setupRealtimeSubscriptions = () => {\n    // Subscribe to conversations for this session\n    conversationChannel.current = supabase.channel(`conversations:${sessionId}`).on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'niv_conversations',\n      filter: `session_id=eq.${sessionId}`\n    }, payload => {\n      console.log('New message received:', payload);\n      setMessages(prev => [...prev, payload.new]);\n\n      // Show notification for artifacts\n      if (payload.new.artifact_id) {\n        showNotification('📎 New artifact created!', 'success');\n      }\n    }).on('presence', {\n      event: 'sync'\n    }, () => {\n      setConnectionStatus('connected');\n    }).subscribe(status => {\n      console.log('Conversation subscription status:', status);\n      if (status === 'SUBSCRIBED') {\n        setConnectionStatus('connected');\n      }\n    });\n\n    // Subscribe to artifacts for this session\n    artifactChannel.current = supabase.channel(`artifacts:${sessionId}`).on('postgres_changes', {\n      event: '*',\n      schema: 'public',\n      table: 'niv_artifacts',\n      filter: `session_id=eq.${sessionId}`\n    }, payload => {\n      console.log('Artifact event:', payload);\n      if (payload.eventType === 'INSERT') {\n        setArtifacts(prev => [...prev, payload.new]);\n        showNotification(`✨ Created: ${payload.new.title}`, 'success');\n      } else if (payload.eventType === 'UPDATE') {\n        setArtifacts(prev => prev.map(a => a.id === payload.new.id ? payload.new : a));\n        showNotification(`📝 Updated: ${payload.new.title}`, 'info');\n      } else if (payload.eventType === 'DELETE') {\n        setArtifacts(prev => prev.filter(a => a.id !== payload.old.id));\n      }\n    }).subscribe(status => {\n      console.log('Artifact subscription status:', status);\n    });\n  };\n  const loadSessionData = async () => {\n    try {\n      // Load existing conversations\n      const {\n        data: convos,\n        error: convoError\n      } = await supabase.from('niv_conversations').select('*').eq('session_id', sessionId).order('created_at', {\n        ascending: true\n      });\n      if (convoError) {\n        console.error('Error loading conversations:', convoError);\n      } else if (convos) {\n        setMessages(convos);\n      }\n\n      // Load existing artifacts\n      const {\n        data: arts,\n        error: artError\n      } = await supabase.from('niv_artifacts').select('*').eq('session_id', sessionId).order('created_at', {\n        ascending: true\n      });\n      if (artError) {\n        console.error('Error loading artifacts:', artError);\n      } else if (arts) {\n        setArtifacts(arts);\n      }\n    } catch (error) {\n      console.error('Error loading session data:', error);\n    }\n  };\n  const sendMessage = async () => {\n    if (!message.trim() || isLoading) return;\n    const userMessage = message.trim();\n    setMessage('');\n    setIsLoading(true);\n\n    // Add user message to UI immediately\n    const userMsg = {\n      id: `temp-${Date.now()}`,\n      role: 'user',\n      content: userMessage,\n      created_at: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    try {\n      // Build conversation history\n      const conversationHistory = [...messages, userMsg].map(m => ({\n        role: m.role,\n        content: m.content\n      }));\n\n      // Call edge function using Supabase client\n      const {\n        data,\n        error: fnError\n      } = await supabase.functions.invoke('niv-realtime', {\n        body: {\n          message: userMessage,\n          sessionId,\n          userId: 'user-123',\n          // In production, get from auth\n          conversationHistory\n        }\n      });\n      if (fnError) {\n        throw fnError;\n      }\n      if (!data) {\n        throw new Error('Failed to send message');\n      }\n\n      // Log response for debugging\n      console.log('Edge function response:', data);\n\n      // Add assistant response to UI\n      if (data.response) {\n        const assistantMsg = {\n          id: `temp-${Date.now()}-assistant`,\n          role: 'assistant',\n          content: data.response,\n          artifact_id: data.artifactId,\n          mcps_used: data.mcpsUsed || [],\n          created_at: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, assistantMsg]);\n      }\n\n      // Add artifact to UI if created\n      if (data.artifact) {\n        setArtifacts(prev => [...prev, data.artifact]);\n        showNotification(`✨ Created: ${data.artifact.title}`, 'success');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      showNotification('Failed to send message', 'error');\n\n      // Add error message to chat\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: `Error: ${error.message}`,\n        created_at: new Date().toISOString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const openInWorkspace = artifact => {\n    setSelectedArtifact(artifact);\n    // In production, this could open a modal or navigate to workspace\n    console.log('Opening artifact in workspace:', artifact);\n  };\n  const downloadArtifact = artifact => {\n    const content = JSON.stringify(artifact.content, null, 2);\n    const blob = new Blob([content], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${artifact.title.replace(/\\s+/g, '-')}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const showNotification = (message, type = 'info') => {\n    // Simple notification - in production use a proper toast library\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    setTimeout(() => {\n      notification.classList.add('fade-out');\n      setTimeout(() => document.body.removeChild(notification), 300);\n    }, 3000);\n  };\n  const getConnectionIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-4 w-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 16\n        }, this);\n      case 'connecting':\n        return /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"h-4 w-4 text-yellow-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-4 w-4 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"niv-realtime-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(Bot, {\n          className: \"h-8 w-8 text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Niv - AI PR Strategist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Session: \", sessionId.slice(0, 8), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-header-right\",\n        children: [getConnectionIcon(), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-messages\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"niv-welcome\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              className: \"h-16 w-16 text-gray-300 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Welcome! I'm Niv, your AI PR Strategist.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"How can I help you today?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `niv-message niv-message-${msg.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-message-icon\",\n              children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this) : msg.role === 'assistant' ? /*#__PURE__*/_jsxDEV(Bot, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"h-5 w-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), msg.artifact_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"niv-artifact-badge\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"h-3 w-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Artifact created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 23\n              }, this), msg.mcps_used && msg.mcps_used.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"niv-mcp-badges\",\n                children: msg.mcps_used.map((mcp, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"niv-mcp-badge\",\n                  children: mcp\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, msg.id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"niv-message niv-message-assistant\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-message-icon\",\n              children: /*#__PURE__*/_jsxDEV(Bot, {\n                className: \"h-5 w-5 animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"niv-typing\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && !e.shiftKey && sendMessage(),\n            placeholder: \"Ask Niv anything about PR strategy...\",\n            disabled: isLoading,\n            className: \"niv-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: isLoading || !message.trim(),\n            className: \"niv-send-button\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n              className: \"h-5 w-5 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Send, {\n              className: \"h-5 w-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-artifacts-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-artifacts-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Artifacts (\", artifacts.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), artifacts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-artifacts-empty\",\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            className: \"h-12 w-12 text-gray-300 mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No artifacts yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Artifacts appear here after consultation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-artifacts-list\",\n          children: artifacts.map(artifact => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"niv-artifact-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-artifact-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: artifact.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"niv-artifact-type\",\n                children: artifact.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this), artifact.mcp_sources && artifact.mcp_sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-artifact-mcps\",\n              children: artifact.mcp_sources.map((mcp, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"niv-mcp-mini\",\n                children: mcp\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-artifact-preview\",\n              children: typeof artifact.content === 'object' ? /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: [JSON.stringify(artifact.content, null, 2).slice(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [artifact.content.slice(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"niv-artifact-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openInWorkspace(artifact),\n                className: \"niv-artifact-action\",\n                children: [/*#__PURE__*/_jsxDEV(Edit3, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this), \"Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedArtifact(artifact),\n                className: \"niv-artifact-action\",\n                children: [/*#__PURE__*/_jsxDEV(Eye, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), \"View\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => downloadArtifact(artifact),\n                className: \"niv-artifact-action\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this), \"Export\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this)]\n          }, artifact.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), selectedArtifact && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-workspace-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-workspace-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-workspace-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedArtifact.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedArtifact(null),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-workspace-body\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(selectedArtifact.content, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s(NivRealtimeChat, \"/kYSQWIzxldnQYa6iAvAvUdSO1k=\");\n_c = NivRealtimeChat;\nexport default NivRealtimeChat;\nvar _c;\n$RefreshReg$(_c, \"NivRealtimeChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","supabase","Send","Bot","User","Loader","FileText","CheckCircle","AlertCircle","Edit3","Eye","Download","jsxDEV","_jsxDEV","NivRealtimeChat","_s","message","setMessage","messages","setMessages","artifacts","setArtifacts","isLoading","setIsLoading","sessionId","Date","now","selectedArtifact","setSelectedArtifact","connectionStatus","setConnectionStatus","messagesEndRef","conversationChannel","artifactChannel","setupRealtimeSubscriptions","loadSessionData","console","log","current","removeChannel","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","channel","on","event","schema","table","filter","payload","prev","new","artifact_id","showNotification","subscribe","status","eventType","title","map","a","id","old","data","convos","error","convoError","from","select","eq","order","ascending","arts","artError","sendMessage","trim","userMessage","userMsg","role","content","created_at","toISOString","conversationHistory","m","fnError","functions","invoke","body","userId","Error","response","assistantMsg","artifactId","mcps_used","mcpsUsed","artifact","openInWorkspace","downloadArtifact","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","replace","click","revokeObjectURL","notification","className","textContent","appendChild","setTimeout","classList","add","removeChild","getConnectionIcon","fileName","_jsxFileName","lineNumber","columnNumber","children","slice","length","msg","index","mcp","i","ref","value","onChange","e","target","onKeyPress","key","shiftKey","placeholder","disabled","onClick","mcp_sources","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/NivRealtimeChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { supabase } from '../config/supabase';\nimport { \n  Send, \n  Bot, \n  User, \n  Loader, \n  FileText, \n  CheckCircle, \n  AlertCircle,\n  Edit3,\n  Eye,\n  Download\n} from 'lucide-react';\nimport './NivRealtimeChat.css';\n\nconst NivRealtimeChat = () => {\n  // State management\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [artifacts, setArtifacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionId] = useState(`session-${Date.now()}`);\n  const [selectedArtifact, setSelectedArtifact] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  \n  // Refs\n  const messagesEndRef = useRef(null);\n  const conversationChannel = useRef(null);\n  const artifactChannel = useRef(null);\n  \n  // Initialize realtime subscriptions\n  useEffect(() => {\n    // Re-enabled database sync\n    setupRealtimeSubscriptions();\n    loadSessionData();\n    \n    console.log('NivRealtimeChat initialized with database sync');\n    \n    return () => {\n      // Cleanup subscriptions\n      if (conversationChannel.current) {\n        supabase.removeChannel(conversationChannel.current);\n      }\n      if (artifactChannel.current) {\n        supabase.removeChannel(artifactChannel.current);\n      }\n    };\n  }, [sessionId]);\n  \n  // Auto-scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  const setupRealtimeSubscriptions = () => {\n    // Subscribe to conversations for this session\n    conversationChannel.current = supabase\n      .channel(`conversations:${sessionId}`)\n      .on(\n        'postgres_changes',\n        {\n          event: 'INSERT',\n          schema: 'public',\n          table: 'niv_conversations',\n          filter: `session_id=eq.${sessionId}`\n        },\n        (payload) => {\n          console.log('New message received:', payload);\n          setMessages(prev => [...prev, payload.new]);\n          \n          // Show notification for artifacts\n          if (payload.new.artifact_id) {\n            showNotification('📎 New artifact created!', 'success');\n          }\n        }\n      )\n      .on('presence', { event: 'sync' }, () => {\n        setConnectionStatus('connected');\n      })\n      .subscribe((status) => {\n        console.log('Conversation subscription status:', status);\n        if (status === 'SUBSCRIBED') {\n          setConnectionStatus('connected');\n        }\n      });\n    \n    // Subscribe to artifacts for this session\n    artifactChannel.current = supabase\n      .channel(`artifacts:${sessionId}`)\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'niv_artifacts',\n          filter: `session_id=eq.${sessionId}`\n        },\n        (payload) => {\n          console.log('Artifact event:', payload);\n          \n          if (payload.eventType === 'INSERT') {\n            setArtifacts(prev => [...prev, payload.new]);\n            showNotification(`✨ Created: ${payload.new.title}`, 'success');\n          } else if (payload.eventType === 'UPDATE') {\n            setArtifacts(prev => \n              prev.map(a => a.id === payload.new.id ? payload.new : a)\n            );\n            showNotification(`📝 Updated: ${payload.new.title}`, 'info');\n          } else if (payload.eventType === 'DELETE') {\n            setArtifacts(prev => prev.filter(a => a.id !== payload.old.id));\n          }\n        }\n      )\n      .subscribe((status) => {\n        console.log('Artifact subscription status:', status);\n      });\n  };\n  \n  const loadSessionData = async () => {\n    try {\n      // Load existing conversations\n      const { data: convos, error: convoError } = await supabase\n        .from('niv_conversations')\n        .select('*')\n        .eq('session_id', sessionId)\n        .order('created_at', { ascending: true });\n      \n      if (convoError) {\n        console.error('Error loading conversations:', convoError);\n      } else if (convos) {\n        setMessages(convos);\n      }\n      \n      // Load existing artifacts\n      const { data: arts, error: artError } = await supabase\n        .from('niv_artifacts')\n        .select('*')\n        .eq('session_id', sessionId)\n        .order('created_at', { ascending: true });\n      \n      if (artError) {\n        console.error('Error loading artifacts:', artError);\n      } else if (arts) {\n        setArtifacts(arts);\n      }\n    } catch (error) {\n      console.error('Error loading session data:', error);\n    }\n  };\n  \n  const sendMessage = async () => {\n    if (!message.trim() || isLoading) return;\n    \n    const userMessage = message.trim();\n    setMessage('');\n    setIsLoading(true);\n    \n    // Add user message to UI immediately\n    const userMsg = {\n      id: `temp-${Date.now()}`,\n      role: 'user',\n      content: userMessage,\n      created_at: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    \n    try {\n      // Build conversation history\n      const conversationHistory = [...messages, userMsg].map(m => ({\n        role: m.role,\n        content: m.content\n      }));\n      \n      // Call edge function using Supabase client\n      const { data, error: fnError } = await supabase.functions.invoke('niv-realtime', {\n        body: {\n          message: userMessage,\n          sessionId,\n          userId: 'user-123', // In production, get from auth\n          conversationHistory\n        }\n      });\n      \n      if (fnError) {\n        throw fnError;\n      }\n      \n      if (!data) {\n        throw new Error('Failed to send message');\n      }\n      \n      // Log response for debugging\n      console.log('Edge function response:', data);\n      \n      // Add assistant response to UI\n      if (data.response) {\n        const assistantMsg = {\n          id: `temp-${Date.now()}-assistant`,\n          role: 'assistant',\n          content: data.response,\n          artifact_id: data.artifactId,\n          mcps_used: data.mcpsUsed || [],\n          created_at: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, assistantMsg]);\n      }\n      \n      // Add artifact to UI if created\n      if (data.artifact) {\n        setArtifacts(prev => [...prev, data.artifact]);\n        showNotification(`✨ Created: ${data.artifact.title}`, 'success');\n      }\n      \n    } catch (error) {\n      console.error('Error sending message:', error);\n      showNotification('Failed to send message', 'error');\n      \n      // Add error message to chat\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: `Error: ${error.message}`,\n        created_at: new Date().toISOString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const openInWorkspace = (artifact) => {\n    setSelectedArtifact(artifact);\n    // In production, this could open a modal or navigate to workspace\n    console.log('Opening artifact in workspace:', artifact);\n  };\n  \n  const downloadArtifact = (artifact) => {\n    const content = JSON.stringify(artifact.content, null, 2);\n    const blob = new Blob([content], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${artifact.title.replace(/\\s+/g, '-')}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  \n  const showNotification = (message, type = 'info') => {\n    // Simple notification - in production use a proper toast library\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.textContent = message;\n    document.body.appendChild(notification);\n    \n    setTimeout(() => {\n      notification.classList.add('fade-out');\n      setTimeout(() => document.body.removeChild(notification), 300);\n    }, 3000);\n  };\n  \n  const getConnectionIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'connecting':\n        return <Loader className=\"h-4 w-4 text-yellow-500 animate-spin\" />;\n      default:\n        return <AlertCircle className=\"h-4 w-4 text-red-500\" />;\n    }\n  };\n  \n  return (\n    <div className=\"niv-realtime-container\">\n      {/* Header */}\n      <div className=\"niv-header\">\n        <div className=\"niv-header-left\">\n          <Bot className=\"h-8 w-8 text-blue-600\" />\n          <div>\n            <h1>Niv - AI PR Strategist</h1>\n            <p className=\"text-sm text-gray-500\">\n              Session: {sessionId.slice(0, 8)}...\n            </p>\n          </div>\n        </div>\n        <div className=\"niv-header-right\">\n          {getConnectionIcon()}\n          <span className=\"text-sm\">{connectionStatus}</span>\n        </div>\n      </div>\n      \n      <div className=\"niv-main\">\n        {/* Chat Area */}\n        <div className=\"niv-chat\">\n          <div className=\"niv-messages\">\n            {messages.length === 0 ? (\n              <div className=\"niv-welcome\">\n                <Bot className=\"h-16 w-16 text-gray-300 mb-4\" />\n                <h2>Welcome! I'm Niv, your AI PR Strategist.</h2>\n                <p>How can I help you today?</p>\n              </div>\n            ) : (\n              messages.map((msg, index) => (\n                <div \n                  key={msg.id || index} \n                  className={`niv-message niv-message-${msg.role}`}\n                >\n                  <div className=\"niv-message-icon\">\n                    {msg.role === 'user' ? (\n                      <User className=\"h-5 w-5\" />\n                    ) : msg.role === 'assistant' ? (\n                      <Bot className=\"h-5 w-5\" />\n                    ) : (\n                      <AlertCircle className=\"h-5 w-5\" />\n                    )}\n                  </div>\n                  <div className=\"niv-message-content\">\n                    <p>{msg.content}</p>\n                    {msg.artifact_id && (\n                      <div className=\"niv-artifact-badge\">\n                        <FileText className=\"h-3 w-3\" />\n                        <span>Artifact created</span>\n                      </div>\n                    )}\n                    {msg.mcps_used && msg.mcps_used.length > 0 && (\n                      <div className=\"niv-mcp-badges\">\n                        {msg.mcps_used.map((mcp, i) => (\n                          <span key={i} className=\"niv-mcp-badge\">{mcp}</span>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n            {isLoading && (\n              <div className=\"niv-message niv-message-assistant\">\n                <div className=\"niv-message-icon\">\n                  <Bot className=\"h-5 w-5 animate-pulse\" />\n                </div>\n                <div className=\"niv-message-content\">\n                  <div className=\"niv-typing\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          {/* Input Area */}\n          <div className=\"niv-input-area\">\n            <input\n              type=\"text\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && !e.shiftKey && sendMessage()}\n              placeholder=\"Ask Niv anything about PR strategy...\"\n              disabled={isLoading}\n              className=\"niv-input\"\n            />\n            <button \n              onClick={sendMessage} \n              disabled={isLoading || !message.trim()}\n              className=\"niv-send-button\"\n            >\n              {isLoading ? (\n                <Loader className=\"h-5 w-5 animate-spin\" />\n              ) : (\n                <Send className=\"h-5 w-5\" />\n              )}\n            </button>\n          </div>\n        </div>\n        \n        {/* Artifacts Panel */}\n        <div className=\"niv-artifacts-panel\">\n          <div className=\"niv-artifacts-header\">\n            <h3>Artifacts ({artifacts.length})</h3>\n          </div>\n          \n          {artifacts.length === 0 ? (\n            <div className=\"niv-artifacts-empty\">\n              <FileText className=\"h-12 w-12 text-gray-300 mb-2\" />\n              <p>No artifacts yet</p>\n              <small>Artifacts appear here after consultation</small>\n            </div>\n          ) : (\n            <div className=\"niv-artifacts-list\">\n              {artifacts.map(artifact => (\n                <div key={artifact.id} className=\"niv-artifact-card\">\n                  <div className=\"niv-artifact-header\">\n                    <h4>{artifact.title}</h4>\n                    <span className=\"niv-artifact-type\">{artifact.type}</span>\n                  </div>\n                  \n                  {artifact.mcp_sources && artifact.mcp_sources.length > 0 && (\n                    <div className=\"niv-artifact-mcps\">\n                      {artifact.mcp_sources.map((mcp, i) => (\n                        <span key={i} className=\"niv-mcp-mini\">{mcp}</span>\n                      ))}\n                    </div>\n                  )}\n                  \n                  <div className=\"niv-artifact-preview\">\n                    {typeof artifact.content === 'object' ? (\n                      <pre>{JSON.stringify(artifact.content, null, 2).slice(0, 100)}...</pre>\n                    ) : (\n                      <p>{artifact.content.slice(0, 100)}...</p>\n                    )}\n                  </div>\n                  \n                  <div className=\"niv-artifact-actions\">\n                    <button \n                      onClick={() => openInWorkspace(artifact)}\n                      className=\"niv-artifact-action\"\n                    >\n                      <Edit3 className=\"h-4 w-4\" />\n                      Edit\n                    </button>\n                    <button \n                      onClick={() => setSelectedArtifact(artifact)}\n                      className=\"niv-artifact-action\"\n                    >\n                      <Eye className=\"h-4 w-4\" />\n                      View\n                    </button>\n                    <button \n                      onClick={() => downloadArtifact(artifact)}\n                      className=\"niv-artifact-action\"\n                    >\n                      <Download className=\"h-4 w-4\" />\n                      Export\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Workspace Modal (simplified for demo) */}\n      {selectedArtifact && (\n        <div className=\"niv-workspace-modal\">\n          <div className=\"niv-workspace-content\">\n            <div className=\"niv-workspace-header\">\n              <h2>{selectedArtifact.title}</h2>\n              <button onClick={() => setSelectedArtifact(null)}>✕</button>\n            </div>\n            <div className=\"niv-workspace-body\">\n              <pre>{JSON.stringify(selectedArtifact.content, null, 2)}</pre>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NivRealtimeChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}