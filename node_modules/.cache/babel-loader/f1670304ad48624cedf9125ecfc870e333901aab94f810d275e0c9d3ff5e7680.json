{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/Niv/NivStrategicAdvisor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './NivStrategicAdvisor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NivStrategicAdvisor = ({\n  activeModule,\n  organizationData,\n  onModuleSwitch,\n  embedded = false\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: `Hello! I'm Niv, your Strategic PR Advisor. I have access to all four modules - Intelligence, Opportunity, Execution, and MemoryVault. \n\nI'm here to interpret insights, validate opportunities, guide your execution, and connect patterns from past experiences. \n\nWhat strategic challenge can I help you with today?`\n  }]);\n  const [input, setInput] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isThinking) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n    setIsThinking(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/niv/strategic-advice', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          context: {\n            activeModule,\n            organizationId: organizationData === null || organizationData === void 0 ? void 0 : organizationData.id,\n            organizationName: organizationData === null || organizationData === void 0 ? void 0 : organizationData.name\n          }\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Add Niv's response\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.advice,\n          suggestions: data.suggestions,\n          relatedModule: data.relatedModule\n        }]);\n\n        // If Niv suggests switching to a different module\n        if (data.suggestedModule && data.suggestedModule !== activeModule) {\n          // Offer to switch modules\n          setTimeout(() => {\n            if (window.confirm(`Would you like to switch to the ${data.suggestedModule} module?`)) {\n              onModuleSwitch(data.suggestedModule);\n            }\n          }, 500);\n        }\n      } else {\n        // Fallback strategic advice\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: generateStrategicAdvice(userMessage, activeModule)\n        }]);\n      }\n    } catch (error) {\n      console.error('Error getting strategic advice:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: generateStrategicAdvice(userMessage, activeModule)\n      }]);\n    } finally {\n      setIsThinking(false);\n    }\n  };\n  const generateStrategicAdvice = (query, module) => {\n    const lowerQuery = query.toLowerCase();\n\n    // Intelligence-related queries\n    if (lowerQuery.includes('competitor') || lowerQuery.includes('monitor') || lowerQuery.includes('intelligence')) {\n      return `Based on your Intelligence data, I see several strategic considerations:\n\n1. **Competitive Landscape**: Your competitors are actively engaging in sustainability messaging. This creates an opportunity for differentiation through authentic action rather than just messaging.\n\n2. **Media Monitoring**: Recent sentiment shows 72% positive coverage, but there's a vulnerability in technical product discussions where clarity could be improved.\n\n3. **Strategic Recommendation**: Focus on demonstrable results rather than promises. The data shows audiences respond 3x better to case studies than forward-looking statements.\n\nWould you like me to help you identify specific opportunities based on these insights?`;\n    }\n\n    // Opportunity-related queries\n    if (lowerQuery.includes('opportunity') || lowerQuery.includes('timing') || lowerQuery.includes('when')) {\n      return `Looking at your Opportunity Queue, here's my strategic assessment:\n\n1. **Immediate Window** (Next 48 hours): There's a trending discussion about AI ethics that aligns perfectly with your thought leadership goals. CRS: 85, NVS: 78.\n\n2. **Upcoming Opportunity** (Next week): Your competitor's product launch creates a counter-programming opportunity. Consider announcing your developer tools update 24 hours before.\n\n3. **Pattern Recognition**: Based on MemoryVault data, similar situations have succeeded when you lead with customer success stories rather than feature lists.\n\nThe optimal action window is within the next 48 hours. Shall I guide you through the execution strategy?`;\n    }\n\n    // Execution-related queries\n    if (lowerQuery.includes('create') || lowerQuery.includes('write') || lowerQuery.includes('campaign') || lowerQuery.includes('execute')) {\n      return `For execution strategy, I recommend:\n\n1. **Template Selection**: Based on the context, use the \"Thought Leadership\" template but modify section 2 to emphasize practical applications over theory.\n\n2. **Messaging Framework**: Lead with the problem (30%), introduce your solution (40%), provide proof points (30%). This distribution has shown 92% success rate in similar campaigns.\n\n3. **Channel Strategy**: \n   - Primary: Industry publications (morning release)\n   - Secondary: LinkedIn (CEO perspective)\n   - Support: Developer forums (technical deep-dive)\n\nRemember: The Execution Module can generate the actual content. I'm here to ensure it aligns with your strategic objectives. Would you like me to review your messaging strategy?`;\n    }\n\n    // MemoryVault-related queries\n    if (lowerQuery.includes('before') || lowerQuery.includes('worked') || lowerQuery.includes('pattern') || lowerQuery.includes('memory')) {\n      return `Consulting the MemoryVault, I found relevant patterns:\n\n1. **Similar Situation** (3 months ago): You faced a comparable challenge with the Q3 product launch. The winning strategy was to preview features with key customers before public announcement, generating authentic testimonials.\n\n2. **Success Pattern**: Your most effective campaigns share three elements:\n   - Data-driven headline (2.5x more engagement)\n   - Customer voice in first paragraph (3x more trust)\n   - Clear call-to-action (45% higher conversion)\n\n3. **Lesson Learned**: Avoid Friday announcements - historical data shows 73% lower engagement.\n\nThis pattern has an 87% success rate. Would you like me to help adapt it to your current situation?`;\n    }\n\n    // Default strategic advice\n    return `Let me provide strategic guidance based on your current context:\n\n**Current Module**: ${module.charAt(0).toUpperCase() + module.slice(1)}\n\nI can help you:\n- Interpret intelligence findings and identify strategic implications\n- Validate and prioritize opportunities based on your objectives\n- Guide execution with proven patterns and frameworks\n- Connect current situations to successful past strategies\n\nWhat specific strategic challenge would you like to explore? For example:\n- \"What opportunities should we prioritize this week?\"\n- \"How should we respond to competitor's announcement?\"\n- \"What worked well in similar situations?\"`;\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const suggestedQuestions = [\"What opportunities should we act on today?\", \"How should we respond to the competitor news?\", \"What patterns predict success for this campaign?\", \"When is the optimal time to announce?\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `niv-strategic-advisor ${embedded ? 'embedded' : ''}`,\n    children: [!embedded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"niv-icon\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"niv-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Niv - Strategic Advisor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"niv-subtitle\",\n            children: \"Interprets \\u2022 Validates \\u2022 Guides \\u2022 Connects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-indicator online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: [message.role === 'assistant' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: \"N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), message.suggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-suggestions\",\n            children: message.suggestions.map((suggestion, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"suggestion-btn\",\n              onClick: () => setInput(suggestion),\n              children: suggestion\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), message.relatedModule && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"related-module\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Related: \", message.relatedModule]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"switch-module-btn\",\n              onClick: () => onModuleSwitch(message.relatedModule.toLowerCase()),\n              children: [\"Go to \", message.relatedModule]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)), isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: \"N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thinking-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), messages.length === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggested-questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try asking:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-grid\",\n        children: suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"question-btn\",\n          onClick: () => setInput(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Ask for strategic advice...\",\n        className: \"niv-input\",\n        rows: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        disabled: !input.trim() || isThinking,\n        className: \"niv-send-btn\",\n        children: isThinking ? '...' : '→'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), !embedded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"niv-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"module-context\",\n        children: [\"Active Module: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"module-name\",\n          children: activeModule\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"niv-capabilities\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Interprets Intelligence\",\n          children: \"\\uD83D\\uDD0D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Validates Opportunities\",\n          children: \"\\u2713\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Guides Execution\",\n          children: \"\\uD83C\\uDFAF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Connects Patterns\",\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(NivStrategicAdvisor, \"A7F/DikszGHwdVEAmxpDSgsrqfQ=\");\n_c = NivStrategicAdvisor;\nexport default NivStrategicAdvisor;\nvar _c;\n$RefreshReg$(_c, \"NivStrategicAdvisor\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","NivStrategicAdvisor","activeModule","organizationData","onModuleSwitch","embedded","_s","messages","setMessages","role","content","input","setInput","isThinking","setIsThinking","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","prev","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","message","context","organizationId","id","organizationName","name","ok","data","json","advice","suggestions","relatedModule","suggestedModule","setTimeout","window","confirm","generateStrategicAdvice","error","console","query","module","lowerQuery","toLowerCase","includes","charAt","toUpperCase","slice","handleKeyPress","e","key","shiftKey","preventDefault","suggestedQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","suggestion","idx","onClick","ref","length","question","value","onChange","target","onKeyPress","placeholder","rows","disabled","title","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/Niv/NivStrategicAdvisor.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './NivStrategicAdvisor.css';\n\nconst NivStrategicAdvisor = ({ activeModule, organizationData, onModuleSwitch, embedded = false }) => {\n  const [messages, setMessages] = useState([\n    {\n      role: 'assistant',\n      content: `Hello! I'm Niv, your Strategic PR Advisor. I have access to all four modules - Intelligence, Opportunity, Execution, and MemoryVault. \n\nI'm here to interpret insights, validate opportunities, guide your execution, and connect patterns from past experiences. \n\nWhat strategic challenge can I help you with today?`\n    }\n  ]);\n  const [input, setInput] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isThinking) return;\n\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, { role: 'user', content: userMessage }]);\n    setIsThinking(true);\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('/api/niv/strategic-advice', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          context: {\n            activeModule,\n            organizationId: organizationData?.id,\n            organizationName: organizationData?.name\n          }\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Add Niv's response\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: data.advice,\n          suggestions: data.suggestions,\n          relatedModule: data.relatedModule\n        }]);\n\n        // If Niv suggests switching to a different module\n        if (data.suggestedModule && data.suggestedModule !== activeModule) {\n          // Offer to switch modules\n          setTimeout(() => {\n            if (window.confirm(`Would you like to switch to the ${data.suggestedModule} module?`)) {\n              onModuleSwitch(data.suggestedModule);\n            }\n          }, 500);\n        }\n      } else {\n        // Fallback strategic advice\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: generateStrategicAdvice(userMessage, activeModule)\n        }]);\n      }\n    } catch (error) {\n      console.error('Error getting strategic advice:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: generateStrategicAdvice(userMessage, activeModule)\n      }]);\n    } finally {\n      setIsThinking(false);\n    }\n  };\n\n  const generateStrategicAdvice = (query, module) => {\n    const lowerQuery = query.toLowerCase();\n    \n    // Intelligence-related queries\n    if (lowerQuery.includes('competitor') || lowerQuery.includes('monitor') || lowerQuery.includes('intelligence')) {\n      return `Based on your Intelligence data, I see several strategic considerations:\n\n1. **Competitive Landscape**: Your competitors are actively engaging in sustainability messaging. This creates an opportunity for differentiation through authentic action rather than just messaging.\n\n2. **Media Monitoring**: Recent sentiment shows 72% positive coverage, but there's a vulnerability in technical product discussions where clarity could be improved.\n\n3. **Strategic Recommendation**: Focus on demonstrable results rather than promises. The data shows audiences respond 3x better to case studies than forward-looking statements.\n\nWould you like me to help you identify specific opportunities based on these insights?`;\n    }\n    \n    // Opportunity-related queries\n    if (lowerQuery.includes('opportunity') || lowerQuery.includes('timing') || lowerQuery.includes('when')) {\n      return `Looking at your Opportunity Queue, here's my strategic assessment:\n\n1. **Immediate Window** (Next 48 hours): There's a trending discussion about AI ethics that aligns perfectly with your thought leadership goals. CRS: 85, NVS: 78.\n\n2. **Upcoming Opportunity** (Next week): Your competitor's product launch creates a counter-programming opportunity. Consider announcing your developer tools update 24 hours before.\n\n3. **Pattern Recognition**: Based on MemoryVault data, similar situations have succeeded when you lead with customer success stories rather than feature lists.\n\nThe optimal action window is within the next 48 hours. Shall I guide you through the execution strategy?`;\n    }\n    \n    // Execution-related queries\n    if (lowerQuery.includes('create') || lowerQuery.includes('write') || lowerQuery.includes('campaign') || lowerQuery.includes('execute')) {\n      return `For execution strategy, I recommend:\n\n1. **Template Selection**: Based on the context, use the \"Thought Leadership\" template but modify section 2 to emphasize practical applications over theory.\n\n2. **Messaging Framework**: Lead with the problem (30%), introduce your solution (40%), provide proof points (30%). This distribution has shown 92% success rate in similar campaigns.\n\n3. **Channel Strategy**: \n   - Primary: Industry publications (morning release)\n   - Secondary: LinkedIn (CEO perspective)\n   - Support: Developer forums (technical deep-dive)\n\nRemember: The Execution Module can generate the actual content. I'm here to ensure it aligns with your strategic objectives. Would you like me to review your messaging strategy?`;\n    }\n    \n    // MemoryVault-related queries\n    if (lowerQuery.includes('before') || lowerQuery.includes('worked') || lowerQuery.includes('pattern') || lowerQuery.includes('memory')) {\n      return `Consulting the MemoryVault, I found relevant patterns:\n\n1. **Similar Situation** (3 months ago): You faced a comparable challenge with the Q3 product launch. The winning strategy was to preview features with key customers before public announcement, generating authentic testimonials.\n\n2. **Success Pattern**: Your most effective campaigns share three elements:\n   - Data-driven headline (2.5x more engagement)\n   - Customer voice in first paragraph (3x more trust)\n   - Clear call-to-action (45% higher conversion)\n\n3. **Lesson Learned**: Avoid Friday announcements - historical data shows 73% lower engagement.\n\nThis pattern has an 87% success rate. Would you like me to help adapt it to your current situation?`;\n    }\n    \n    // Default strategic advice\n    return `Let me provide strategic guidance based on your current context:\n\n**Current Module**: ${module.charAt(0).toUpperCase() + module.slice(1)}\n\nI can help you:\n- Interpret intelligence findings and identify strategic implications\n- Validate and prioritize opportunities based on your objectives\n- Guide execution with proven patterns and frameworks\n- Connect current situations to successful past strategies\n\nWhat specific strategic challenge would you like to explore? For example:\n- \"What opportunities should we prioritize this week?\"\n- \"How should we respond to competitor's announcement?\"\n- \"What worked well in similar situations?\"`;\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const suggestedQuestions = [\n    \"What opportunities should we act on today?\",\n    \"How should we respond to the competitor news?\",\n    \"What patterns predict success for this campaign?\",\n    \"When is the optimal time to announce?\"\n  ];\n\n  return (\n    <div className={`niv-strategic-advisor ${embedded ? 'embedded' : ''}`}>\n      {!embedded && (\n        <div className=\"niv-header\">\n          <div className=\"niv-title\">\n            <span className=\"niv-icon\">🤖</span>\n            <div className=\"niv-info\">\n              <h3>Niv - Strategic Advisor</h3>\n              <p className=\"niv-subtitle\">Interprets • Validates • Guides • Connects</p>\n            </div>\n          </div>\n          <div className=\"niv-status\">\n            <span className=\"status-indicator online\"></span>\n            <span>Online</span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"niv-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.role}`}>\n            {message.role === 'assistant' && (\n              <div className=\"message-avatar\">N</div>\n            )}\n            <div className=\"message-content\">\n              <div className=\"message-text\">{message.content}</div>\n              {message.suggestions && (\n                <div className=\"message-suggestions\">\n                  {message.suggestions.map((suggestion, idx) => (\n                    <button\n                      key={idx}\n                      className=\"suggestion-btn\"\n                      onClick={() => setInput(suggestion)}\n                    >\n                      {suggestion}\n                    </button>\n                  ))}\n                </div>\n              )}\n              {message.relatedModule && (\n                <div className=\"related-module\">\n                  <span>Related: {message.relatedModule}</span>\n                  <button\n                    className=\"switch-module-btn\"\n                    onClick={() => onModuleSwitch(message.relatedModule.toLowerCase())}\n                  >\n                    Go to {message.relatedModule}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n        {isThinking && (\n          <div className=\"message assistant\">\n            <div className=\"message-avatar\">N</div>\n            <div className=\"message-content\">\n              <div className=\"thinking-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {messages.length === 1 && (\n        <div className=\"suggested-questions\">\n          <p>Try asking:</p>\n          <div className=\"questions-grid\">\n            {suggestedQuestions.map((question, index) => (\n              <button\n                key={index}\n                className=\"question-btn\"\n                onClick={() => setInput(question)}\n              >\n                {question}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div className=\"niv-input-area\">\n        <textarea\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Ask for strategic advice...\"\n          className=\"niv-input\"\n          rows=\"2\"\n        />\n        <button\n          onClick={handleSend}\n          disabled={!input.trim() || isThinking}\n          className=\"niv-send-btn\"\n        >\n          {isThinking ? '...' : '→'}\n        </button>\n      </div>\n\n      {!embedded && (\n        <div className=\"niv-footer\">\n          <div className=\"module-context\">\n            Active Module: <span className=\"module-name\">{activeModule}</span>\n          </div>\n          <div className=\"niv-capabilities\">\n            <span title=\"Interprets Intelligence\">🔍</span>\n            <span title=\"Validates Opportunities\">✓</span>\n            <span title=\"Guides Execution\">🎯</span>\n            <span title=\"Connects Patterns\">🔗</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NivStrategicAdvisor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}