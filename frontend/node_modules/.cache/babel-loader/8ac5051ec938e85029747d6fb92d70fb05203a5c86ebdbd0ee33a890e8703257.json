{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StrategicPlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useProject } from \"../contexts/ProjectContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport SaveToMemoryVaultButton from \"./MemoryVault/SaveToMemoryVaultButton\";\nimport strategicPlanningService from '../services/strategicPlanningService';\nimport { Brain, Target, Lightbulb, ChevronRight, ChevronDown, Download, Loader, AlertCircle, Sparkles, Calendar, BarChart3, CheckCircle, ArrowRight, Zap, TrendingUp, Users, Globe, Shield, Play, Eye, Edit3, FileText, ListChecks, Clock, Info, X, Copy, Save } from \"lucide-react\";\nimport \"./StrategicPlanning.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function StrategicPlanning() {\n  _s();\n  var _strategicPlan$strate2;\n  const [objective, setObjective] = useState(\"\");\n  const [context, setContext] = useState(\"\");\n  const [constraints, setConstraints] = useState(\"\");\n  const [timeline, setTimeline] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [strategicPlan, setStrategicPlan] = useState(null);\n  const [error, setError] = useState(null);\n  const [expandedPillars, setExpandedPillars] = useState({});\n  const [showEvidence, setShowEvidence] = useState({});\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [executionStatus, setExecutionStatus] = useState(null);\n  const [showPlanOverlay, setShowPlanOverlay] = useState(false);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [activeTab, setActiveTab] = useState('create'); // 'create', 'saved', 'history'\n  const {\n    selectedProject\n  } = useProject();\n  const navigate = useNavigate();\n\n  // Context pills for quick starts\n  const contextPills = [{\n    id: 'launch',\n    label: 'Product Launch',\n    icon: Sparkles,\n    color: '#10b981'\n  }, {\n    id: 'crisis',\n    label: 'Crisis Response',\n    icon: Shield,\n    color: '#ef4444'\n  }, {\n    id: 'thought',\n    label: 'Thought Leadership',\n    icon: Brain,\n    color: '#8b5cf6'\n  }, {\n    id: 'market',\n    label: 'Market Entry',\n    icon: Globe,\n    color: '#3b82f6'\n  }, {\n    id: 'reputation',\n    label: 'Reputation Building',\n    icon: TrendingUp,\n    color: '#f59e0b'\n  }];\n  const planningTypes = [{\n    id: 'comprehensive',\n    label: 'Comprehensive Strategy',\n    icon: Brain,\n    desc: 'Full strategic plan with all components'\n  }, {\n    id: 'crisis',\n    label: 'Crisis Management',\n    icon: Shield,\n    desc: 'Rapid response strategic planning'\n  }, {\n    id: 'campaign',\n    label: 'Campaign Strategy',\n    icon: Target,\n    desc: 'Focused campaign planning'\n  }, {\n    id: 'launch',\n    label: 'Product Launch',\n    icon: Sparkles,\n    desc: 'Go-to-market strategic plan'\n  }];\n  const [selectedPlanType, setSelectedPlanType] = useState('comprehensive');\n\n  // Tab configuration\n  const tabs = [{\n    id: 'create',\n    label: 'Create Plan',\n    icon: Brain\n  }, {\n    id: 'saved',\n    label: 'Saved Plans',\n    icon: FileText\n  }, {\n    id: 'history',\n    label: 'Plan History',\n    icon: Clock\n  }];\n  useEffect(() => {\n    loadSavedPlans();\n  }, []);\n  const loadSavedPlans = () => {\n    const plans = strategicPlanningService.getPlansFromLocalStorage();\n    setSavedPlans(plans);\n  };\n  const togglePillar = pillarId => {\n    setExpandedPillars(prev => ({\n      ...prev,\n      [pillarId]: !prev[pillarId]\n    }));\n  };\n  const generateStrategicPlan = async () => {\n    if (!objective.trim()) {\n      setError(\"Please describe your objective\");\n      return;\n    }\n    setIsGenerating(true);\n    setError(null);\n    try {\n      // Show the overlay immediately\n      setShowPlanOverlay(true);\n\n      // Call the Supabase Edge Function\n      const result = await strategicPlanningService.generatePlan(objective, context, constraints, timeline);\n      if (!result || !result.success && !result.data) {\n        throw new Error(\"Failed to generate strategic plan\");\n      }\n\n      // Use the plan data from service\n      const plan = result.data || result;\n      setStrategicPlan(plan);\n\n      // Save to localStorage\n      strategicPlanningService.savePlanToLocalStorage(plan);\n      loadSavedPlans();\n\n      // Auto-expand first pillar\n      if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n        setExpandedPillars({\n          0: true\n        });\n      }\n    } catch (error) {\n      console.error(\"Error generating strategic plan:\", error);\n      setError(error.message || \"Failed to generate strategic plan\");\n      setShowPlanOverlay(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  const closePlanOverlay = () => {\n    setShowPlanOverlay(false);\n    setStrategicPlan(null);\n    setExpandedPillars({});\n    setShowEvidence({});\n  };\n  const copyPlanToClipboard = () => {\n    var _strategicPlan$strate, _strategicPlan$implem, _strategicPlan$succes;\n    if (!strategicPlan) return;\n    const planText = `\nSTRATEGIC PLAN: ${strategicPlan.objective}\n\nEXECUTIVE SUMMARY:\n${strategicPlan.executive_summary}\n\nSTRATEGIC PILLARS:\n${(_strategicPlan$strate = strategicPlan.strategic_pillars) === null || _strategicPlan$strate === void 0 ? void 0 : _strategicPlan$strate.map((pillar, index) => {\n      var _pillar$actions;\n      return `${index + 1}. ${pillar.title}\n     ${pillar.description}\n     Actions: ${((_pillar$actions = pillar.actions) === null || _pillar$actions === void 0 ? void 0 : _pillar$actions.join(', ')) || 'Not specified'}\n     Timeline: ${pillar.timeline || 'TBD'}\n     MCP Assignment: ${pillar.mcp || 'Not assigned'}`;\n    }).join('\\n\\n')}\n\nIMPLEMENTATION PHASES:\n${(_strategicPlan$implem = strategicPlan.implementation_phases) === null || _strategicPlan$implem === void 0 ? void 0 : _strategicPlan$implem.map(phase => {\n      var _phase$tasks;\n      return `• ${phase.phase}: ${phase.duration} - ${(_phase$tasks = phase.tasks) === null || _phase$tasks === void 0 ? void 0 : _phase$tasks.join(', ')}`;\n    }).join('\\n')}\n\nSUCCESS METRICS:\n${(_strategicPlan$succes = strategicPlan.success_metrics) === null || _strategicPlan$succes === void 0 ? void 0 : _strategicPlan$succes.map(metric => `• ${metric}`).join('\\n')}\n    `.trim();\n    navigator.clipboard.writeText(planText);\n  };\n  const executeStrategicPlan = async () => {\n    if (!strategicPlan) return;\n    setIsExecuting(true);\n    setExecutionStatus({\n      stage: 'initializing',\n      message: 'Creating campaign...'\n    });\n    try {\n      // Generate campaign from strategic plan\n      const campaign = strategicPlanningService.generateCampaignFromPlan(strategicPlan);\n      setExecutionStatus({\n        stage: 'campaign',\n        message: 'Campaign created successfully!'\n      });\n\n      // Navigate to Campaign Execution Dashboard after delay\n      setTimeout(() => {\n        navigate(`/projects/${selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id}/campaign-execution/${campaign.id}`);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error executing strategic plan:\", error);\n      setExecutionStatus({\n        stage: 'error',\n        message: 'Execution failed: ' + error.message\n      });\n    } finally {\n      setTimeout(() => {\n        setIsExecuting(false);\n        setExecutionStatus(null);\n      }, 3000);\n    }\n  };\n  const addContextPill = pillId => {\n    const pill = contextPills.find(p => p.id === pillId);\n    if (pill) {\n      const contextText = {\n        'launch': 'Launch our new product to market with maximum impact and strategic positioning',\n        'crisis': 'Respond to crisis situation effectively while protecting reputation and stakeholder trust',\n        'thought': 'Establish thought leadership in our industry through strategic content and positioning',\n        'market': 'Enter new market segment strategically with proper research and positioning',\n        'reputation': 'Build and enhance corporate reputation through strategic communications'\n      };\n      setContext(prev => prev ? `${prev}\\n\\n${contextText[pillId]}` : contextText[pillId]);\n    }\n  };\n  const loadSavedPlan = plan => {\n    setStrategicPlan(plan);\n    setShowPlanOverlay(true);\n    setObjective(plan.objective || '');\n    setContext(plan.context || '');\n    setConstraints(plan.constraints || '');\n    setTimeline(plan.timeline || '');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"strategic-planning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategic-planning-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategic-tabs\",\n        children: tabs.map(tab => {\n          const TabIcon = tab.icon;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-button ${activeTab === tab.id ? 'active' : ''}`,\n            onClick: () => setActiveTab(tab.id),\n            children: [/*#__PURE__*/_jsxDEV(TabIcon, {\n              className: \"tab-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), tab.label]\n          }, tab.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [activeTab === 'create' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-plan-tab\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-type-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select Planning Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plan-types\",\n              children: planningTypes.map(type => {\n                const Icon = type.icon;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `plan-type ${selectedPlanType === type.id ? 'selected' : ''}`,\n                  onClick: () => setSelectedPlanType(type.id),\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    className: \"plan-type-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plan-type-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: type.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: type.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)]\n                }, type.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategic-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"objective\",\n                children: [/*#__PURE__*/_jsxDEV(Target, {\n                  className: \"form-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), \"Strategic Objective\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"objective\",\n                value: objective,\n                onChange: e => setObjective(e.target.value),\n                placeholder: \"Describe what you want to achieve...\",\n                rows: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"context-pills\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Quick Context:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pills-container\",\n                children: contextPills.map(pill => {\n                  const Icon = pill.icon;\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"context-pill\",\n                    onClick: () => addContextPill(pill.id),\n                    style: {\n                      borderColor: pill.color\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      className: \"pill-icon\",\n                      style: {\n                        color: pill.color\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this), pill.label]\n                  }, pill.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"context\",\n                  children: [/*#__PURE__*/_jsxDEV(Info, {\n                    className: \"form-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this), \"Context\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"context\",\n                  value: context,\n                  onChange: e => setContext(e.target.value),\n                  placeholder: \"Additional context, background, or situation...\",\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group half\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"constraints\",\n                  children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                    className: \"form-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this), \"Constraints\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"constraints\",\n                  value: constraints,\n                  onChange: e => setConstraints(e.target.value),\n                  placeholder: \"Budget, timeline, or other limitations...\",\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"timeline\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"form-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), \"Timeline\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"timeline\",\n                value: timeline,\n                onChange: e => setTimeline(e.target.value),\n                placeholder: \"e.g., 3 months, Q1 2025, etc.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"error-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: generateStrategicPlan,\n              disabled: isGenerating,\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Loader, {\n                  className: \"loading-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this), \"Generating Strategic Plan...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                  className: \"btn-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 23\n                }, this), \"Generate Strategic Plan\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), activeTab === 'saved' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saved-plans-tab\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"saved-plans-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Saved Strategic Plans\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), savedPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(FileText, {\n                className: \"empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No saved plans yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab('create'),\n                className: \"create-first-btn\",\n                children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n                  className: \"btn-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), \"Create Your First Plan\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plans-grid\",\n              children: savedPlans.map(plan => {\n                var _plan$objective;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plan-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plan-card-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [(_plan$objective = plan.objective) === null || _plan$objective === void 0 ? void 0 : _plan$objective.substring(0, 80), \"...\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"plan-date\",\n                      children: new Date(plan.created_at).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"plan-card-actions\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => loadSavedPlan(plan),\n                      className: \"view-plan-btn\",\n                      children: [/*#__PURE__*/_jsxDEV(Eye, {\n                        className: \"btn-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 29\n                      }, this), \"View Plan\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this)]\n                }, plan.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), activeTab === 'history' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-tab\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"history-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Plan History & Analytics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coming-soon\",\n              children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                className: \"coming-soon-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Analytics Coming Soon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Track plan performance, execution metrics, and strategic outcomes.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), showPlanOverlay && strategicPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strategic-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strategic-overlay-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-title\",\n            children: [/*#__PURE__*/_jsxDEV(Brain, {\n              className: \"title-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Strategic Plan Generated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: copyPlanToClipboard,\n              className: \"action-btn\",\n              children: [/*#__PURE__*/_jsxDEV(Copy, {\n                className: \"btn-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this), \"Copy\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SaveToMemoryVaultButton, {\n              title: `Strategic Plan: ${strategicPlan.objective}`,\n              content: JSON.stringify(strategicPlan, null, 2),\n              category: \"strategic-planning\",\n              tags: ['strategy', 'planning', selectedPlanType]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: executeStrategicPlan,\n              className: \"execute-btn\",\n              disabled: isExecuting,\n              children: isExecuting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Loader, {\n                  className: \"loading-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), \"Executing...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Play, {\n                  className: \"btn-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this), \"Execute Plan\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closePlanOverlay,\n              className: \"close-btn\",\n              children: /*#__PURE__*/_jsxDEV(X, {\n                className: \"btn-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), \"Executive Summary\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"executive-summary\",\n              children: strategicPlan.executive_summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(Lightbulb, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), \"Strategic Pillars\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pillars-container\",\n              children: (_strategicPlan$strate2 = strategicPlan.strategic_pillars) === null || _strategicPlan$strate2 === void 0 ? void 0 : _strategicPlan$strate2.map((pillar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pillar-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pillar-header\",\n                  onClick: () => togglePillar(index),\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: pillar.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this), expandedPillars[index] ? /*#__PURE__*/_jsxDEV(ChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 51\n                  }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 23\n                }, this), expandedPillars[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pillar-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"pillar-description\",\n                    children: pillar.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 27\n                  }, this), pillar.actions && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pillar-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Actions:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: pillar.actions.map((action, actionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: action\n                      }, actionIndex, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 515,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"pillar-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"timeline\",\n                      children: [/*#__PURE__*/_jsxDEV(Clock, {\n                        className: \"meta-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 31\n                      }, this), pillar.timeline || 'TBD']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"mcp\",\n                      children: [/*#__PURE__*/_jsxDEV(Zap, {\n                        className: \"meta-icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 31\n                      }, this), pillar.mcp || 'Content Generator']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), strategicPlan.implementation_phases && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 21\n              }, this), \"Implementation Phases\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"phases-timeline\",\n              children: strategicPlan.implementation_phases.map((phase, index) => {\n                var _phase$tasks2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"phase-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"phase-marker\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"phase-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: phase.phase\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"phase-duration\",\n                      children: phase.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"phase-tasks\",\n                      children: (_phase$tasks2 = phase.tasks) === null || _phase$tasks2 === void 0 ? void 0 : _phase$tasks2.map((task, taskIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: task\n                      }, taskIndex, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 554,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this), strategicPlan.success_metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 21\n              }, this), \"Success Metrics\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-grid\",\n              children: strategicPlan.success_metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-item\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"metric-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: metric\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }, this), strategicPlan.risk_mitigation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(Shield, {\n                className: \"section-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this), \"Risk Mitigation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"risks-container\",\n              children: strategicPlan.risk_mitigation.map((risk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"risk-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"risk-title\",\n                  children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                    className: \"risk-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 27\n                  }, this), risk.risk]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"risk-strategy\",\n                  children: risk.strategy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), executionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"execution-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-content\",\n            children: [executionStatus.stage === 'error' ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"status-icon error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n              className: \"status-icon loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: executionStatus.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(StrategicPlanning, \"msOpBPItRqCqLYXY9depUmqyIXQ=\", false, function () {\n  return [useProject, useNavigate];\n});\n_c = StrategicPlanning;\nvar _c;\n$RefreshReg$(_c, \"StrategicPlanning\");","map":{"version":3,"names":["React","useState","useEffect","useProject","useNavigate","SaveToMemoryVaultButton","strategicPlanningService","Brain","Target","Lightbulb","ChevronRight","ChevronDown","Download","Loader","AlertCircle","Sparkles","Calendar","BarChart3","CheckCircle","ArrowRight","Zap","TrendingUp","Users","Globe","Shield","Play","Eye","Edit3","FileText","ListChecks","Clock","Info","X","Copy","Save","jsxDEV","_jsxDEV","Fragment","_Fragment","StrategicPlanning","_s","_strategicPlan$strate2","objective","setObjective","context","setContext","constraints","setConstraints","timeline","setTimeline","isGenerating","setIsGenerating","strategicPlan","setStrategicPlan","error","setError","expandedPillars","setExpandedPillars","showEvidence","setShowEvidence","isExecuting","setIsExecuting","executionStatus","setExecutionStatus","showPlanOverlay","setShowPlanOverlay","savedPlans","setSavedPlans","activeTab","setActiveTab","selectedProject","navigate","contextPills","id","label","icon","color","planningTypes","desc","selectedPlanType","setSelectedPlanType","tabs","loadSavedPlans","plans","getPlansFromLocalStorage","togglePillar","pillarId","prev","generateStrategicPlan","trim","result","generatePlan","success","data","Error","plan","savePlanToLocalStorage","strategic_pillars","length","console","message","closePlanOverlay","copyPlanToClipboard","_strategicPlan$strate","_strategicPlan$implem","_strategicPlan$succes","planText","executive_summary","map","pillar","index","_pillar$actions","title","description","actions","join","mcp","implementation_phases","phase","_phase$tasks","duration","tasks","success_metrics","metric","navigator","clipboard","writeText","executeStrategicPlan","stage","campaign","generateCampaignFromPlan","setTimeout","addContextPill","pillId","pill","find","p","contextText","loadSavedPlan","className","children","tab","TabIcon","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","Icon","htmlFor","value","onChange","e","target","placeholder","rows","style","borderColor","disabled","_plan$objective","substring","Date","created_at","toLocaleDateString","content","JSON","stringify","category","tags","action","actionIndex","_phase$tasks2","task","taskIndex","risk_mitigation","risk","strategy","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StrategicPlanning.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useProject } from \"../contexts/ProjectContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport SaveToMemoryVaultButton from \"./MemoryVault/SaveToMemoryVaultButton\";\nimport strategicPlanningService from '../services/strategicPlanningService';\nimport {\n  Brain,\n  Target,\n  Lightbulb,\n  ChevronRight,\n  ChevronDown,\n  Download,\n  Loader,\n  AlertCircle,\n  Sparkles,\n  Calendar,\n  BarChart3,\n  CheckCircle,\n  ArrowRight,\n  Zap,\n  TrendingUp,\n  Users,\n  Globe,\n  Shield,\n  Play,\n  Eye,\n  Edit3,\n  FileText,\n  ListChecks,\n  Clock,\n  Info,\n  X,\n  Copy,\n  Save\n} from \"lucide-react\";\nimport \"./StrategicPlanning.css\";\n\nexport default function StrategicPlanning() {\n  const [objective, setObjective] = useState(\"\");\n  const [context, setContext] = useState(\"\");\n  const [constraints, setConstraints] = useState(\"\");\n  const [timeline, setTimeline] = useState(\"\");\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [strategicPlan, setStrategicPlan] = useState(null);\n  const [error, setError] = useState(null);\n  const [expandedPillars, setExpandedPillars] = useState({});\n  const [showEvidence, setShowEvidence] = useState({});\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [executionStatus, setExecutionStatus] = useState(null);\n  const [showPlanOverlay, setShowPlanOverlay] = useState(false);\n  const [savedPlans, setSavedPlans] = useState([]);\n  const [activeTab, setActiveTab] = useState('create'); // 'create', 'saved', 'history'\n  const { selectedProject } = useProject();\n  const navigate = useNavigate();\n\n  // Context pills for quick starts\n  const contextPills = [\n    { id: 'launch', label: 'Product Launch', icon: Sparkles, color: '#10b981' },\n    { id: 'crisis', label: 'Crisis Response', icon: Shield, color: '#ef4444' },\n    { id: 'thought', label: 'Thought Leadership', icon: Brain, color: '#8b5cf6' },\n    { id: 'market', label: 'Market Entry', icon: Globe, color: '#3b82f6' },\n    { id: 'reputation', label: 'Reputation Building', icon: TrendingUp, color: '#f59e0b' }\n  ];\n\n  const planningTypes = [\n    { id: 'comprehensive', label: 'Comprehensive Strategy', icon: Brain, desc: 'Full strategic plan with all components' },\n    { id: 'crisis', label: 'Crisis Management', icon: Shield, desc: 'Rapid response strategic planning' },\n    { id: 'campaign', label: 'Campaign Strategy', icon: Target, desc: 'Focused campaign planning' },\n    { id: 'launch', label: 'Product Launch', icon: Sparkles, desc: 'Go-to-market strategic plan' }\n  ];\n\n  const [selectedPlanType, setSelectedPlanType] = useState('comprehensive');\n\n  // Tab configuration\n  const tabs = [\n    { id: 'create', label: 'Create Plan', icon: Brain },\n    { id: 'saved', label: 'Saved Plans', icon: FileText },\n    { id: 'history', label: 'Plan History', icon: Clock }\n  ];\n\n  useEffect(() => {\n    loadSavedPlans();\n  }, []);\n\n  const loadSavedPlans = () => {\n    const plans = strategicPlanningService.getPlansFromLocalStorage();\n    setSavedPlans(plans);\n  };\n\n  const togglePillar = (pillarId) => {\n    setExpandedPillars(prev => ({\n      ...prev,\n      [pillarId]: !prev[pillarId]\n    }));\n  };\n\n  const generateStrategicPlan = async () => {\n    if (!objective.trim()) {\n      setError(\"Please describe your objective\");\n      return;\n    }\n\n    setIsGenerating(true);\n    setError(null);\n\n    try {\n      // Show the overlay immediately\n      setShowPlanOverlay(true);\n      \n      // Call the Supabase Edge Function\n      const result = await strategicPlanningService.generatePlan(\n        objective,\n        context,\n        constraints,\n        timeline\n      );\n\n      if (!result || (!result.success && !result.data)) {\n        throw new Error(\"Failed to generate strategic plan\");\n      }\n\n      // Use the plan data from service\n      const plan = result.data || result;\n      setStrategicPlan(plan);\n\n      // Save to localStorage\n      strategicPlanningService.savePlanToLocalStorage(plan);\n      loadSavedPlans();\n\n      // Auto-expand first pillar\n      if (plan.strategic_pillars && plan.strategic_pillars.length > 0) {\n        setExpandedPillars({ 0: true });\n      }\n    } catch (error) {\n      console.error(\"Error generating strategic plan:\", error);\n      setError(error.message || \"Failed to generate strategic plan\");\n      setShowPlanOverlay(false);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const closePlanOverlay = () => {\n    setShowPlanOverlay(false);\n    setStrategicPlan(null);\n    setExpandedPillars({});\n    setShowEvidence({});\n  };\n\n  const copyPlanToClipboard = () => {\n    if (!strategicPlan) return;\n    \n    const planText = `\nSTRATEGIC PLAN: ${strategicPlan.objective}\n\nEXECUTIVE SUMMARY:\n${strategicPlan.executive_summary}\n\nSTRATEGIC PILLARS:\n${strategicPlan.strategic_pillars?.map((pillar, index) => \n  `${index + 1}. ${pillar.title}\n     ${pillar.description}\n     Actions: ${pillar.actions?.join(', ') || 'Not specified'}\n     Timeline: ${pillar.timeline || 'TBD'}\n     MCP Assignment: ${pillar.mcp || 'Not assigned'}`\n).join('\\n\\n')}\n\nIMPLEMENTATION PHASES:\n${strategicPlan.implementation_phases?.map(phase => \n  `• ${phase.phase}: ${phase.duration} - ${phase.tasks?.join(', ')}`\n).join('\\n')}\n\nSUCCESS METRICS:\n${strategicPlan.success_metrics?.map(metric => `• ${metric}`).join('\\n')}\n    `.trim();\n    \n    navigator.clipboard.writeText(planText);\n  };\n\n  const executeStrategicPlan = async () => {\n    if (!strategicPlan) return;\n\n    setIsExecuting(true);\n    setExecutionStatus({ stage: 'initializing', message: 'Creating campaign...' });\n\n    try {\n      // Generate campaign from strategic plan\n      const campaign = strategicPlanningService.generateCampaignFromPlan(strategicPlan);\n      \n      setExecutionStatus({ stage: 'campaign', message: 'Campaign created successfully!' });\n      \n      // Navigate to Campaign Execution Dashboard after delay\n      setTimeout(() => {\n        navigate(`/projects/${selectedProject?.id}/campaign-execution/${campaign.id}`);\n      }, 2000);\n\n    } catch (error) {\n      console.error(\"Error executing strategic plan:\", error);\n      setExecutionStatus({ stage: 'error', message: 'Execution failed: ' + error.message });\n    } finally {\n      setTimeout(() => {\n        setIsExecuting(false);\n        setExecutionStatus(null);\n      }, 3000);\n    }\n  };\n\n  const addContextPill = (pillId) => {\n    const pill = contextPills.find(p => p.id === pillId);\n    if (pill) {\n      const contextText = {\n        'launch': 'Launch our new product to market with maximum impact and strategic positioning',\n        'crisis': 'Respond to crisis situation effectively while protecting reputation and stakeholder trust',\n        'thought': 'Establish thought leadership in our industry through strategic content and positioning',\n        'market': 'Enter new market segment strategically with proper research and positioning',\n        'reputation': 'Build and enhance corporate reputation through strategic communications'\n      };\n      setContext(prev => prev ? `${prev}\\n\\n${contextText[pillId]}` : contextText[pillId]);\n    }\n  };\n\n  const loadSavedPlan = (plan) => {\n    setStrategicPlan(plan);\n    setShowPlanOverlay(true);\n    setObjective(plan.objective || '');\n    setContext(plan.context || '');\n    setConstraints(plan.constraints || '');\n    setTimeline(plan.timeline || '');\n  };\n\n  return (\n    <div className=\"strategic-planning-container\">\n      <div className=\"strategic-planning-main\">\n        {/* Tab Navigation */}\n        <div className=\"strategic-tabs\">\n          {tabs.map((tab) => {\n            const TabIcon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}\n                onClick={() => setActiveTab(tab.id)}\n              >\n                <TabIcon className=\"tab-icon\" />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n        {/* Tab Content */}\n        <div className=\"tab-content\">\n          {activeTab === 'create' && (\n            <div className=\"create-plan-tab\">\n              {/* Planning Type Selection */}\n              <div className=\"plan-type-selector\">\n                <h3>Select Planning Type</h3>\n                <div className=\"plan-types\">\n                  {planningTypes.map((type) => {\n                    const Icon = type.icon;\n                    return (\n                      <div\n                        key={type.id}\n                        className={`plan-type ${selectedPlanType === type.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedPlanType(type.id)}\n                      >\n                        <Icon className=\"plan-type-icon\" />\n                        <div className=\"plan-type-content\">\n                          <h4>{type.label}</h4>\n                          <p>{type.desc}</p>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Main Input Form */}\n              <div className=\"strategic-form\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"objective\">\n                    <Target className=\"form-icon\" />\n                    Strategic Objective\n                  </label>\n                  <textarea\n                    id=\"objective\"\n                    value={objective}\n                    onChange={(e) => setObjective(e.target.value)}\n                    placeholder=\"Describe what you want to achieve...\"\n                    rows=\"2\"\n                  />\n                </div>\n\n                {/* Context Pills */}\n                <div className=\"context-pills\">\n                  <label>Quick Context:</label>\n                  <div className=\"pills-container\">\n                    {contextPills.map((pill) => {\n                      const Icon = pill.icon;\n                      return (\n                        <button\n                          key={pill.id}\n                          className=\"context-pill\"\n                          onClick={() => addContextPill(pill.id)}\n                          style={{ borderColor: pill.color }}\n                        >\n                          <Icon className=\"pill-icon\" style={{ color: pill.color }} />\n                          {pill.label}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group half\">\n                    <label htmlFor=\"context\">\n                      <Info className=\"form-icon\" />\n                      Context\n                    </label>\n                    <textarea\n                      id=\"context\"\n                      value={context}\n                      onChange={(e) => setContext(e.target.value)}\n                      placeholder=\"Additional context, background, or situation...\"\n                      rows=\"3\"\n                    />\n                  </div>\n                  <div className=\"form-group half\">\n                    <label htmlFor=\"constraints\">\n                      <AlertCircle className=\"form-icon\" />\n                      Constraints\n                    </label>\n                    <textarea\n                      id=\"constraints\"\n                      value={constraints}\n                      onChange={(e) => setConstraints(e.target.value)}\n                      placeholder=\"Budget, timeline, or other limitations...\"\n                      rows=\"3\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"timeline\">\n                    <Clock className=\"form-icon\" />\n                    Timeline\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"timeline\"\n                    value={timeline}\n                    onChange={(e) => setTimeline(e.target.value)}\n                    placeholder=\"e.g., 3 months, Q1 2025, etc.\"\n                  />\n                </div>\n\n                {error && (\n                  <div className=\"error-message\">\n                    <AlertCircle className=\"error-icon\" />\n                    {error}\n                  </div>\n                )}\n\n                <button\n                  className=\"generate-btn\"\n                  onClick={generateStrategicPlan}\n                  disabled={isGenerating}\n                >\n                  {isGenerating ? (\n                    <>\n                      <Loader className=\"loading-icon\" />\n                      Generating Strategic Plan...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles className=\"btn-icon\" />\n                      Generate Strategic Plan\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'saved' && (\n            <div className=\"saved-plans-tab\">\n              <div className=\"saved-plans-content\">\n                <h3>Saved Strategic Plans</h3>\n                {savedPlans.length === 0 ? (\n                  <div className=\"empty-state\">\n                    <FileText className=\"empty-icon\" />\n                    <p>No saved plans yet</p>\n                    <button onClick={() => setActiveTab('create')} className=\"create-first-btn\">\n                      <Sparkles className=\"btn-icon\" />\n                      Create Your First Plan\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"plans-grid\">\n                    {savedPlans.map((plan) => (\n                      <div key={plan.id} className=\"plan-card\">\n                        <div className=\"plan-card-header\">\n                          <h4>{plan.objective?.substring(0, 80)}...</h4>\n                          <span className=\"plan-date\">\n                            {new Date(plan.created_at).toLocaleDateString()}\n                          </span>\n                        </div>\n                        <div className=\"plan-card-actions\">\n                          <button\n                            onClick={() => loadSavedPlan(plan)}\n                            className=\"view-plan-btn\"\n                          >\n                            <Eye className=\"btn-icon\" />\n                            View Plan\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'history' && (\n            <div className=\"history-tab\">\n              <div className=\"history-content\">\n                <h3>Plan History & Analytics</h3>\n                <div className=\"coming-soon\">\n                  <BarChart3 className=\"coming-soon-icon\" />\n                  <h4>Analytics Coming Soon</h4>\n                  <p>Track plan performance, execution metrics, and strategic outcomes.</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Strategic Plan Overlay - Content Generator Style */}\n      {showPlanOverlay && strategicPlan && (\n        <div className=\"strategic-overlay\">\n          <div className=\"strategic-overlay-content\">\n            <div className=\"overlay-header\">\n              <div className=\"overlay-title\">\n                <Brain className=\"title-icon\" />\n                <h2>Strategic Plan Generated</h2>\n              </div>\n              <div className=\"overlay-actions\">\n                <button onClick={copyPlanToClipboard} className=\"action-btn\">\n                  <Copy className=\"btn-icon\" />\n                  Copy\n                </button>\n                <SaveToMemoryVaultButton\n                  title={`Strategic Plan: ${strategicPlan.objective}`}\n                  content={JSON.stringify(strategicPlan, null, 2)}\n                  category=\"strategic-planning\"\n                  tags={['strategy', 'planning', selectedPlanType]}\n                />\n                <button onClick={executeStrategicPlan} className=\"execute-btn\" disabled={isExecuting}>\n                  {isExecuting ? (\n                    <>\n                      <Loader className=\"loading-icon\" />\n                      Executing...\n                    </>\n                  ) : (\n                    <>\n                      <Play className=\"btn-icon\" />\n                      Execute Plan\n                    </>\n                  )}\n                </button>\n                <button onClick={closePlanOverlay} className=\"close-btn\">\n                  <X className=\"btn-icon\" />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"overlay-body\">\n              {/* Executive Summary */}\n              <div className=\"plan-section\">\n                <h3>\n                  <Target className=\"section-icon\" />\n                  Executive Summary\n                </h3>\n                <p className=\"executive-summary\">{strategicPlan.executive_summary}</p>\n              </div>\n\n              {/* Strategic Pillars */}\n              <div className=\"plan-section\">\n                <h3>\n                  <Lightbulb className=\"section-icon\" />\n                  Strategic Pillars\n                </h3>\n                <div className=\"pillars-container\">\n                  {strategicPlan.strategic_pillars?.map((pillar, index) => (\n                    <div key={index} className=\"pillar-card\">\n                      <div\n                        className=\"pillar-header\"\n                        onClick={() => togglePillar(index)}\n                      >\n                        <h4>{pillar.title}</h4>\n                        {expandedPillars[index] ? <ChevronDown /> : <ChevronRight />}\n                      </div>\n                      \n                      {expandedPillars[index] && (\n                        <div className=\"pillar-content\">\n                          <p className=\"pillar-description\">{pillar.description}</p>\n                          \n                          {pillar.actions && (\n                            <div className=\"pillar-actions\">\n                              <h5>Actions:</h5>\n                              <ul>\n                                {pillar.actions.map((action, actionIndex) => (\n                                  <li key={actionIndex}>{action}</li>\n                                ))}\n                              </ul>\n                            </div>\n                          )}\n                          \n                          <div className=\"pillar-meta\">\n                            <span className=\"timeline\">\n                              <Clock className=\"meta-icon\" />\n                              {pillar.timeline || 'TBD'}\n                            </span>\n                            <span className=\"mcp\">\n                              <Zap className=\"meta-icon\" />\n                              {pillar.mcp || 'Content Generator'}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Implementation Phases */}\n              {strategicPlan.implementation_phases && (\n                <div className=\"plan-section\">\n                  <h3>\n                    <Calendar className=\"section-icon\" />\n                    Implementation Phases\n                  </h3>\n                  <div className=\"phases-timeline\">\n                    {strategicPlan.implementation_phases.map((phase, index) => (\n                      <div key={index} className=\"phase-item\">\n                        <div className=\"phase-marker\">{index + 1}</div>\n                        <div className=\"phase-content\">\n                          <h4>{phase.phase}</h4>\n                          <p className=\"phase-duration\">{phase.duration}</p>\n                          <ul className=\"phase-tasks\">\n                            {phase.tasks?.map((task, taskIndex) => (\n                              <li key={taskIndex}>{task}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Success Metrics */}\n              {strategicPlan.success_metrics && (\n                <div className=\"plan-section\">\n                  <h3>\n                    <BarChart3 className=\"section-icon\" />\n                    Success Metrics\n                  </h3>\n                  <div className=\"metrics-grid\">\n                    {strategicPlan.success_metrics.map((metric, index) => (\n                      <div key={index} className=\"metric-item\">\n                        <CheckCircle className=\"metric-icon\" />\n                        <span>{metric}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Risk Mitigation */}\n              {strategicPlan.risk_mitigation && (\n                <div className=\"plan-section\">\n                  <h3>\n                    <Shield className=\"section-icon\" />\n                    Risk Mitigation\n                  </h3>\n                  <div className=\"risks-container\">\n                    {strategicPlan.risk_mitigation.map((risk, index) => (\n                      <div key={index} className=\"risk-item\">\n                        <div className=\"risk-title\">\n                          <AlertCircle className=\"risk-icon\" />\n                          {risk.risk}\n                        </div>\n                        <div className=\"risk-strategy\">{risk.strategy}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Execution Status */}\n            {executionStatus && (\n              <div className=\"execution-status\">\n                <div className=\"status-content\">\n                  {executionStatus.stage === 'error' ? (\n                    <AlertCircle className=\"status-icon error\" />\n                  ) : (\n                    <Loader className=\"status-icon loading\" />\n                  )}\n                  <span>{executionStatus.message}</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}