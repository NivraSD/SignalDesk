{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Claude Intelligence Service V2\n// Enhanced with specialized personas, organizational context, and memory integration\nimport{getIndustryCompetitors,detectIndustryFromOrganization}from'../utils/industryCompetitors';import aiIndustryExpansionService from'./aiIndustryExpansionService';import organizationProfileService from'./organizationProfileService';import tabIntelligenceService from'./tabIntelligenceService';import intelligentDiscoveryService from'./intelligentDiscoveryService';import intelligenceOrchestratorService from'./intelligenceOrchestratorService';class ClaudeIntelligenceServiceV2{constructor(){this.supabaseUrl=(process.env.REACT_APP_SUPABASE_URL||'https://zskaxjtyuaqazydouifp.supabase.co').trim().replace(/\\n/g,'');this.supabaseKey=(process.env.REACT_APP_SUPABASE_ANON_KEY||'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpza2F4anR5dWFxYXp5ZG91aWZwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMjk2MzcsImV4cCI6MjA3MDcwNTYzN30.5PhMVptHk3n-1dTSwGF-GvTwrVM0loovkHGUBDtBOe8').trim().replace(/\\n/g,'');// Track which personas are being used\nthis.activePersonas={competitive_strategist:false,stakeholder_psychologist:false,narrative_architect:false,risk_prophet:false,opportunity_hunter:false,executive_synthesizer:false};// Cache for recent analyses to avoid redundant calls\nthis.analysisCache=new Map();this.cacheTimeout=2*60*1000;// 2 minutes - shorter cache for real-time experience\nthis.pendingRequests=new Map();// Track pending requests to prevent duplicates\n}/**\n   * Helper function to extract stakeholders as an array from either array or object format\n   */extractStakeholdersArray(stakeholders){if(!stakeholders)return[];// If it's already an array, return it\nif(Array.isArray(stakeholders)){return stakeholders;}// If it's an object with stakeholder groups, flatten all values\nif(typeof stakeholders==='object'){const allStakeholders=[];for(const[category,items]of Object.entries(stakeholders)){if(Array.isArray(items)){allStakeholders.push(...items);}else if(typeof items==='string'){allStakeholders.push(items);}}return allStakeholders;}return[];}async gatherAndAnalyze(config){var _config$organization,_config$organization2,_config$organization3,_config$organization4,_config$intelligence,_config$intelligence2;let timeframe=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'24h';let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};console.log('üîç Starting intelligent analysis');// Check if this is minimal onboarding (new approach)\nconst isMinimalOnboarding=localStorage.getItem('signaldesk_minimal')==='true';// Extract basic info\nconst orgName=((_config$organization=config.organization)===null||_config$organization===void 0?void 0:_config$organization.name)||config.organizationName||'';const website=((_config$organization2=config.organization)===null||_config$organization2===void 0?void 0:_config$organization2.website)||config.website||'';const description=((_config$organization3=config.organization)===null||_config$organization3===void 0?void 0:_config$organization3.description)||'';const goals=config.goals||{};const industry=((_config$organization4=config.organization)===null||_config$organization4===void 0?void 0:_config$organization4.industry)||config.industry||'';console.log(\"\\uD83C\\uDFE2 Analyzing \".concat(orgName));console.log('üéØ Goals:',Object.keys(goals).filter(k=>goals[k]));// Try using the Intelligence Orchestrator for optimal 4-phase flow\n// Check if orchestrator is enabled (can be disabled via options or localStorage)\nconst useOrchestrator=options.useOrchestrator!==false&&localStorage.getItem('signaldesk_use_orchestrator')!=='false';if(orgName&&useOrchestrator){console.log('üöÄ Using Intelligence Orchestrator for optimal 4-phase flow');try{// Force refresh for orchestrator to avoid stale cache\nconst orchestratedResult=await intelligenceOrchestratorService.orchestrateIntelligence({name:orgName,industry:industry},'full');if(orchestratedResult.success){console.log('‚úÖ Orchestrator succeeded, using optimized intelligence');console.log('üìä Raw orchestrator result:',orchestratedResult);console.log('üîç Intelligence keys:',Object.keys(orchestratedResult.intelligence||{}));console.log('üîç Insights keys:',Object.keys(orchestratedResult.insights||{}));console.log('üîç Phases completed:',orchestratedResult.phases_completed);// Debug: Log the actual data structure\nif(orchestratedResult.intelligence){var _orchestratedResult$i,_orchestratedResult$i2;console.log('üìã Sample intelligence data:',{hasCompetitors:!!orchestratedResult.intelligence.competitors,competitorCount:(_orchestratedResult$i=orchestratedResult.intelligence.competitors)===null||_orchestratedResult$i===void 0?void 0:_orchestratedResult$i.length,hasKeyInsights:!!orchestratedResult.intelligence.key_insights,keyInsightCount:(_orchestratedResult$i2=orchestratedResult.intelligence.key_insights)===null||_orchestratedResult$i2===void 0?void 0:_orchestratedResult$i2.length,hasSynthesized:!!orchestratedResult.intelligence.synthesized,hasExecutiveSummary:!!orchestratedResult.intelligence.executive_summary});}// Only use orchestrator if it has substantial data\nif(orchestratedResult.tabs&&Object.keys(orchestratedResult.tabs).length===5){var _orchestratedResult$t,_orchestratedResult$s;console.log('‚úÖ Using orchestrator data (already formatted)');console.log('üìä Tab data check:',{hasOverviewTab:!!orchestratedResult.tabs.overview,overviewExecutiveSummaryType:typeof((_orchestratedResult$t=orchestratedResult.tabs.overview)===null||_orchestratedResult$t===void 0?void 0:_orchestratedResult$t.executive_summary),insightsStored:((_orchestratedResult$s=orchestratedResult.stats)===null||_orchestratedResult$s===void 0?void 0:_orchestratedResult$s.insights_stored)||0});// The orchestrator already returns properly formatted data via dataFormatter\n// Just add profile and guidance\nconst orgForStorage=_objectSpread({name:orgName,industry:industry},config.organization);const profile=await organizationProfileService.getOrBuildProfile(orgForStorage);// Store insights from the formatted data\nawait this.storeKeyInsights(orchestratedResult,orgForStorage);return _objectSpread(_objectSpread({},orchestratedResult),{},{profile:{confidence_level:profile.confidence_level,last_updated:profile.last_updated,established_facts:profile.established_facts},guidance:organizationProfileService.getIntelligenceGuidance(profile)});}else{console.log('‚ö†Ô∏è Orchestrator returned limited data, using full flow instead');}}}catch(error){console.log('‚ö†Ô∏è Orchestrator failed, falling back to original flow:',error);}}else if(!useOrchestrator){console.log('üîß Orchestrator disabled, using original multi-step flow');}// Step 1: Intelligent Discovery (replaces broken onboarding)\nlet discoveredIntelligence;if(isMinimalOnboarding||!((_config$intelligence=config.intelligence)!==null&&_config$intelligence!==void 0&&_config$intelligence.stakeholders)||typeof((_config$intelligence2=config.intelligence)===null||_config$intelligence2===void 0?void 0:_config$intelligence2.stakeholders)==='string'){console.log('ü§ñ Using intelligent discovery to find real data...');discoveredIntelligence=await intelligentDiscoveryService.discoverCompanyIntelligence(orgName,website,description);}else{var _config$organization5,_config$intelligence3,_config$intelligence4,_config$intelligence5;// Fallback to old config if somehow it has real data\ndiscoveredIntelligence={company:config.organization,competitors:((_config$organization5=config.organization)===null||_config$organization5===void 0?void 0:_config$organization5.competitors)||[],stakeholders:((_config$intelligence3=config.intelligence)===null||_config$intelligence3===void 0?void 0:_config$intelligence3.stakeholders)||{},topics:((_config$intelligence4=config.intelligence)===null||_config$intelligence4===void 0?void 0:_config$intelligence4.topics)||[],keywords:((_config$intelligence5=config.intelligence)===null||_config$intelligence5===void 0?void 0:_config$intelligence5.keywords)||[]};}// Build profile from discovered intelligence\nconst enhancedOrganization=_objectSpread(_objectSpread({},discoveredIntelligence.company),{},{name:orgName,competitors:discoveredIntelligence.competitors,stakeholders:discoveredIntelligence.stakeholders,topics:discoveredIntelligence.topics,keywords:discoveredIntelligence.keywords});const profile=await organizationProfileService.getOrBuildProfile(enhancedOrganization);console.log('üìã Organization Profile loaded:',profile.identity.name,\"(\".concat(profile.confidence_level,\")\"));// Use profile to guide intelligence gathering\nconst intelligenceGuidance=organizationProfileService.getIntelligenceGuidance(profile);// Use the discovered/enhanced organization as the full context\nconst fullOrganization=enhancedOrganization;const detectedIndustry=fullOrganization.industry||industry||'technology';console.log('üè≠ Using industry:',detectedIndustry);console.log('üè¢ Real Competitors:',fullOrganization.competitors);console.log('üë• Real Stakeholders:',fullOrganization.stakeholders);console.log('üìù Real Topics:',fullOrganization.topics);console.log('üîë Smart Keywords:',fullOrganization.keywords);console.log('üéØ Full organization context:',fullOrganization);// Check cache first with full context\nconst cacheKey=\"\".concat(fullOrganization.name,\"_\").concat(detectedIndustry,\"_\").concat(timeframe,\"_\").concat(JSON.stringify(goals));const cached=this.getCachedAnalysis(cacheKey);if(cached&&!options.forceRefresh){console.log('üì¶ Using cached analysis');return cached;}// Check if request is already pending to prevent duplicates\nif(this.pendingRequests.has(cacheKey)){console.log('‚è≥ Request already pending, waiting for result...');return await this.pendingRequests.get(cacheKey);}// Create a promise for this request to prevent duplicates\nconst analysisPromise=this.performAnalysis(fullOrganization,goals,timeframe,options,profile,intelligenceGuidance);this.pendingRequests.set(cacheKey,analysisPromise);try{const result=await analysisPromise;// Cache the result\nthis.cacheAnalysis(cacheKey,result);return result;}finally{// Clean up pending request\nthis.pendingRequests.delete(cacheKey);}}async performAnalysis(organization,goals,timeframe,options,profile,intelligenceGuidance){var _intelligenceGuidance;console.log('üéØ Gathering intelligence with specialized personas');console.log('üìä Organization:',organization.name,'| Industry:',organization.industry);console.log('üéØ Active goals:',Object.entries(goals).filter(_ref=>{let[k,v]=_ref;return v;}).map(_ref2=>{let[k]=_ref2;return k;}));console.log('üìã Using profile guidance:',intelligenceGuidance===null||intelligenceGuidance===void 0?void 0:(_intelligenceGuidance=intelligenceGuidance.search_priorities)===null||_intelligenceGuidance===void 0?void 0:_intelligenceGuidance.slice(0,3));// Step 1: Enhance organization data with Claude before MCP calls\nconst enhancedOrganization=await this.enhanceOrganizationWithClaude(organization,goals);// Step 2: Gather raw data from MCPs with ENHANCED context\nconst mcpData=await this.orchestrateMCPs(enhancedOrganization,timeframe);// Step 3: Determine which analyses need second opinions\nconst criticalAnalyses=this.identifyCriticalAnalyses(mcpData,goals);// Step 4: Send to Claude V2 for persona-based synthesis with profile context\nconst synthesizedIntelligence=await this.synthesizeWithClaudeV2(mcpData,enhancedOrganization,goals,timeframe,criticalAnalyses,profile,intelligenceGuidance);// Step 5: Store key insights in memory\nawait this.storeKeyInsights(synthesizedIntelligence,enhancedOrganization);// Generate tab-specific intelligence using profile\nconst tabIntelligence=await tabIntelligenceService.generateTabIntelligence(enhancedOrganization,synthesizedIntelligence,profile);// Update profile with new intelligence\nawait organizationProfileService.updateProfile(enhancedOrganization,synthesizedIntelligence);// Return enhanced intelligence with tab-specific content\nreturn _objectSpread(_objectSpread({},synthesizedIntelligence),{},{profile:{confidence_level:profile.confidence_level,last_updated:profile.last_updated,established_facts:profile.established_facts},tabs:tabIntelligence,guidance:intelligenceGuidance});}async enhanceOrganizationWithClaude(organization,goals){console.log('üîÆ Enhancing organization data with AI Industry Expansion');try{// Use AI to EXPAND industry data, not necessarily to override the industry\nconst fullAnalysis=await aiIndustryExpansionService.analyzeAndExpandIndustry({name:organization.name,website:organization.website,description:organization.description,industry:organization.industry// Pass user's industry selection\n});console.log('üéØ AI analysis complete for industry:',organization.industry||fullAnalysis.primary_industry);// Respect user's industry choice if provided\nconst finalIndustry=organization.industry||fullAnalysis.primary_industry;return _objectSpread(_objectSpread({},organization),{},{// Keep user's industry or use AI's if none provided\nindustry:finalIndustry,subcategories:fullAnalysis.subcategories,// Use AI-discovered competitors instead of generic tech defaults\ncompetitors:[...new Set([...(organization.competitors||[]),...fullAnalysis.direct_competitors.slice(0,8)])],// Rich stakeholder data from AI\nstakeholders:[...new Set([...this.extractStakeholdersArray(organization.stakeholders),...fullAnalysis.stakeholder_groups.slice(0,6)])],// Industry-specific topics and keywords\ntopics:[...new Set([...(organization.topics||[]),...fullAnalysis.trending_topics.slice(0,5)])],keywords:[...new Set([...(organization.keywords||[]),...fullAnalysis.monitoring_keywords.slice(0,10)])],// Additional AI insights\nindustryInsights:{media_outlets:fullAnalysis.media_outlets,industry_events:fullAnalysis.industry_events,regulatory_bodies:fullAnalysis.regulatory_bodies,ecosystem_players:fullAnalysis.ecosystem_players},enhancedAt:new Date().toISOString(),enhancementSource:'ai_expansion'});}catch(error){console.error('Failed to enhance organization with AI:',error);return await this.fallbackClaudeEnhancement(organization,goals);}}async fallbackClaudeEnhancement(organization,goals){console.log('üîÑ Using fallback Claude enhancement');try{const enhancementPrompt=\"\\n        Organization: \".concat(organization.name,\"\\n        Industry: \").concat(organization.industry,\"\\n        Website: \").concat(organization.website||'Not provided',\"\\n        \\n        This is NOT a technology company. Analyze the actual business and industry.\\n        Provide relevant competitors, stakeholders, and keywords specific to their industry.\\n        \\n        DO NOT default to tech companies like Google, Apple, Microsoft unless this is actually a tech company.\\n      \");const response=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/claude-intelligence-synthesizer-v2\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({intelligence_type:'enhance_organization',organization,goals,prompt:enhancementPrompt})});if(response.ok){const enhanced=await response.json();console.log('‚ú® Organization enhanced with fallback Claude insights');return _objectSpread(_objectSpread({},organization),{},{competitors:[...new Set([...(organization.competitors||[]),...(enhanced.competitors||[])])],stakeholders:[...new Set([...this.extractStakeholdersArray(organization.stakeholders),...this.extractStakeholdersArray(enhanced.stakeholders)])],topics:[...new Set([...(organization.topics||[]),...(enhanced.topics||[])])],keywords:[...new Set([...(organization.keywords||[]),...(enhanced.keywords||[])])],industryInsights:enhanced.industryInsights||{},enhancedAt:new Date().toISOString(),enhancementSource:'claude_fallback'});}}catch(error){console.error('Fallback enhancement also failed:',error);}// Return original if both enhancements fail\nreturn organization;}identifyCriticalAnalyses(mcpData,goals){var _mcpData$monitoring,_mcpData$monitoring$a;const critical=[];// Competitor movements are always critical\nif(mcpData.competitive&&Object.keys(mcpData.competitive).length>0){critical.push('competitor');}// Risk assessments need second opinions\nif((_mcpData$monitoring=mcpData.monitoring)!==null&&_mcpData$monitoring!==void 0&&(_mcpData$monitoring$a=_mcpData$monitoring.alerts)!==null&&_mcpData$monitoring$a!==void 0&&_mcpData$monitoring$a.some(a=>a.severity==='critical')){critical.push('predictive');}// Executive summaries for important goals\nif(goals.investor_relations||goals.crisis_preparedness){critical.push('executive_summary');}return critical;}async orchestrateMCPs(organization,timeframe){console.log('üìä Orchestrating MCPs for',organization.name);// Parallel MCP calls with enhanced parameters\nconst mcpCalls=[this.callMCP('pr','gather',{organization,timeframe,focus:'competitive_intelligence'}),this.callMCP('news','gather',{organization,timeframe,focus:'market_trends'}),this.callMCP('media','discover',{organization,timeframe,focus:'media_coverage'}),this.callMCP('opportunities','discover',{organization,timeframe,focus:'strategic_opportunities'}),this.callMCP('analytics','analyze',{organization,timeframe,metrics:['sentiment','reach','engagement']}),this.callMCP('relationships','assess',{organization,timeframe,stakeholders:'all'}),this.callMCP('monitor','check',{organization,timeframe,alert_level:'all'})];const results=await Promise.allSettled(mcpCalls);// Organize results by type with enhanced error handling\nconst mcpData={competitive:results[0].status==='fulfilled'?results[0].value:null,news:results[1].status==='fulfilled'?results[1].value:null,media:results[2].status==='fulfilled'?results[2].value:null,opportunities:results[3].status==='fulfilled'?results[3].value:null,analytics:results[4].status==='fulfilled'?results[4].value:null,stakeholder:results[5].status==='fulfilled'?results[5].value:null,monitoring:results[6].status==='fulfilled'?results[6].value:null};// Log successful data gathering\nconst successfulMCPs=Object.keys(mcpData).filter(k=>mcpData[k]);console.log('‚úÖ MCP data gathered from:',successfulMCPs.join(', '));// Warn about failed MCPs\nconst failedMCPs=Object.keys(mcpData).filter(k=>!mcpData[k]);if(failedMCPs.length>0){console.warn('‚ö†Ô∏è Failed to gather from:',failedMCPs.join(', '));}return mcpData;}async callMCP(server,method,params){try{const response=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/\").concat(server,\"-intelligence\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({method,params})});if(response.ok){const data=await response.json();if(data.success&&data.data){return data.data;}}return null;}catch(error){console.log(\"MCP \".concat(server,\".\").concat(method,\" failed:\"),error.message);return null;}}async synthesizeWithClaudeV2(mcpData,organization,goals,timeframe,criticalAnalyses,profile,intelligenceGuidance){var _profile$identity;console.log('üß† Synthesizing with Claude V2 specialized personas');console.log('üìã Profile context:',profile===null||profile===void 0?void 0:(_profile$identity=profile.identity)===null||_profile$identity===void 0?void 0:_profile$identity.name,profile===null||profile===void 0?void 0:profile.confidence_level);try{// Call different synthesis types in parallel with V2 endpoint, including profile context\nconst synthesisPromises=[this.callClaudeV2Synthesizer('competitor',mcpData.competitive,organization,goals,timeframe,criticalAnalyses.includes('competitor'),profile,intelligenceGuidance),this.callClaudeV2Synthesizer('stakeholder',{relationships:mcpData.stakeholder,media:mcpData.media},organization,goals,timeframe,criticalAnalyses.includes('stakeholder'),profile,intelligenceGuidance),this.callClaudeV2Synthesizer('narrative',{news:mcpData.news,media:mcpData.media,analytics:mcpData.analytics},organization,goals,timeframe,criticalAnalyses.includes('narrative'),profile,intelligenceGuidance),this.callClaudeV2Synthesizer('predictive',mcpData,organization,goals,timeframe,criticalAnalyses.includes('predictive'),profile,intelligenceGuidance)];const results=await Promise.allSettled(synthesisPromises);// Get executive summary based on all analyses\nconst allAnalyses={competitor:results[0].status==='fulfilled'?results[0].value:null,stakeholder:results[1].status==='fulfilled'?results[1].value:null,narrative:results[2].status==='fulfilled'?results[2].value:null,predictive:results[3].status==='fulfilled'?results[3].value:null};// Executive summary with second opinion and profile context\nconst executiveSummary=await this.callClaudeV2Synthesizer('executive_summary',allAnalyses,organization,goals,timeframe,criticalAnalyses.includes('executive_summary'),profile,intelligenceGuidance);// Track which personas were activated\nthis.updateActivePersonas(allAnalyses);return _objectSpread(_objectSpread({},allAnalyses),{},{executive_summary:executiveSummary,raw_mcp_data:mcpData,analysis_metadata:{timestamp:new Date().toISOString(),timeframe,personas_used:this.getActivePersonas(),critical_analyses:criticalAnalyses,confidence_scores:this.extractConfidenceScores(allAnalyses)}});}catch(error){console.error('Claude V2 synthesis failed:',error);// Fallback to structured MCP data if Claude fails\nreturn this.getFallbackAnalysis(mcpData);}}async callClaudeV2Synthesizer(intelligenceType,mcpData,organization,goals,timeframe){let requiresSecondOpinion=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let profile=arguments.length>6&&arguments[6]!==undefined?arguments[6]:null;let intelligenceGuidance=arguments.length>7&&arguments[7]!==undefined?arguments[7]:null;// Log what we're sending to Claude\nconsole.log(\"\\uD83D\\uDE80 Sending to Claude \".concat(intelligenceType,\":\"),{hasOrganization:!!organization,orgName:organization===null||organization===void 0?void 0:organization.name,industry:organization===null||organization===void 0?void 0:organization.industry,competitors:organization===null||organization===void 0?void 0:organization.competitors,stakeholders:organization===null||organization===void 0?void 0:organization.stakeholders,topics:organization===null||organization===void 0?void 0:organization.topics,goalsCount:Object.keys(goals||{}).filter(k=>goals[k]).length,hasMcpData:!!mcpData,hasProfile:!!profile,profileConfidence:profile===null||profile===void 0?void 0:profile.confidence_level});try{const response=await fetch(\"\".concat(this.supabaseUrl,\"/functions/v1/claude-intelligence-synthesizer-v2\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.supabaseKey)},body:JSON.stringify({intelligence_type:intelligenceType,mcp_data:mcpData,organization,goals,timeframe,requires_second_opinion:requiresSecondOpinion,profile:profile?{established_facts:profile.established_facts,monitoring_targets:profile.monitoring_targets,objectives:profile.objectives,context_flags:profile.context}:null,guidance:intelligenceGuidance})});if(response.ok){const data=await response.json();if(data.success&&data.analysis){// Log persona usage\nif(data.personas_used){console.log(\"\\uD83D\\uDCDD \".concat(intelligenceType,\" analyzed by:\"),data.personas_used.join(', '));}return data.analysis;}else{console.log(\"\\u26A0\\uFE0F Claude V2 returned success=false for \".concat(intelligenceType,\":\"),data.error);}}else{const errorText=await response.text();console.error(\"\\u274C Claude V2 HTTP error for \".concat(intelligenceType,\" (\").concat(response.status,\"):\"),errorText);}return null;}catch(error){console.error(\"Claude V2 synthesis for \".concat(intelligenceType,\" failed:\"),error);return null;}}async storeKeyInsights(intelligence,organization){var _intelligence$tabs,_intelligence$tabs$ov,_intelligence$tabs2,_intelligence$tabs2$o,_intelligence$tabs3,_intelligence$tabs3$c,_intelligence$tabs3$c2,_intelligence$tabs4,_intelligence$tabs4$o,_organization$name;// Store critical insights in memory for future reference\nconst keyInsights=[];// Extract from properly formatted tabs\nif((_intelligence$tabs=intelligence.tabs)!==null&&_intelligence$tabs!==void 0&&(_intelligence$tabs$ov=_intelligence$tabs.overview)!==null&&_intelligence$tabs$ov!==void 0&&_intelligence$tabs$ov.key_insights){intelligence.tabs.overview.key_insights.forEach(insight=>{keyInsights.push({type:'key_insight',content:typeof insight==='string'?insight:insight.insight||insight.content,confidence:0.8});});}// Extract critical alerts\nif((_intelligence$tabs2=intelligence.tabs)!==null&&_intelligence$tabs2!==void 0&&(_intelligence$tabs2$o=_intelligence$tabs2.overview)!==null&&_intelligence$tabs2$o!==void 0&&_intelligence$tabs2$o.critical_alerts){intelligence.tabs.overview.critical_alerts.forEach(alert=>{keyInsights.push({type:'critical_alert',content:typeof alert==='string'?alert:alert.message||alert.alert,confidence:0.9});});}// Extract competitive threats\nif((_intelligence$tabs3=intelligence.tabs)!==null&&_intelligence$tabs3!==void 0&&(_intelligence$tabs3$c=_intelligence$tabs3.competition)!==null&&_intelligence$tabs3$c!==void 0&&(_intelligence$tabs3$c2=_intelligence$tabs3$c.competitive_landscape)!==null&&_intelligence$tabs3$c2!==void 0&&_intelligence$tabs3$c2.competitor_profiles){Object.entries(intelligence.tabs.competition.competitive_landscape.competitor_profiles).forEach(_ref3=>{let[name,profile]=_ref3;if(profile.threat_level==='high'){keyInsights.push({type:'competitive_threat',content:\"High threat competitor: \".concat(name),confidence:0.85});}});}// Extract recommended actions\nif((_intelligence$tabs4=intelligence.tabs)!==null&&_intelligence$tabs4!==void 0&&(_intelligence$tabs4$o=_intelligence$tabs4.overview)!==null&&_intelligence$tabs4$o!==void 0&&_intelligence$tabs4$o.recommended_actions){intelligence.tabs.overview.recommended_actions.slice(0,3).forEach(action=>{keyInsights.push({type:'recommended_action',content:typeof action==='string'?action:action.action||action.recommendation,confidence:0.8});});}// Store in localStorage for now (would be database in production)\n// Use organization name as fallback if no ID exists\nconst memoryId=organization.id||((_organization$name=organization.name)===null||_organization$name===void 0?void 0:_organization$name.toLowerCase().replace(/\\s+/g,'_'));const memoryKey=\"signaldesk_memory_\".concat(memoryId);const existingMemory=JSON.parse(localStorage.getItem(memoryKey)||'[]');keyInsights.forEach(insight=>{existingMemory.push(_objectSpread(_objectSpread({},insight),{},{timestamp:new Date().toISOString(),organization_id:organization.id}));});// Keep only last 100 insights\nconst trimmedMemory=existingMemory.slice(-100);localStorage.setItem(memoryKey,JSON.stringify(trimmedMemory));console.log('üíæ Stored',keyInsights.length,'key insights in memory');}updateActivePersonas(analyses){// Track which personas provided valuable input\nthis.activePersonas={competitive_strategist:!!analyses.competitor,stakeholder_psychologist:!!analyses.stakeholder,narrative_architect:!!analyses.narrative,risk_prophet:!!analyses.predictive,opportunity_hunter:!!analyses.predictive,executive_synthesizer:!!analyses.executive_summary};}getActivePersonas(){return Object.entries(this.activePersonas).filter(_ref4=>{let[_,active]=_ref4;return active;}).map(_ref5=>{let[persona]=_ref5;return persona;});}extractConfidenceScores(analyses){const scores={};// Extract confidence from second opinions if available\nObject.entries(analyses).forEach(_ref6=>{let[key,value]=_ref6;if(value!==null&&value!==void 0&&value.consensus_level){scores[key]=value.consensus_level;}else if(value!==null&&value!==void 0&&value.overall_confidence){scores[key]=value.overall_confidence;}else{scores[key]=70;// Default confidence\n}});return scores;}getCachedAnalysis(key){const cached=this.analysisCache.get(key);if(cached&&Date.now()-cached.timestamp<this.cacheTimeout){return cached.data;}this.analysisCache.delete(key);return null;}cacheAnalysis(key,data){this.analysisCache.set(key,{data,timestamp:Date.now()});// Clean old cache entries\nif(this.analysisCache.size>10){const oldestKey=this.analysisCache.keys().next().value;this.analysisCache.delete(oldestKey);}}getFallbackAnalysis(mcpData){// Structured fallback when Claude is unavailable\nreturn{competitor:{key_movements:[],strategic_patterns:[\"Analysis temporarily unavailable\"],recommended_actions:[\"Continue monitoring\"],competitive_advantage:\"Under analysis\",priority_focus:\"Maintain current strategy\"},stakeholder:{stakeholder_map:[],coalition_opportunities:[],risk_stakeholders:[],engagement_strategies:[],immediate_actions:[\"Review stakeholder positions\"]},narrative:{goal_narrative_alignment:{},whitespace_opportunities:[],messaging_recommendations:[],emerging_narratives:[],narrative_strategy:\"Maintain consistent messaging\"},predictive:{goal_impact_forecast:{},predicted_competitor_moves:[],cascade_risks:[],goal_vulnerabilities:[],proactive_recommendations:[\"Continue monitoring\"]},executive_summary:{key_insight:\"Intelligence system processing\",immediate_priorities:[\"Gather more data\",\"Monitor developments\"],biggest_opportunity:\"Under analysis\",biggest_risk:\"Limited visibility\",resource_allocation:{},thirty_day_strategy:\"Maintain current operations while gathering intelligence\"},raw_mcp_data:mcpData,analysis_metadata:{timestamp:new Date().toISOString(),fallback_mode:true,personas_used:[],confidence_scores:{}}};}/**\n   * Transform orchestrated result to match the expected format\n   */transformOrchestratedResult(orchestratedResult,config){var _intelligence$executi,_insights$competitive,_insights$competitive2,_insights$competitive3,_insights$competitive4,_insights$competitive5,_insights$stakeholder,_insights$stakeholder2,_insights$stakeholder3,_insights$stakeholder4,_insights$opportunity,_insights$risk,_intelligence$competi,_insights$stakeholder5,_intelligence$key_ins,_intelligence$immedia,_intelligence$immedia2;// Use the properly processed insights and tabIntelligence from orchestratorService\nconst insights=orchestratedResult.insights||{};const tabIntelligence=orchestratedResult.tabIntelligence||{};const intelligence=orchestratedResult.intelligence||{};const stats=orchestratedResult.stats||orchestratedResult.statistics||{};const synthesized=intelligence.synthesized||{};console.log('üîÑ Transforming orchestrator result:',{hasInsights:Object.keys(insights).length,hasTabIntelligence:Object.keys(tabIntelligence).length,hasIntelligence:Object.keys(intelligence).length,hasSynthesized:Object.keys(synthesized).length,insightKeys:Object.keys(insights),tabKeys:Object.keys(tabIntelligence)});// Build the response in the expected format for ALL tabs\nconst transformed={// OVERVIEW TAB - Use the overview insights\noverview:tabIntelligence.overview||insights.overview||{executive_summary:intelligence.executive_summary,key_insights:intelligence.key_insights||[],critical_alerts:intelligence.alerts||[],recommended_actions:((_intelligence$executi=intelligence.executive_summary)===null||_intelligence$executi===void 0?void 0:_intelligence$executi.recommendations)||[]},// COMPETITION TAB - Use the processed competitive insights\ncompetition:tabIntelligence.competition||insights.competitive||{},competitor:tabIntelligence.competition||insights.competitive||{},// STAKEHOLDER TAB - Use the processed stakeholder insights\nstakeholders:tabIntelligence.stakeholders||insights.stakeholder||{},stakeholder:tabIntelligence.stakeholders||insights.stakeholder||{},// TOPICS TAB - Use the processed topics insights\ntopics:tabIntelligence.topics||insights.topics||{},narrative:tabIntelligence.topics||insights.topics||{},// PREDICTIONS TAB - Use the processed predictive insights\npredictions:tabIntelligence.predictions||insights.predictive||{},predictive:tabIntelligence.predictions||insights.predictive||{},// EXECUTIVE SUMMARY - Pass through the properly formatted overview\nexecutive_summary:tabIntelligence.overview||insights.overview||{executive_summary:intelligence.executive_summary,key_insights:intelligence.key_insights||[],critical_alerts:intelligence.alerts||[],recommended_actions:intelligence.recommendations||[]},// Tab-specific intelligence (for the tab components)\ntabIntelligence:{competition:{competitors:intelligence.competitors||((_insights$competitive=insights.competitive)===null||_insights$competitive===void 0?void 0:_insights$competitive.competitors)||[],positioning:intelligence.competitive_positioning||((_insights$competitive2=insights.competitive)===null||_insights$competitive2===void 0?void 0:_insights$competitive2.positioning)||{},advantages:((_insights$competitive3=insights.competitive)===null||_insights$competitive3===void 0?void 0:_insights$competitive3.advantages)||[],threats:((_insights$competitive4=insights.competitive)===null||_insights$competitive4===void 0?void 0:_insights$competitive4.threats)||[],recommendations:((_insights$competitive5=insights.competitive)===null||_insights$competitive5===void 0?void 0:_insights$competitive5.recommendations)||[]},stakeholders:{groups:((_insights$stakeholder=insights.stakeholder)===null||_insights$stakeholder===void 0?void 0:_insights$stakeholder.groups)||['investors','customers','employees','media'],sentiment:((_insights$stakeholder2=insights.stakeholder)===null||_insights$stakeholder2===void 0?void 0:_insights$stakeholder2.sentiment)||{},concerns:((_insights$stakeholder3=insights.stakeholder)===null||_insights$stakeholder3===void 0?void 0:_insights$stakeholder3.concerns)||[],communications:((_insights$stakeholder4=insights.stakeholder)===null||_insights$stakeholder4===void 0?void 0:_insights$stakeholder4.communications)||[]},topics:{trends:intelligence.industry_trends||[],emerging:intelligence.emerging_topics||[],discussions:intelligence.discussions||[]},predictions:insights.predictive||{trends:intelligence.industry_trends||[],scenarios:[],timeline:[]}},// Executive overview\nexecutiveOverview:intelligence.executive_summary||{key_insights:intelligence.key_insights||[],critical_actions:intelligence.critical_actions||[],opportunities:intelligence.immediate_opportunities||((_insights$opportunity=insights.opportunity)===null||_insights$opportunity===void 0?void 0:_insights$opportunity.immediate)||[],risks:intelligence.immediate_risks||((_insights$risk=insights.risk)===null||_insights$risk===void 0?void 0:_insights$risk.immediate)||[]},// MCP data (from orchestrator)\nraw_mcp_data:{competitors_identified:stats.competitors||((_intelligence$competi=intelligence.competitors)===null||_intelligence$competi===void 0?void 0:_intelligence$competi.length)||0,websites_scraped:stats.websites||0,articles_processed:stats.articles||0,sources_used:stats.sources||0,// Include raw data for debugging\nraw_intelligence:intelligence,raw_insights:insights},// Analysis metadata\nanalysis_metadata:{timestamp:orchestratedResult.timestamp||new Date().toISOString(),orchestrator_used:true,phases_completed:orchestratedResult.phases||orchestratedResult.phases_completed||{},organization:orchestratedResult.organization,industry:orchestratedResult.industry,confidence_scores:synthesized.overall_confidence?{overall:synthesized.overall_confidence}:{}},// Profile data\nprofile:{organization:config.organization||{},goals:config.goals||{},stakeholders:((_insights$stakeholder5=insights.stakeholder)===null||_insights$stakeholder5===void 0?void 0:_insights$stakeholder5.groups)||['investors','customers','employees','media'],topics:intelligence.topics||[],keywords:intelligence.keywords||[]}};// Extract and store key insights\nconst keyInsights=[];if(((_intelligence$key_ins=intelligence.key_insights)===null||_intelligence$key_ins===void 0?void 0:_intelligence$key_ins.length)>0){intelligence.key_insights.forEach(insight=>{keyInsights.push({type:'key_insight',content:insight,confidence:85});});}if(((_intelligence$immedia=intelligence.immediate_opportunities)===null||_intelligence$immedia===void 0?void 0:_intelligence$immedia.length)>0){keyInsights.push({type:'opportunity',content:\"\".concat(intelligence.immediate_opportunities.length,\" opportunities identified\"),confidence:80});}if(((_intelligence$immedia2=intelligence.immediate_risks)===null||_intelligence$immedia2===void 0?void 0:_intelligence$immedia2.length)>0){keyInsights.push({type:'risk',content:\"\".concat(intelligence.immediate_risks.length,\" risks detected\"),confidence:80});}// Store insights properly\nif(keyInsights.length>0){this.storeKeyInsights({key_insights:keyInsights},config.organization||{});}console.log('‚úÖ Transformed data with',keyInsights.length,'key insights');return transformed;}}export default new ClaudeIntelligenceServiceV2();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}