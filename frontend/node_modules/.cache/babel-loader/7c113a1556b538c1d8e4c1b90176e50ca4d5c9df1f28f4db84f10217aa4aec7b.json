{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/MemoryVault/SaveToMemoryVaultButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Save, Check, AlertCircle } from \"lucide-react\";\nimport { useMemoryVault } from \"../../hooks/useMemoryVault\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SaveToMemoryVaultButton = ({\n  content,\n  title,\n  type = \"document\",\n  source,\n  tags = [],\n  metadata = {},\n  folder_type = \"content\",\n  preview,\n  // Add preview prop\n  onSuccess,\n  // Note: renamed from onSaveSuccess to match MediaListBuilder usage\n  onSaveSuccess,\n  // Keep for backward compatibility\n  buttonText = \"Save to Vault\",\n  showNotification = true\n}) => {\n  _s();\n  const {\n    saveToMemoryVault,\n    isSaving\n  } = useMemoryVault();\n  const [saveStatus, setSaveStatus] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleSave = async () => {\n    if (!content) {\n      setMessage(\"No content to save\");\n      setSaveStatus(\"error\");\n      setTimeout(() => setSaveStatus(null), 3000);\n      return;\n    }\n    const result = await saveToMemoryVault({\n      title,\n      content,\n      type,\n      source,\n      tags,\n      metadata,\n      folder_type,\n      preview // Pass preview to the hook\n    });\n    if (result.success) {\n      setSaveStatus(\"success\");\n      setMessage(\"Saved to MemoryVault!\");\n\n      // Support both callback prop names\n      if (onSuccess) {\n        onSuccess(result.item);\n      } else if (onSaveSuccess) {\n        onSaveSuccess(result.item);\n      }\n    } else {\n      setSaveStatus(\"error\");\n      setMessage(result.error || \"Failed to save\");\n    }\n    setTimeout(() => {\n      setSaveStatus(null);\n      setMessage(\"\");\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      disabled: isSaving || !content,\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"8px\",\n        padding: \"8px 16px\",\n        backgroundColor: saveStatus === \"success\" ? \"#10b981\" : saveStatus === \"error\" ? \"#ef4444\" : \"#4f46e5\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        cursor: isSaving || !content ? \"not-allowed\" : \"pointer\",\n        opacity: isSaving || !content ? 0.6 : 1,\n        transition: \"all 0.2s\",\n        fontSize: \"14px\",\n        fontWeight: \"500\"\n      },\n      children: [saveStatus === \"success\" ? /*#__PURE__*/_jsxDEV(Check, {\n        style: {\n          width: \"16px\",\n          height: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : saveStatus === \"error\" ? /*#__PURE__*/_jsxDEV(AlertCircle, {\n        style: {\n          width: \"16px\",\n          height: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Save, {\n        style: {\n          width: \"16px\",\n          height: \"16px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), isSaving ? \"Saving...\" : saveStatus ? message : buttonText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SaveToMemoryVaultButton, \"fITSZC19o+8PnrbZvJt2SfmMN4A=\", false, function () {\n  return [useMemoryVault];\n});\n_c = SaveToMemoryVaultButton;\nexport default SaveToMemoryVaultButton;\nvar _c;\n$RefreshReg$(_c, \"SaveToMemoryVaultButton\");","map":{"version":3,"names":["React","useState","Save","Check","AlertCircle","useMemoryVault","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveToMemoryVaultButton","content","title","type","source","tags","metadata","folder_type","preview","onSuccess","onSaveSuccess","buttonText","showNotification","_s","saveToMemoryVault","isSaving","saveStatus","setSaveStatus","message","setMessage","handleSave","setTimeout","result","success","item","error","children","onClick","disabled","style","display","alignItems","gap","padding","backgroundColor","color","border","borderRadius","cursor","opacity","transition","fontSize","fontWeight","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/MemoryVault/SaveToMemoryVaultButton.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Save, Check, AlertCircle } from \"lucide-react\";\nimport { useMemoryVault } from \"../../hooks/useMemoryVault\";\n\nconst SaveToMemoryVaultButton = ({\n  content,\n  title,\n  type = \"document\",\n  source,\n  tags = [],\n  metadata = {},\n  folder_type = \"content\",\n  preview, // Add preview prop\n  onSuccess, // Note: renamed from onSaveSuccess to match MediaListBuilder usage\n  onSaveSuccess, // Keep for backward compatibility\n  buttonText = \"Save to Vault\",\n  showNotification = true,\n}) => {\n  const { saveToMemoryVault, isSaving } = useMemoryVault();\n  const [saveStatus, setSaveStatus] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSave = async () => {\n    if (!content) {\n      setMessage(\"No content to save\");\n      setSaveStatus(\"error\");\n      setTimeout(() => setSaveStatus(null), 3000);\n      return;\n    }\n\n    const result = await saveToMemoryVault({\n      title,\n      content,\n      type,\n      source,\n      tags,\n      metadata,\n      folder_type,\n      preview, // Pass preview to the hook\n    });\n\n    if (result.success) {\n      setSaveStatus(\"success\");\n      setMessage(\"Saved to MemoryVault!\");\n\n      // Support both callback prop names\n      if (onSuccess) {\n        onSuccess(result.item);\n      } else if (onSaveSuccess) {\n        onSaveSuccess(result.item);\n      }\n    } else {\n      setSaveStatus(\"error\");\n      setMessage(result.error || \"Failed to save\");\n    }\n\n    setTimeout(() => {\n      setSaveStatus(null);\n      setMessage(\"\");\n    }, 3000);\n  };\n\n  return (\n    <>\n      <button\n        onClick={handleSave}\n        disabled={isSaving || !content}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"8px\",\n          padding: \"8px 16px\",\n          backgroundColor:\n            saveStatus === \"success\"\n              ? \"#10b981\"\n              : saveStatus === \"error\"\n              ? \"#ef4444\"\n              : \"#4f46e5\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          cursor: isSaving || !content ? \"not-allowed\" : \"pointer\",\n          opacity: isSaving || !content ? 0.6 : 1,\n          transition: \"all 0.2s\",\n          fontSize: \"14px\",\n          fontWeight: \"500\",\n        }}\n      >\n        {saveStatus === \"success\" ? (\n          <Check style={{ width: \"16px\", height: \"16px\" }} />\n        ) : saveStatus === \"error\" ? (\n          <AlertCircle style={{ width: \"16px\", height: \"16px\" }} />\n        ) : (\n          <Save style={{ width: \"16px\", height: \"16px\" }} />\n        )}\n        {isSaving ? \"Saving...\" : saveStatus ? message : buttonText}\n      </button>\n    </>\n  );\n};\n\nexport default SaveToMemoryVaultButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}