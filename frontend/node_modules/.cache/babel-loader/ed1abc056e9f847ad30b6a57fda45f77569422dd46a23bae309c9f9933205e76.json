{"ast":null,"code":"// RailwayPlatform.js - Railway UI with proper 2-panel layout and full drag/resize\nimport React,{useState,useEffect,useRef}from'react';import{useParams,useNavigate}from'react-router-dom';import{useProject}from'../contexts/ProjectContext';import ContentGeneratorModule from'./ContentGeneratorModule';import API_BASE_URL from'../config/api';import{Bot,Brain,FileText,Users,TrendingUp,AlertTriangle,BarChart3,Archive,Send,ChevronLeft,ChevronRight,X,Sparkles,MessageSquare,Shield,Target,Menu,GripVertical,Maximize2,Minimize2,Move}from'lucide-react';import{Panel,PanelGroup,PanelResizeHandle}from'react-resizable-panels';import'./RailwayPlatform.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RailwayPlatform=()=>{const{projectId}=useParams();const navigate=useNavigate();const{activeProject}=useProject();const messagesEndRef=useRef(null);// Panel states\nconst[selectedFeature,setSelectedFeature]=useState(null);const[isFeatureExpanded,setIsFeatureExpanded]=useState(false);// AI Assistant state\nconst[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[isEditingMode,setIsEditingMode]=useState(false);// Content Generator state\nconst[generatedContent,setGeneratedContent]=useState('');const[currentContentType,setCurrentContentType]=useState(null);// Layout preferences\nconst[layoutMode,setLayoutMode]=useState('default');// default, focus, compact\nconst[aiPanelSize,setAiPanelSize]=useState(30);// percentage\n// Feature definitions - all SignalDesk components\nconst features=[{id:'content-generator',name:'Content Generator',icon:FileText,color:'#8b5cf6',description:'AI-powered content creation',status:'active',component:ContentGeneratorModule},{id:'media-intelligence',name:'Media Intelligence',icon:Users,color:'#10b981',description:'Journalist discovery & outreach',status:'pending',path:\"/projects/\".concat(projectId,\"/media-list\")},{id:'campaign-intelligence',name:'Campaign Intelligence',icon:Brain,color:'#f59e0b',description:'Strategic campaign planning',status:'pending',path:\"/projects/\".concat(projectId,\"/campaign-intelligence-enhanced\")},{id:'memory-vault',name:'Memory Vault',icon:Archive,color:'#6366f1',description:'Project knowledge base',status:'pending',path:\"/projects/\".concat(projectId)},{id:'stakeholder-intelligence',name:'Stakeholder Intelligence',icon:TrendingUp,color:'#ec4899',description:'Stakeholder monitoring',status:'pending',path:\"/projects/\".concat(projectId,\"/stakeholder-intelligence\")},{id:'crisis-command',name:'Crisis Command',icon:AlertTriangle,color:'#ef4444',description:'Crisis management',status:'pending',path:\"/projects/\".concat(projectId,\"/crisis-command\")},{id:'reports',name:'Reports & Analytics',icon:BarChart3,color:'#14b8a6',description:'Performance metrics',status:'pending',path:\"/projects/\".concat(projectId,\"/reports\")}];// Initialize AI Assistant\nuseEffect(()=>{setMessages([{id:Date.now(),type:'assistant',content:'Welcome to SignalDesk Railway UI! Select a feature to get started. You can drag and resize panels to customize your workspace.',timestamp:new Date()}]);// Load saved layout preferences\nconst savedLayout=localStorage.getItem('railwayLayoutPrefs');if(savedLayout){const prefs=JSON.parse(savedLayout);setLayoutMode(prefs.layoutMode||'default');setAiPanelSize(prefs.aiPanelSize||30);}},[]);// Save layout preferences\nconst saveLayoutPreferences=size=>{const prefs={layoutMode,aiPanelSize:size};localStorage.setItem('railwayLayoutPrefs',JSON.stringify(prefs));};// Handle feature selection\nconst handleFeatureSelect=feature=>{if(feature.status==='pending'&&feature.path){navigate(feature.path);return;}// Expand feature panel and set selected feature\nsetSelectedFeature(feature);setIsFeatureExpanded(true);// Inform AI Assistant\nconst contextMsg={id:Date.now(),type:'system',content:\"Activated \".concat(feature.name,\". \").concat(feature.description),timestamp:new Date()};setMessages(prev=>[...prev,contextMsg]);};// Handle messages from Content Generator\nconst handleContentGeneratorMessage=msg=>{if(msg.type==='edit_request'){setIsEditingMode(true);handleEditRequest(msg);}else if(msg.type==='user'&&msg.content){const userMsg={id:Date.now(),type:'user',content:msg.content,timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);sendMessage(msg.content);}};// Handle edit requests\nconst handleEditRequest=async request=>{const{content:editPrompt,currentContent,metadata}=request;const userMsg={id:Date.now(),type:'user',content:\"Please edit this content: \\\"\".concat(editPrompt,\"\\\"\"),timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);setLoading(true);try{const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/unified-chat\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({message:\"Edit the following content based on this request: \\\"\".concat(editPrompt,\"\\\"\\n\\nCurrent content:\\n\").concat(currentContent),mode:'content',context:{folder:'content-generator',editing:true,contentType:metadata===null||metadata===void 0?void 0:metadata.contentType,tone:metadata===null||metadata===void 0?void 0:metadata.tone}})});const data=await response.json();if(data.success){const aiMsg={id:Date.now(),type:'assistant',content:data.response,timestamp:new Date()};setMessages(prev=>[...prev,aiMsg]);setGeneratedContent(data.response);}}catch(error){console.error('Error processing edit:',error);}finally{setLoading(false);}};// Send message to AI\nconst sendMessage=async text=>{if(!(text!==null&&text!==void 0&&text.trim()))return;setLoading(true);try{const isEditing=isEditingMode&&generatedContent;const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/unified-chat\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({message:isEditing?\"Continue editing this content based on: \\\"\".concat(text,\"\\\"\\n\\nCurrent content:\\n\").concat(generatedContent):text,mode:(selectedFeature===null||selectedFeature===void 0?void 0:selectedFeature.id)==='content-generator'?'content':'general',context:{folder:selectedFeature===null||selectedFeature===void 0?void 0:selectedFeature.id,editing:isEditing}})});const data=await response.json();if(data.success){const aiMsg={id:Date.now(),type:'assistant',content:data.response,timestamp:new Date()};setMessages(prev=>[...prev,aiMsg]);if(isActualGeneratedContent(data.response)){setGeneratedContent(data.response);detectContentType(data.response);}}}catch(error){console.error('Error sending message:',error);}finally{setLoading(false);}};// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();if(!message.trim()||loading)return;const userMsg={id:Date.now(),type:'user',content:message,timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);sendMessage(message);setMessage('');};// Check if response is actual generated content\nconst isActualGeneratedContent=text=>{if(!text||text.length<100)return false;const indicators=['FOR IMMEDIATE RELEASE','Dear ','Subject:','Q:','Question:','#','We are pleased'];return indicators.some(indicator=>text.includes(indicator));};// Detect content type\nconst detectContentType=text=>{if(text.includes('FOR IMMEDIATE RELEASE')){setCurrentContentType('press-release');}else if(text.includes('Q:')||text.includes('Question:')){setCurrentContentType('qa-doc');}else if(text.includes('#')){setCurrentContentType('social-post');}};// Update content from Content Generator\nconst handleContentUpdate=newContent=>{setGeneratedContent(newContent);if(newContent&&!isEditingMode){setIsEditingMode(false);}};// Auto-scroll messages\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);// Layout presets\nconst applyLayoutPreset=preset=>{setLayoutMode(preset);switch(preset){case'focus':setAiPanelSize(20);break;case'compact':setAiPanelSize(25);break;case'balanced':setAiPanelSize(35);break;default:setAiPanelSize(30);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"railway-platform\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"layout-controls\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"preset-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>applyLayoutPreset('default'),className:layoutMode==='default'?'active':'',title:\"Default Layout\",children:/*#__PURE__*/_jsx(Maximize2,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>applyLayoutPreset('focus'),className:layoutMode==='focus'?'active':'',title:\"Focus Mode\",children:/*#__PURE__*/_jsx(Target,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>applyLayoutPreset('compact'),className:layoutMode==='compact'?'active':'',title:\"Compact Mode\",children:/*#__PURE__*/_jsx(Minimize2,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>applyLayoutPreset('balanced'),className:layoutMode==='balanced'?'active':'',title:\"Balanced Mode\",children:/*#__PURE__*/_jsx(Menu,{size:16})})]})}),/*#__PURE__*/_jsxs(PanelGroup,{direction:\"horizontal\",className:\"railway-panel-group\",onLayout:sizes=>{if(sizes[0]){setAiPanelSize(sizes[0]);saveLayoutPreferences(sizes[0]);}},children:[/*#__PURE__*/_jsx(Panel,{defaultSize:aiPanelSize,minSize:15,maxSize:50,className:\"ai-assistant-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"railway-terminal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"terminal-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"terminal-title\",children:[/*#__PURE__*/_jsx(Bot,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:\"Adaptive AI Assistant\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mode-badge\",children:selectedFeature?\"\".concat(selectedFeature.name,\" Mode\"):'General Mode'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"terminal-controls\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"control-dot close\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-dot minimize\"}),/*#__PURE__*/_jsx(\"span\",{className:\"control-dot maximize\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"terminal-messages\",children:[messages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.type),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[msg.type==='assistant'&&/*#__PURE__*/_jsx(Bot,{size:16,className:\"message-icon\"}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.content})]}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(msg.timestamp).toLocaleTimeString()})]},msg.id)),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"typing-text\",children:\"AI is thinking...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:\"terminal-input-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"input-wrapper\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"prompt-symbol\",children:\"\\u276F\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:isEditingMode?\"Continue editing...\":\"Ask me anything...\",disabled:loading,className:\"terminal-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading||!message.trim(),className:\"send-button\",children:/*#__PURE__*/_jsx(Send,{size:16})})]})})]})}),/*#__PURE__*/_jsx(PanelResizeHandle,{className:\"railway-resize-handle\",children:/*#__PURE__*/_jsx(\"div\",{className:\"resize-handle-inner\",children:/*#__PURE__*/_jsx(GripVertical,{size:16})})}),/*#__PURE__*/_jsx(Panel,{className:\"feature-workspace-panel\",children:isFeatureExpanded&&selectedFeature?/*#__PURE__*/// Expanded Feature View\n_jsxs(\"div\",{className:\"feature-expanded\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feature-expanded-header\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setIsFeatureExpanded(false);setSelectedFeature(null);setIsEditingMode(false);setGeneratedContent('');},className:\"back-button\",children:[/*#__PURE__*/_jsx(ChevronLeft,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:\"Back to Features\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"feature-title\",children:[/*#__PURE__*/React.createElement(selectedFeature.icon,{size:20,color:selectedFeature.color}),/*#__PURE__*/_jsx(\"span\",{children:selectedFeature.name})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"feature-expanded-content\",children:selectedFeature.id==='content-generator'&&/*#__PURE__*/_jsx(ContentGeneratorModule,{onAIMessage:handleContentGeneratorMessage,generatedContent:generatedContent,onContentUpdate:handleContentUpdate,currentContentType:currentContentType})})]}):/*#__PURE__*/// Feature List View\n_jsxs(\"div\",{className:\"feature-list-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feature-list-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Features & Tools\"}),/*#__PURE__*/_jsx(\"p\",{children:(activeProject===null||activeProject===void 0?void 0:activeProject.name)||'Select a feature to begin'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"feature-list\",children:features.map(feature=>{const Icon=feature.icon;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleFeatureSelect(feature),className:\"feature-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"feature-icon\",style:{backgroundColor:\"\".concat(feature.color,\"20\")},children:/*#__PURE__*/_jsx(Icon,{size:20,style:{color:feature.color}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"feature-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feature-name\",children:[feature.name,feature.status==='active'&&/*#__PURE__*/_jsx(\"span\",{className:\"status-badge\",children:\"READY\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"feature-description\",children:feature.description})]}),/*#__PURE__*/_jsx(ChevronRight,{size:16,className:\"feature-arrow\"})]},feature.id);})})]})})]})]});};export default RailwayPlatform;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}