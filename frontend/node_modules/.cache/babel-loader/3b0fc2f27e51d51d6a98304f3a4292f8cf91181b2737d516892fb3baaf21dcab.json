{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/StakeholderIntelligenceHub.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Brain, Users, Activity, BarChart3, Target, Network, Bot, Settings, CheckCircle, AlertCircle, TrendingUp, Plus, X, Zap, Sparkles, Megaphone, Shield, Lightbulb, Building2 } from 'lucide-react';\nimport EnhancedAIStrategyAdvisor from './EnhancedAIStrategyAdvisor';\nimport PRStrategyAdvisor from './PRStrategyAdvisor';\nimport PRMonitoringDashboard from './PRMonitoringDashboard';\nimport OpportunityDiscoveryDashboard from '../OpportunityDiscovery/OpportunityDiscoveryDashboard';\nimport AgenticMonitoring from './AgenticMonitoring';\nimport StakeholderAIAdvisor from './StakeholderAIAdvisor';\nimport IntelligenceConfiguration from '../Intelligence/IntelligenceConfiguration';\nimport IntelligenceSummaryDashboard from '../Intelligence/IntelligenceSummaryDashboard';\nimport OpportunityDetection from '../Intelligence/OpportunityDetection';\nimport apiService from '../../services/apiService';\nimport { useIntelligence } from '../../context/IntelligenceContext';\n// Using new backend-integrated Intelligence Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StakeholderIntelligenceHub = () => {\n  _s();\n  var _stakeholderStrategy$, _stakeholderStrategy$2, _stakeholderStrategy$3, _stakeholderStrategy$4;\n  console.log('🚨🚨🚨 STAKEHOLDER HUB LOADED - VERSION 2.0 🚨🚨🚨');\n\n  // Get context\n  const {\n    organizationData,\n    updateOrganizationData\n  } = useIntelligence();\n  const [activeTab, setActiveTab] = useState('monitoring'); // Start with configuration\n  const [isPRMode, setIsPRMode] = useState(true); // Default to PR mode\n  const [stakeholderStrategy, setStakeholderStrategy] = useState(organizationData.strategy);\n  const [intelligenceFindings, setIntelligenceFindings] = useState([]);\n  const [customSources, setCustomSources] = useState([]);\n  const [priorityStakeholders, setPriorityStakeholders] = useState([]);\n  const [showAddStakeholder, setShowAddStakeholder] = useState(false);\n  const [newStakeholderName, setNewStakeholderName] = useState('');\n  const [newStakeholderDescription, setNewStakeholderDescription] = useState('');\n  const [isRunningAnalysis, setIsRunningAnalysis] = useState(false);\n  const [organizationId, setOrganizationId] = useState(organizationData.id || 'demo-org-id'); // Use context or default\n\n  // Debug stakeholder strategy changes\n  useEffect(() => {\n    console.log('StakeholderStrategy changed:', stakeholderStrategy);\n    if (stakeholderStrategy && stakeholderStrategy.stakeholderGroups) {\n      console.log('Stakeholder groups:', stakeholderStrategy.stakeholderGroups);\n    }\n  }, [stakeholderStrategy]);\n  const handleStrategyComplete = async data => {\n    var _data$stakeholderGrou;\n    console.log('Strategy completed:', data);\n    console.log('Stakeholder groups received:', data.stakeholderGroups);\n    console.log('Number of stakeholder groups:', (_data$stakeholderGrou = data.stakeholderGroups) === null || _data$stakeholderGrou === void 0 ? void 0 : _data$stakeholderGrou.length);\n\n    // Set organization ID immediately so dashboard can use it\n    const orgId = data.organizationId || `org-${Date.now()}`;\n    setOrganizationId(orgId);\n    console.log('Organization ID set to:', orgId);\n\n    // Update context with organization data\n    updateOrganizationData({\n      id: orgId,\n      name: data.company,\n      targets: data.stakeholders || [],\n      strategy: data\n    });\n\n    // Create targets in backend for the stakeholders\n    if (data.stakeholders && data.stakeholders.length > 0 && orgId) {\n      try {\n        const targetPromises = data.stakeholders.map(stakeholder => {\n          const targetData = {\n            organization_id: orgId,\n            name: stakeholder.name,\n            type: stakeholder.type === 'competitor' ? 'competitor' : 'topic',\n            priority: stakeholder.priority || 'medium',\n            keywords: stakeholder.keywords || [],\n            topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n            sources: Array.isArray(stakeholder.sources) ? stakeholder.sources : [],\n            description: stakeholder.reason || `Monitor ${stakeholder.name}`,\n            active: true\n          };\n          return apiService.createTarget(targetData);\n        });\n        const createdTargets = await Promise.all(targetPromises);\n        console.log('Created targets in backend:', createdTargets);\n\n        // Create individual stakeholder groups for each competitor and topic\n        const stakeholderGroups = [];\n\n        // Process each stakeholder - they already come as individual items\n        console.log('🔍 Processing stakeholders:', data.stakeholders);\n        data.stakeholders.forEach((stakeholder, idx) => {\n          console.log('🔍 Stakeholder:', stakeholder);\n          // Each stakeholder already represents a single competitor or topic\n          stakeholderGroups.push({\n            id: stakeholder.id || `${stakeholder.type}-${idx}`,\n            name: stakeholder.name,\n            type: stakeholder.type,\n            influence: stakeholder.influence || (stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5),\n            interest: stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5,\n            keywords: stakeholder.keywords || [stakeholder.name.toLowerCase()],\n            topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n            preIndexed: stakeholder.preIndexed || false,\n            sourceCount: stakeholder.sourceCount || 0\n          });\n        });\n\n        // Set stakeholder strategy for source configuration\n        const monitoringStrategy = {\n          organizationId: orgId,\n          company: data.company,\n          stakeholderGroups: stakeholderGroups,\n          stakeholders: data.stakeholders\n        };\n        setStakeholderStrategy(monitoringStrategy);\n        console.log('🎯 Set stakeholder strategy with', stakeholderGroups.length, 'individual items');\n        console.log('🎯 Individual targets created:');\n        stakeholderGroups.forEach(g => console.log(`  - ${g.type}: ${g.name}`));\n        console.log('🎯 Full strategy:', monitoringStrategy);\n\n        // Navigate to monitoring tab after setting strategy\n        setTimeout(() => {\n          setActiveTab('monitoring');\n          console.log('🎯 Navigated to monitoring tab');\n        }, 100);\n      } catch (error) {\n        console.error('Error creating targets:', error);\n      }\n    }\n\n    // Check if this is from PR Strategy Advisor\n    if (data.prFocus) {\n      var _monitoringStrategy$s;\n      // Handle PR-specific strategy\n      // orgId already set above\n      const monitoringStrategy = {\n        ...data,\n        organizationId: orgId,\n        profile: {\n          company: data.company,\n          industry: data.industry || 'PR/Communications',\n          businessModel: data.userType === 'brand' ? 'Brand' : 'Agency',\n          keyCompetitors: data.competitors || [],\n          keyRisks: [],\n          opportunities: [],\n          overview: data.objectives || ''\n        },\n        stakeholderGroups: data.stakeholderGroups,\n        // Use the properly formatted stakeholder groups\n        stakeholders: data.stakeholders,\n        // Keep raw stakeholders too\n        industry: data.industry || 'PR/Communications',\n        companyProfile: data.companyProfile,\n        goals: data.goals,\n        sources: data.sources || []\n      };\n      console.log('Setting stakeholder strategy with', (_monitoringStrategy$s = monitoringStrategy.stakeholderGroups) === null || _monitoringStrategy$s === void 0 ? void 0 : _monitoringStrategy$s.length, 'groups');\n      setStakeholderStrategy(monitoringStrategy);\n\n      // Set priority stakeholders for tracking - include ALL stakeholders\n      if (data.stakeholderGroups && data.stakeholderGroups.length > 0) {\n        const allStakeholders = data.stakeholderGroups.map(s => String(s.id || s.name));\n        console.log('Setting priority stakeholders:', allStakeholders);\n        setPriorityStakeholders(allStakeholders);\n      }\n      setActiveTab('monitoring'); // Go to source configuration\n      return;\n    }\n\n    // Original handling for general strategy\n    const stakeholderGroups = data.stakeholders.map((stakeholder, idx) => ({\n      id: stakeholder.id || `stakeholder-${idx}`,\n      name: stakeholder.name,\n      type: stakeholder.type,\n      influence: stakeholder.influence || (stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5),\n      interest: stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5,\n      sentiment: 'neutral',\n      currentSentiment: 5,\n      targetSentiment: 8,\n      engagementLevel: 6,\n      trend: 'stable',\n      concerns: [stakeholder.reason],\n      influencers: [],\n      keywords: stakeholder.keywords || [],\n      topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n      goals: stakeholder.goals || '',\n      fears: stakeholder.fears || '',\n      preIndexed: stakeholder.preIndexed || false,\n      sourceCount: stakeholder.sourceCount || 0\n    }));\n\n    // Extract all keywords from stakeholders\n    const allKeywords = data.stakeholders.reduce((keywords, stakeholder) => {\n      return [...keywords, ...(stakeholder.keywords || [])];\n    }, [data.company]);\n\n    // Remove duplicates\n    const uniqueKeywords = [...new Set(allKeywords)];\n    console.log('Extracted keywords:', uniqueKeywords);\n\n    // Organization ID already set above\n\n    // Transform into monitoring strategy\n    const monitoringStrategy = {\n      organizationId: orgId,\n      profile: {\n        company: data.company,\n        industry: data.industry,\n        businessModel: 'B2B/B2C',\n        keyCompetitors: [],\n        keyRisks: [],\n        opportunities: [],\n        overview: data.overview\n      },\n      strategy: {\n        keywords: uniqueKeywords,\n        sources: {\n          rss: ['https://techcrunch.com/feed/', 'https://www.theverge.com/rss/index.xml', 'https://feeds.feedburner.com/venturebeat/SZYF', 'https://www.prnewswire.com/rss/news-releases-list.rss'],\n          categories: ['business', 'technology', 'press-releases']\n        },\n        alertThresholds: {\n          sentiment: 'negative',\n          volume: 10,\n          urgency: 'high'\n        },\n        reviewFrequency: 'Daily'\n      },\n      stakeholderGroups: stakeholderGroups,\n      aiStrategy: null,\n      timeframe: '6 months',\n      resources: 'moderate',\n      enhancedFeatures: data.enhancedFeatures || {\n        preIndexedCount: stakeholderGroups.filter(s => s.preIndexed).length,\n        totalSources: stakeholderGroups.reduce((acc, s) => acc + s.sourceCount, 0),\n        researchAgentsEnabled: true\n      }\n    };\n    console.log('Created monitoring strategy:', monitoringStrategy);\n    console.log('Stakeholder groups in strategy:', monitoringStrategy.stakeholderGroups);\n    setStakeholderStrategy(monitoringStrategy);\n    // Initialize with all selected stakeholders - ensure they are strings\n    const allStakeholders = stakeholderGroups.map(s => {\n      const id = String(s.id || s.name);\n      console.log(`Stakeholder ${s.name} will have ID: ${id}`);\n      return id;\n    });\n    console.log('Setting all selected stakeholders:', allStakeholders);\n    setPriorityStakeholders(allStakeholders);\n    // Tab navigation happens after strategy is set\n  };\n  const tabs = [{\n    id: 'monitoring',\n    name: 'Intelligence Configuration',\n    icon: Settings\n  }, {\n    id: 'dashboard',\n    name: 'Intelligence Summary',\n    icon: BarChart3\n  }, {\n    id: 'detection',\n    name: 'Opportunity Detection',\n    icon: Zap\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      background: '#f9fafb',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        borderBottom: '1px solid #e5e7eb',\n        padding: '0 1.5rem',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          height: '5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '48px',\n              height: '48px',\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              borderRadius: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              boxShadow: '0 4px 6px rgba(102, 126, 234, 0.3)'\n            },\n            children: /*#__PURE__*/_jsxDEV(Zap, {\n              size: 28,\n              style: {\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              margin: 0,\n              fontSize: '2rem',\n              fontWeight: '800',\n              color: '#111827',\n              letterSpacing: '-0.025em'\n            },\n            children: \"Opportunity Engine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), stakeholderStrategy && stakeholderStrategy.stakeholderGroups && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '1rem',\n            padding: '0.5rem 1rem',\n            background: '#f9fafb',\n            borderRadius: '0.5rem',\n            border: '1px solid #e5e7eb'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.75rem',\n              color: '#6b7280'\n            },\n            children: \"Strategic Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '40px',\n              height: '40px',\n              borderRadius: '50%',\n              background: `conic-gradient(#6366f1 0deg, #6366f1 ${(stakeholderStrategy.stakeholderGroups ? Math.round(stakeholderStrategy.stakeholderGroups.reduce((acc, s) => acc + s.currentSentiment / s.targetSentiment * 100, 0) / stakeholderStrategy.stakeholderGroups.length) : 0) * 3.6}deg, #e5e7eb ${(stakeholderStrategy.stakeholderGroups ? Math.round(stakeholderStrategy.stakeholderGroups.reduce((acc, s) => acc + s.currentSentiment / s.targetSentiment * 100, 0) / stakeholderStrategy.stakeholderGroups.length) : 0) * 3.6}deg)`,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '32px',\n                height: '32px',\n                borderRadius: '50%',\n                background: 'white',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '0.75rem',\n                fontWeight: 'bold',\n                color: '#111827'\n              },\n              children: [stakeholderStrategy.stakeholderGroups ? Math.round(stakeholderStrategy.stakeholderGroups.reduce((acc, s) => acc + s.currentSentiment / s.targetSentiment * 100, 0) / stakeholderStrategy.stakeholderGroups.length) : 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '0.625rem',\n              color: '#6b7280'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [((_stakeholderStrategy$ = stakeholderStrategy.stakeholderGroups) === null || _stakeholderStrategy$ === void 0 ? void 0 : _stakeholderStrategy$.filter(s => s.currentSentiment >= 7).length) || 0, \" positive\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [((_stakeholderStrategy$2 = stakeholderStrategy.stakeholderGroups) === null || _stakeholderStrategy$2 === void 0 ? void 0 : _stakeholderStrategy$2.filter(s => s.currentSentiment < 5).length) || 0, \" need work\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '0.5rem',\n          height: '3rem',\n          alignItems: 'stretch'\n        },\n        children: tabs.map(tab => {\n          const Icon = tab.icon;\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab.id),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.5rem',\n              padding: '0 1rem',\n              border: 'none',\n              borderBottom: activeTab === tab.id ? '2px solid #6366f1' : '2px solid transparent',\n              background: 'transparent',\n              color: activeTab === tab.id ? '#6366f1' : '#6b7280',\n              fontWeight: activeTab === tab.id ? '600' : '400',\n              fontSize: '0.875rem',\n              cursor: 'pointer',\n              transition: 'all 0.15s ease',\n              whiteSpace: 'nowrap'\n            },\n            onMouseEnter: e => {\n              if (activeTab !== tab.id) {\n                e.currentTarget.style.color = '#4b5563';\n                e.currentTarget.style.borderBottomColor = '#e5e7eb';\n              }\n            },\n            onMouseLeave: e => {\n              if (activeTab !== tab.id) {\n                e.currentTarget.style.color = '#6b7280';\n                e.currentTarget.style.borderBottomColor = 'transparent';\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), tab.name]\n          }, tab.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        overflow: 'auto',\n        height: '100%'\n      },\n      children: [activeTab === 'discovery' && /*#__PURE__*/_jsxDEV(OpportunityDiscoveryDashboard, {\n        client: (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.companyProfile) || (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.profile) || {\n          company: (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.company) || 'Your Company',\n          industry: (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.industry) || 'technology',\n          expertiseAreas: (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : (_stakeholderStrategy$3 = stakeholderStrategy.companyProfile) === null || _stakeholderStrategy$3 === void 0 ? void 0 : _stakeholderStrategy$3.expertiseAreas) || {\n            'AI': 0.8,\n            'cloud': 0.7,\n            'security': 0.6\n          },\n          competitors: (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : (_stakeholderStrategy$4 = stakeholderStrategy.companyProfile) === null || _stakeholderStrategy$4 === void 0 ? void 0 : _stakeholderStrategy$4.competitors) || ['Microsoft', 'Google', 'Amazon'],\n          userType: stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.userType,\n          objectives: stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.objectives,\n          goals: stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.goals\n        },\n        onOpportunitySelect: opportunity => {\n          console.log('Opportunity selected:', opportunity);\n          // Could transition to PR strategy or content creation\n          setActiveTab('pr-strategy');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), activeTab === 'pr-strategy' && /*#__PURE__*/_jsxDEV(PRStrategyAdvisor, {\n        onStrategyComplete: handleStrategyComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), activeTab === 'pr-monitoring' && /*#__PURE__*/_jsxDEV(PRMonitoringDashboard, {\n        strategy: stakeholderStrategy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this), activeTab === 'dashboard' && organizationId && /*#__PURE__*/_jsxDEV(IntelligenceSummaryDashboard, {\n        organizationId: organizationId,\n        organizationName: organizationData.name || (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.company) || \"Your Organization\"\n      }, organizationId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), activeTab === 'dashboard' && !organizationId && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '2rem',\n          textAlign: 'center',\n          color: '#6b7280'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please complete the Intelligence Targets setup first to configure monitoring.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), activeTab === 'detection' && organizationId && /*#__PURE__*/_jsxDEV(OpportunityDetection, {\n        organizationId: organizationId,\n        organizationName: organizationData.name || (stakeholderStrategy === null || stakeholderStrategy === void 0 ? void 0 : stakeholderStrategy.company) || \"Your Organization\"\n      }, organizationId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), activeTab === 'detection' && !organizationId && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '2rem',\n          textAlign: 'center',\n          color: '#6b7280'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please complete the Intelligence Targets setup first to access Opportunity Detection.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), activeTab === 'monitoring' && /*#__PURE__*/_jsxDEV(IntelligenceConfiguration, {\n        stakeholderStrategy: stakeholderStrategy,\n        onSourcesUpdate: sources => setCustomSources(sources),\n        organizationId: organizationId,\n        onSetupComplete: handleStrategyComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(StakeholderIntelligenceHub, \"58ce+u5hU8YnPj7c+yy+0RjuhpI=\", false, function () {\n  return [useIntelligence];\n});\n_c = StakeholderIntelligenceHub;\nexport default StakeholderIntelligenceHub;\nvar _c;\n$RefreshReg$(_c, \"StakeholderIntelligenceHub\");","map":{"version":3,"names":["React","useState","useEffect","Brain","Users","Activity","BarChart3","Target","Network","Bot","Settings","CheckCircle","AlertCircle","TrendingUp","Plus","X","Zap","Sparkles","Megaphone","Shield","Lightbulb","Building2","EnhancedAIStrategyAdvisor","PRStrategyAdvisor","PRMonitoringDashboard","OpportunityDiscoveryDashboard","AgenticMonitoring","StakeholderAIAdvisor","IntelligenceConfiguration","IntelligenceSummaryDashboard","OpportunityDetection","apiService","useIntelligence","jsxDEV","_jsxDEV","StakeholderIntelligenceHub","_s","_stakeholderStrategy$","_stakeholderStrategy$2","_stakeholderStrategy$3","_stakeholderStrategy$4","console","log","organizationData","updateOrganizationData","activeTab","setActiveTab","isPRMode","setIsPRMode","stakeholderStrategy","setStakeholderStrategy","strategy","intelligenceFindings","setIntelligenceFindings","customSources","setCustomSources","priorityStakeholders","setPriorityStakeholders","showAddStakeholder","setShowAddStakeholder","newStakeholderName","setNewStakeholderName","newStakeholderDescription","setNewStakeholderDescription","isRunningAnalysis","setIsRunningAnalysis","organizationId","setOrganizationId","id","stakeholderGroups","handleStrategyComplete","data","_data$stakeholderGrou","length","orgId","Date","now","name","company","targets","stakeholders","targetPromises","map","stakeholder","targetData","organization_id","type","priority","keywords","topics","monitoringTopics","sources","Array","isArray","description","reason","active","createTarget","createdTargets","Promise","all","forEach","idx","push","influence","interest","toLowerCase","preIndexed","sourceCount","monitoringStrategy","g","setTimeout","error","prFocus","_monitoringStrategy$s","profile","industry","businessModel","userType","keyCompetitors","competitors","keyRisks","opportunities","overview","objectives","companyProfile","goals","allStakeholders","s","String","sentiment","currentSentiment","targetSentiment","engagementLevel","trend","concerns","influencers","fears","allKeywords","reduce","uniqueKeywords","Set","rss","categories","alertThresholds","volume","urgency","reviewFrequency","aiStrategy","timeframe","resources","enhancedFeatures","preIndexedCount","filter","totalSources","acc","researchAgentsEnabled","tabs","icon","style","height","display","flexDirection","background","fontFamily","children","borderBottom","padding","boxShadow","alignItems","justifyContent","gap","width","borderRadius","size","color","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","fontWeight","letterSpacing","border","Math","round","tab","Icon","onClick","cursor","transition","whiteSpace","onMouseEnter","e","currentTarget","borderBottomColor","onMouseLeave","flex","overflow","client","expertiseAreas","onOpportunitySelect","opportunity","onStrategyComplete","organizationName","textAlign","onSourcesUpdate","onSetupComplete","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/StakeholderIntelligence/StakeholderIntelligenceHub.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Brain, Users, Activity, BarChart3, Target, Network, Bot, Settings, CheckCircle, AlertCircle, TrendingUp, Plus, X, Zap, Sparkles, Megaphone, Shield, Lightbulb, Building2 } from 'lucide-react';\nimport EnhancedAIStrategyAdvisor from './EnhancedAIStrategyAdvisor';\nimport PRStrategyAdvisor from './PRStrategyAdvisor';\nimport PRMonitoringDashboard from './PRMonitoringDashboard';\nimport OpportunityDiscoveryDashboard from '../OpportunityDiscovery/OpportunityDiscoveryDashboard';\nimport AgenticMonitoring from './AgenticMonitoring';\nimport StakeholderAIAdvisor from './StakeholderAIAdvisor';\nimport IntelligenceConfiguration from '../Intelligence/IntelligenceConfiguration';\nimport IntelligenceSummaryDashboard from '../Intelligence/IntelligenceSummaryDashboard';\nimport OpportunityDetection from '../Intelligence/OpportunityDetection';\nimport apiService from '../../services/apiService';\nimport { useIntelligence } from '../../context/IntelligenceContext';\n// Using new backend-integrated Intelligence Dashboard\n\nconst StakeholderIntelligenceHub = () => {\n  console.log('🚨🚨🚨 STAKEHOLDER HUB LOADED - VERSION 2.0 🚨🚨🚨');\n  \n  // Get context\n  const { organizationData, updateOrganizationData } = useIntelligence();\n  \n  const [activeTab, setActiveTab] = useState('monitoring'); // Start with configuration\n  const [isPRMode, setIsPRMode] = useState(true); // Default to PR mode\n  const [stakeholderStrategy, setStakeholderStrategy] = useState(organizationData.strategy);\n  const [intelligenceFindings, setIntelligenceFindings] = useState([]);\n  const [customSources, setCustomSources] = useState([]);\n  const [priorityStakeholders, setPriorityStakeholders] = useState([]);\n  const [showAddStakeholder, setShowAddStakeholder] = useState(false);\n  const [newStakeholderName, setNewStakeholderName] = useState('');\n  const [newStakeholderDescription, setNewStakeholderDescription] = useState('');\n  const [isRunningAnalysis, setIsRunningAnalysis] = useState(false);\n  const [organizationId, setOrganizationId] = useState(organizationData.id || 'demo-org-id'); // Use context or default\n\n  // Debug stakeholder strategy changes\n  useEffect(() => {\n    console.log('StakeholderStrategy changed:', stakeholderStrategy);\n    if (stakeholderStrategy && stakeholderStrategy.stakeholderGroups) {\n      console.log('Stakeholder groups:', stakeholderStrategy.stakeholderGroups);\n    }\n  }, [stakeholderStrategy]);\n\n  const handleStrategyComplete = async (data) => {\n    console.log('Strategy completed:', data);\n    console.log('Stakeholder groups received:', data.stakeholderGroups);\n    console.log('Number of stakeholder groups:', data.stakeholderGroups?.length);\n    \n    // Set organization ID immediately so dashboard can use it\n    const orgId = data.organizationId || `org-${Date.now()}`;\n    setOrganizationId(orgId);\n    console.log('Organization ID set to:', orgId);\n    \n    // Update context with organization data\n    updateOrganizationData({\n      id: orgId,\n      name: data.company,\n      targets: data.stakeholders || [],\n      strategy: data\n    });\n    \n    // Create targets in backend for the stakeholders\n    if (data.stakeholders && data.stakeholders.length > 0 && orgId) {\n      try {\n        const targetPromises = data.stakeholders.map(stakeholder => {\n          const targetData = {\n            organization_id: orgId,\n            name: stakeholder.name,\n            type: stakeholder.type === 'competitor' ? 'competitor' : 'topic',\n            priority: stakeholder.priority || 'medium',\n            keywords: stakeholder.keywords || [],\n            topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n            sources: Array.isArray(stakeholder.sources) ? stakeholder.sources : [],\n            description: stakeholder.reason || `Monitor ${stakeholder.name}`,\n            active: true\n          };\n          \n          return apiService.createTarget(targetData);\n        });\n        \n        const createdTargets = await Promise.all(targetPromises);\n        console.log('Created targets in backend:', createdTargets);\n        \n        // Create individual stakeholder groups for each competitor and topic\n        const stakeholderGroups = [];\n        \n        // Process each stakeholder - they already come as individual items\n        console.log('🔍 Processing stakeholders:', data.stakeholders);\n        data.stakeholders.forEach((stakeholder, idx) => {\n          console.log('🔍 Stakeholder:', stakeholder);\n          // Each stakeholder already represents a single competitor or topic\n          stakeholderGroups.push({\n            id: stakeholder.id || `${stakeholder.type}-${idx}`,\n            name: stakeholder.name,\n            type: stakeholder.type,\n            influence: stakeholder.influence || (stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5),\n            interest: stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5,\n            keywords: stakeholder.keywords || [stakeholder.name.toLowerCase()],\n            topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n            preIndexed: stakeholder.preIndexed || false,\n            sourceCount: stakeholder.sourceCount || 0\n          });\n        });\n        \n        // Set stakeholder strategy for source configuration\n        const monitoringStrategy = {\n          organizationId: orgId,\n          company: data.company,\n          stakeholderGroups: stakeholderGroups,\n          stakeholders: data.stakeholders\n        };\n        \n        setStakeholderStrategy(monitoringStrategy);\n        console.log('🎯 Set stakeholder strategy with', stakeholderGroups.length, 'individual items');\n        console.log('🎯 Individual targets created:');\n        stakeholderGroups.forEach(g => console.log(`  - ${g.type}: ${g.name}`));\n        console.log('🎯 Full strategy:', monitoringStrategy);\n        \n        // Navigate to monitoring tab after setting strategy\n        setTimeout(() => {\n          setActiveTab('monitoring');\n          console.log('🎯 Navigated to monitoring tab');\n        }, 100);\n      } catch (error) {\n        console.error('Error creating targets:', error);\n      }\n    }\n    \n    // Check if this is from PR Strategy Advisor\n    if (data.prFocus) {\n      // Handle PR-specific strategy\n      // orgId already set above\n      const monitoringStrategy = {\n        ...data,\n        organizationId: orgId,\n        profile: {\n          company: data.company,\n          industry: data.industry || 'PR/Communications',\n          businessModel: data.userType === 'brand' ? 'Brand' : 'Agency',\n          keyCompetitors: data.competitors || [],\n          keyRisks: [],\n          opportunities: [],\n          overview: data.objectives || ''\n        },\n        stakeholderGroups: data.stakeholderGroups, // Use the properly formatted stakeholder groups\n        stakeholders: data.stakeholders, // Keep raw stakeholders too\n        industry: data.industry || 'PR/Communications',\n        companyProfile: data.companyProfile,\n        goals: data.goals,\n        sources: data.sources || []\n      };\n      \n      console.log('Setting stakeholder strategy with', monitoringStrategy.stakeholderGroups?.length, 'groups');\n      setStakeholderStrategy(monitoringStrategy);\n      \n      // Set priority stakeholders for tracking - include ALL stakeholders\n      if (data.stakeholderGroups && data.stakeholderGroups.length > 0) {\n        const allStakeholders = data.stakeholderGroups.map(s => String(s.id || s.name));\n        console.log('Setting priority stakeholders:', allStakeholders);\n        setPriorityStakeholders(allStakeholders);\n      }\n      \n      setActiveTab('monitoring'); // Go to source configuration\n      return;\n    }\n    \n    // Original handling for general strategy\n    const stakeholderGroups = data.stakeholders.map((stakeholder, idx) => ({\n      id: stakeholder.id || `stakeholder-${idx}`,\n      name: stakeholder.name,\n      type: stakeholder.type,\n      influence: stakeholder.influence || (stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5),\n      interest: stakeholder.priority === 'high' ? 9 : stakeholder.priority === 'medium' ? 7 : 5,\n      sentiment: 'neutral',\n      currentSentiment: 5,\n      targetSentiment: 8,\n      engagementLevel: 6,\n      trend: 'stable',\n      concerns: [stakeholder.reason],\n      influencers: [],\n      keywords: stakeholder.keywords || [],\n      topics: stakeholder.topics || stakeholder.monitoringTopics || [],\n      goals: stakeholder.goals || '',\n      fears: stakeholder.fears || '',\n      preIndexed: stakeholder.preIndexed || false,\n      sourceCount: stakeholder.sourceCount || 0\n    }));\n    \n    // Extract all keywords from stakeholders\n    const allKeywords = data.stakeholders.reduce((keywords, stakeholder) => {\n      return [...keywords, ...(stakeholder.keywords || [])];\n    }, [data.company]);\n    \n    // Remove duplicates\n    const uniqueKeywords = [...new Set(allKeywords)];\n    \n    console.log('Extracted keywords:', uniqueKeywords);\n    \n    // Organization ID already set above\n    \n    // Transform into monitoring strategy\n    const monitoringStrategy = {\n      organizationId: orgId,\n      profile: {\n        company: data.company,\n        industry: data.industry,\n        businessModel: 'B2B/B2C',\n        keyCompetitors: [],\n        keyRisks: [],\n        opportunities: [],\n        overview: data.overview\n      },\n      strategy: {\n        keywords: uniqueKeywords,\n        sources: {\n          rss: [\n            'https://techcrunch.com/feed/',\n            'https://www.theverge.com/rss/index.xml',\n            'https://feeds.feedburner.com/venturebeat/SZYF',\n            'https://www.prnewswire.com/rss/news-releases-list.rss'\n          ],\n          categories: ['business', 'technology', 'press-releases']\n        },\n        alertThresholds: {\n          sentiment: 'negative',\n          volume: 10,\n          urgency: 'high'\n        },\n        reviewFrequency: 'Daily'\n      },\n      stakeholderGroups: stakeholderGroups,\n      aiStrategy: null,\n      timeframe: '6 months',\n      resources: 'moderate',\n      enhancedFeatures: data.enhancedFeatures || {\n        preIndexedCount: stakeholderGroups.filter(s => s.preIndexed).length,\n        totalSources: stakeholderGroups.reduce((acc, s) => acc + s.sourceCount, 0),\n        researchAgentsEnabled: true\n      }\n    };\n\n    console.log('Created monitoring strategy:', monitoringStrategy);\n    console.log('Stakeholder groups in strategy:', monitoringStrategy.stakeholderGroups);\n    setStakeholderStrategy(monitoringStrategy);\n    // Initialize with all selected stakeholders - ensure they are strings\n    const allStakeholders = stakeholderGroups.map(s => {\n      const id = String(s.id || s.name);\n      console.log(`Stakeholder ${s.name} will have ID: ${id}`);\n      return id;\n    });\n    console.log('Setting all selected stakeholders:', allStakeholders);\n    setPriorityStakeholders(allStakeholders);\n    // Tab navigation happens after strategy is set\n  };\n\n  const tabs = [\n    { id: 'monitoring', name: 'Intelligence Configuration', icon: Settings },\n    { id: 'dashboard', name: 'Intelligence Summary', icon: BarChart3 },\n    { id: 'detection', name: 'Opportunity Detection', icon: Zap }\n  ];\n\n  return (\n    <div style={{ \n      height: '100vh', \n      display: 'flex',\n      flexDirection: 'column',\n      background: '#f9fafb',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    }}>\n      {/* Header with Tabs */}\n      <div style={{\n        background: 'white',\n        borderBottom: '1px solid #e5e7eb',\n        padding: '0 1.5rem',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n      }}>\n        <div style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          height: '5rem'\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n            <div style={{\n              width: '48px',\n              height: '48px',\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              borderRadius: '0.75rem',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              boxShadow: '0 4px 6px rgba(102, 126, 234, 0.3)'\n            }}>\n              <Zap size={28} style={{ color: 'white' }} />\n            </div>\n            <h1 style={{ \n              margin: 0, \n              fontSize: '2rem', \n              fontWeight: '800',\n              color: '#111827',\n              letterSpacing: '-0.025em'\n            }}>\n              Opportunity Engine\n            </h1>\n          </div>\n          \n          {/* Strategic Health Score - Mini Version */}\n          {stakeholderStrategy && stakeholderStrategy.stakeholderGroups && (\n            <div style={{\n              display: 'flex',\n              alignItems: 'center',\n              gap: '1rem',\n              padding: '0.5rem 1rem',\n              background: '#f9fafb',\n              borderRadius: '0.5rem',\n              border: '1px solid #e5e7eb'\n            }}>\n              <div style={{ fontSize: '0.75rem', color: '#6b7280' }}>\n                Strategic Health\n              </div>\n              <div style={{\n                width: '40px',\n                height: '40px',\n                borderRadius: '50%',\n                background: `conic-gradient(#6366f1 0deg, #6366f1 ${(stakeholderStrategy.stakeholderGroups ? \n                  Math.round(\n                    stakeholderStrategy.stakeholderGroups.reduce((acc, s) => \n                      acc + (s.currentSentiment / s.targetSentiment) * 100, 0\n                    ) / stakeholderStrategy.stakeholderGroups.length\n                  ) : 0) * 3.6}deg, #e5e7eb ${(stakeholderStrategy.stakeholderGroups ? \n                  Math.round(\n                    stakeholderStrategy.stakeholderGroups.reduce((acc, s) => \n                      acc + (s.currentSentiment / s.targetSentiment) * 100, 0\n                    ) / stakeholderStrategy.stakeholderGroups.length\n                  ) : 0) * 3.6}deg)`,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              }}>\n                <div style={{\n                  width: '32px',\n                  height: '32px',\n                  borderRadius: '50%',\n                  background: 'white',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '0.75rem',\n                  fontWeight: 'bold',\n                  color: '#111827'\n                }}>\n                  {stakeholderStrategy.stakeholderGroups ? \n                    Math.round(\n                      stakeholderStrategy.stakeholderGroups.reduce((acc, s) => \n                        acc + (s.currentSentiment / s.targetSentiment) * 100, 0\n                      ) / stakeholderStrategy.stakeholderGroups.length\n                    ) : 0}%\n                </div>\n              </div>\n              <div style={{ fontSize: '0.625rem', color: '#6b7280' }}>\n                <div>{stakeholderStrategy.stakeholderGroups?.filter(s => s.currentSentiment >= 7).length || 0} positive</div>\n                <div>{stakeholderStrategy.stakeholderGroups?.filter(s => s.currentSentiment < 5).length || 0} need work</div>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        {/* Tab Bar */}\n        <div style={{\n          display: 'flex',\n          gap: '0.5rem',\n          height: '3rem',\n          alignItems: 'stretch'\n        }}>\n          {tabs.map(tab => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '0.5rem',\n                  padding: '0 1rem',\n                  border: 'none',\n                  borderBottom: activeTab === tab.id ? '2px solid #6366f1' : '2px solid transparent',\n                  background: 'transparent',\n                  color: activeTab === tab.id ? '#6366f1' : '#6b7280',\n                  fontWeight: activeTab === tab.id ? '600' : '400',\n                  fontSize: '0.875rem',\n                  cursor: 'pointer',\n                  transition: 'all 0.15s ease',\n                  whiteSpace: 'nowrap'\n                }}\n                onMouseEnter={(e) => {\n                  if (activeTab !== tab.id) {\n                    e.currentTarget.style.color = '#4b5563';\n                    e.currentTarget.style.borderBottomColor = '#e5e7eb';\n                  }\n                }}\n                onMouseLeave={(e) => {\n                  if (activeTab !== tab.id) {\n                    e.currentTarget.style.color = '#6b7280';\n                    e.currentTarget.style.borderBottomColor = 'transparent';\n                  }\n                }}\n              >\n                <Icon size={16} />\n                {tab.name}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div style={{ flex: 1, overflow: 'auto', height: '100%' }}>\n        \n        {/* Opportunity Discovery - Manual Mode */}\n        {activeTab === 'discovery' && (\n          <OpportunityDiscoveryDashboard \n            client={stakeholderStrategy?.companyProfile || stakeholderStrategy?.profile || {\n              company: stakeholderStrategy?.company || 'Your Company',\n              industry: stakeholderStrategy?.industry || 'technology',\n              expertiseAreas: stakeholderStrategy?.companyProfile?.expertiseAreas || { 'AI': 0.8, 'cloud': 0.7, 'security': 0.6 },\n              competitors: stakeholderStrategy?.companyProfile?.competitors || ['Microsoft', 'Google', 'Amazon'],\n              userType: stakeholderStrategy?.userType,\n              objectives: stakeholderStrategy?.objectives,\n              goals: stakeholderStrategy?.goals\n            }}\n            onOpportunitySelect={(opportunity) => {\n              console.log('Opportunity selected:', opportunity);\n              // Could transition to PR strategy or content creation\n              setActiveTab('pr-strategy');\n            }}\n          />\n        )}\n        \n        {/* PR Mode Components */}\n        {activeTab === 'pr-strategy' && (\n          <PRStrategyAdvisor onStrategyComplete={handleStrategyComplete} />\n        )}\n        \n        {activeTab === 'pr-monitoring' && (\n          <PRMonitoringDashboard strategy={stakeholderStrategy} />\n        )}\n        \n        \n        {/* Intelligence Dashboard - 24hr News Summary */}\n        {activeTab === 'dashboard' && organizationId && (\n          <IntelligenceSummaryDashboard \n            organizationId={organizationId}\n            organizationName={organizationData.name || stakeholderStrategy?.company || \"Your Organization\"}\n            key={organizationId} // Force re-render when org ID changes\n          />\n        )}\n        {activeTab === 'dashboard' && !organizationId && (\n          <div style={{ padding: '2rem', textAlign: 'center', color: '#6b7280' }}>\n            <p>Please complete the Intelligence Targets setup first to configure monitoring.</p>\n          </div>\n        )}\n\n        {/* Opportunity Detection - Real-time Signal Monitoring */}\n        {activeTab === 'detection' && organizationId && (\n          <OpportunityDetection \n            organizationId={organizationId}\n            organizationName={organizationData.name || stakeholderStrategy?.company || \"Your Organization\"}\n            key={organizationId} // Force re-render when org ID changes\n          />\n        )}\n        {activeTab === 'detection' && !organizationId && (\n          <div style={{ padding: '2rem', textAlign: 'center', color: '#6b7280' }}>\n            <p>Please complete the Intelligence Targets setup first to access Opportunity Detection.</p>\n          </div>\n        )}\n\n        {activeTab === 'monitoring' && (\n          <IntelligenceConfiguration \n            stakeholderStrategy={stakeholderStrategy}\n            onSourcesUpdate={(sources) => setCustomSources(sources)}\n            organizationId={organizationId}\n            onSetupComplete={handleStrategyComplete}\n          />\n        )}\n\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default StakeholderIntelligenceHub;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}