{"ast":null,"code":"import _objectSpread from\"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// RailwayCanvas.js - True Railway-style canvas interface with draggable service cards\nimport React,{useState,useEffect,useRef,useCallback}from'react';import{useParams,useNavigate}from'react-router-dom';import{useProject}from'../contexts/ProjectContext';import ContentGeneratorModule from'./ContentGeneratorModule';import API_BASE_URL from'../config/api';import{Bot,Brain,FileText,Users,TrendingUp,AlertTriangle,BarChart3,Archive,Send,ChevronLeft,ChevronRight,X,Sparkles,MessageSquare,Shield,Target,Menu,GripVertical,Maximize2,Minimize2,Move,GitBranch,Activity,Database,Circle,Square}from'lucide-react';import'./RailwayCanvas.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const RailwayCanvas=()=>{const{projectId}=useParams();const navigate=useNavigate();const{activeProject}=useProject();const messagesEndRef=useRef(null);const canvasRef=useRef(null);// Canvas state\nconst[services,setServices]=useState([]);const[connections,setConnections]=useState([]);const[selectedService,setSelectedService]=useState(null);const[isDragging,setIsDragging]=useState(false);const[draggedService,setDraggedService]=useState(null);const[dragOffset,setDragOffset]=useState({x:0,y:0});// AI Assistant state - PRESERVING ALL FUNCTIONALITY\nconst[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[isEditingMode,setIsEditingMode]=useState(false);// Content Generator state - PRESERVING ALL FUNCTIONALITY\nconst[generatedContent,setGeneratedContent]=useState('');const[currentContentType,setCurrentContentType]=useState(null);// Service definitions as cards on canvas\nconst serviceDefinitions=[{id:'ai-assistant',name:'Adaptive AI Assistant',icon:Bot,color:'#8b5cf6',description:'Your intelligent co-pilot',position:{x:50,y:50},type:'core',status:'active'},{id:'content-generator',name:'Content Generator',icon:FileText,color:'#10b981',description:'AI-powered content creation',position:{x:400,y:50},type:'feature',status:'active',component:ContentGeneratorModule},{id:'media-intelligence',name:'Media Intelligence',icon:Users,color:'#3b82f6',description:'Journalist discovery & outreach',position:{x:750,y:50},type:'feature',status:'pending',path:\"/projects/\".concat(projectId,\"/media-list\")},{id:'campaign-intelligence',name:'Campaign Intelligence',icon:Brain,color:'#f59e0b',description:'Strategic campaign planning',position:{x:400,y:250},type:'feature',status:'pending',path:\"/projects/\".concat(projectId,\"/campaign-intelligence-enhanced\")},{id:'memory-vault',name:'Memory Vault',icon:Database,color:'#6366f1',description:'Project knowledge base',position:{x:50,y:250},type:'storage',status:'active',path:\"/projects/\".concat(projectId)},{id:'stakeholder-intelligence',name:'Stakeholder Intelligence',icon:TrendingUp,color:'#ec4899',description:'Stakeholder monitoring',position:{x:750,y:250},type:'feature',status:'pending',path:\"/projects/\".concat(projectId,\"/stakeholder-intelligence\")},{id:'crisis-command',name:'Crisis Command',icon:AlertTriangle,color:'#ef4444',description:'Crisis management',position:{x:400,y:450},type:'feature',status:'pending',path:\"/projects/\".concat(projectId,\"/crisis-command\")}];// Initialize services and connections on mount\nuseEffect(()=>{// Load saved positions or use defaults\nconst savedPositions=localStorage.getItem('railwayCanvasPositions');const positions=savedPositions?JSON.parse(savedPositions):{};const initialServices=serviceDefinitions.map(service=>_objectSpread(_objectSpread({},service),{},{position:positions[service.id]||service.position}));setServices(initialServices);// Define connections between services (Railway-style tracks)\nsetConnections([{from:'ai-assistant',to:'content-generator',type:'bidirectional'},{from:'ai-assistant',to:'memory-vault',type:'data'},{from:'memory-vault',to:'content-generator',type:'context'},{from:'content-generator',to:'media-intelligence',type:'output'},{from:'campaign-intelligence',to:'content-generator',type:'strategy'},{from:'memory-vault',to:'campaign-intelligence',type:'data'},{from:'stakeholder-intelligence',to:'crisis-command',type:'alert'}]);// Initialize AI Assistant\nsetMessages([{id:Date.now(),type:'assistant',content:'Welcome to SignalDesk Canvas! Drag services to arrange your workspace. Click on services to activate them. I can control all connected services.',timestamp:new Date()}]);},[]);// Save positions when services move\nconst savePositions=useCallback(()=>{const positions={};services.forEach(service=>{positions[service.id]=service.position;});localStorage.setItem('railwayCanvasPositions',JSON.stringify(positions));},[services]);// Handle drag start\nconst handleDragStart=(e,service)=>{setIsDragging(true);setDraggedService(service);const rect=e.currentTarget.getBoundingClientRect();setDragOffset({x:e.clientX-rect.left,y:e.clientY-rect.top});};// Handle drag move\nconst handleDragMove=useCallback(e=>{if(!isDragging||!draggedService)return;const canvasRect=canvasRef.current.getBoundingClientRect();const newPosition={x:e.clientX-canvasRect.left-dragOffset.x,y:e.clientY-canvasRect.top-dragOffset.y};setServices(prev=>prev.map(service=>service.id===draggedService.id?_objectSpread(_objectSpread({},service),{},{position:newPosition}):service));},[isDragging,draggedService,dragOffset]);// Handle drag end\nconst handleDragEnd=useCallback(()=>{if(isDragging){savePositions();}setIsDragging(false);setDraggedService(null);},[isDragging,savePositions]);// Mouse event handlers\nuseEffect(()=>{if(isDragging){window.addEventListener('mousemove',handleDragMove);window.addEventListener('mouseup',handleDragEnd);return()=>{window.removeEventListener('mousemove',handleDragMove);window.removeEventListener('mouseup',handleDragEnd);};}},[isDragging,handleDragMove,handleDragEnd]);// Handle service selection\nconst handleServiceClick=service=>{if(isDragging)return;if(service.status==='pending'&&service.path){navigate(service.path);return;}setSelectedService(service);// Inform AI Assistant about service activation\nconst contextMsg={id:Date.now(),type:'system',content:\"Activated \".concat(service.name,\". \").concat(service.description),timestamp:new Date()};setMessages(prev=>[...prev,contextMsg]);};// CRITICAL: Handle messages from Content Generator - EXACT RESTORATION\nconst handleContentGeneratorMessage=msg=>{console.log('RailwayCanvas: Received message from ContentGenerator:',msg);if(msg.type==='edit_request'){setIsEditingMode(true);handleEditRequest(msg);}else if(msg.type==='user'&&msg.content){const userMsg={id:Date.now(),type:'user',content:msg.content,timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);sendMessage(msg.content);}};// CRITICAL: Handle edit requests - EXACT RESTORATION\nconst handleEditRequest=async request=>{const{content:editPrompt,currentContent,metadata}=request;const userMsg={id:Date.now(),type:'user',content:\"Please edit this content: \\\"\".concat(editPrompt,\"\\\"\"),timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);setLoading(true);try{const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/unified-chat\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({message:\"Edit the following content based on this request: \\\"\".concat(editPrompt,\"\\\"\\n\\nCurrent content:\\n\").concat(currentContent),mode:'content',context:{folder:'content-generator',editing:true,contentType:metadata===null||metadata===void 0?void 0:metadata.contentType,tone:metadata===null||metadata===void 0?void 0:metadata.tone}})});const data=await response.json();if(data.success){const aiMsg={id:Date.now(),type:'assistant',content:data.response,timestamp:new Date()};setMessages(prev=>[...prev,aiMsg]);setGeneratedContent(data.response);}}catch(error){console.error('Error processing edit:',error);const errorMsg={id:Date.now(),type:'error',content:'Failed to process edit request. Please try again.',timestamp:new Date()};setMessages(prev=>[...prev,errorMsg]);}finally{setLoading(false);}};// CRITICAL: Send message to AI - EXACT RESTORATION\nconst sendMessage=async text=>{if(!(text!==null&&text!==void 0&&text.trim()))return;setLoading(true);try{const isEditing=isEditingMode&&generatedContent;const response=await fetch(\"\".concat(API_BASE_URL,\"/ai/unified-chat\"),{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify({message:isEditing?\"Continue editing this content based on: \\\"\".concat(text,\"\\\"\\n\\nCurrent content:\\n\").concat(generatedContent):text,mode:(selectedService===null||selectedService===void 0?void 0:selectedService.id)==='content-generator'?'content':'general',context:{folder:selectedService===null||selectedService===void 0?void 0:selectedService.id,editing:isEditing}})});const data=await response.json();if(data.success){const aiMsg={id:Date.now(),type:'assistant',content:data.response,timestamp:new Date()};setMessages(prev=>[...prev,aiMsg]);// Check if content was generated\nif(isActualGeneratedContent(data.response)){setGeneratedContent(data.response);detectContentType(data.response);}}}catch(error){console.error('Error sending message:',error);const errorMsg={id:Date.now(),type:'error',content:'Failed to send message. Please check your connection.',timestamp:new Date()};setMessages(prev=>[...prev,errorMsg]);}finally{setLoading(false);}};// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();if(!message.trim()||loading)return;const userMsg={id:Date.now(),type:'user',content:message,timestamp:new Date()};setMessages(prev=>[...prev,userMsg]);sendMessage(message);setMessage('');};// Check if response is actual generated content\nconst isActualGeneratedContent=text=>{if(!text||text.length<100)return false;const indicators=['FOR IMMEDIATE RELEASE','Dear ','Subject:','Q:','Question:','#','We are pleased'];return indicators.some(indicator=>text.includes(indicator));};// Detect content type\nconst detectContentType=text=>{if(text.includes('FOR IMMEDIATE RELEASE')){setCurrentContentType('press-release');}else if(text.includes('Q:')||text.includes('Question:')){setCurrentContentType('qa-doc');}else if(text.includes('#')){setCurrentContentType('social-post');}};// Update content from Content Generator\nconst handleContentUpdate=newContent=>{setGeneratedContent(newContent);if(newContent&&!isEditingMode){setIsEditingMode(false);}};// Auto-scroll messages\nuseEffect(()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});},[messages]);// Render connection lines between services\nconst renderConnections=()=>{return connections.map((conn,idx)=>{const fromService=services.find(s=>s.id===conn.from);const toService=services.find(s=>s.id===conn.to);if(!fromService||!toService)return null;const x1=fromService.position.x+150;// Card width / 2\nconst y1=fromService.position.y+60;// Card height / 2\nconst x2=toService.position.x+150;const y2=toService.position.y+60;// Calculate curve control points for Railway-style tracks\nconst midX=(x1+x2)/2;const midY=(y1+y2)/2;const controlOffset=Math.abs(x2-x1)*0.1;return/*#__PURE__*/_jsxs(\"g\",{className:\"connection-line\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M \".concat(x1,\" \").concat(y1,\" Q \").concat(midX,\" \").concat(midY-controlOffset,\" \").concat(x2,\" \").concat(y2),stroke:\"rgba(139, 92, 246, 0.3)\",strokeWidth:\"2\",fill:\"none\",strokeDasharray:conn.type==='bidirectional'?'0':'5 5'}),conn.type==='bidirectional'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"circle\",{cx:x1,cy:y1,r:\"4\",fill:\"#8b5cf6\"}),/*#__PURE__*/_jsx(\"circle\",{cx:x2,cy:y2,r:\"4\",fill:\"#8b5cf6\"})]})]},\"conn-\".concat(idx));});};return/*#__PURE__*/_jsxs(\"div\",{className:\"railway-canvas-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"railway-canvas\",ref:canvasRef,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"connections-layer\",children:renderConnections()}),services.map(service=>{const Icon=service.icon;const isSelected=(selectedService===null||selectedService===void 0?void 0:selectedService.id)===service.id;const isAIAssistant=service.id==='ai-assistant';return/*#__PURE__*/_jsxs(\"div\",{className:\"service-card \".concat(service.type,\" \").concat(isSelected?'selected':'',\" \").concat(service.status),style:{left:\"\".concat(service.position.x,\"px\"),top:\"\".concat(service.position.y,\"px\"),borderColor:service.color,boxShadow:isSelected?\"0 0 20px \".concat(service.color,\"40\"):undefined},onMouseDown:e=>!isAIAssistant&&handleDragStart(e,service),onClick:()=>handleServiceClick(service),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"service-header\",style:{background:\"\".concat(service.color,\"15\")},children:[/*#__PURE__*/_jsx(Icon,{size:20,style:{color:service.color}}),/*#__PURE__*/_jsx(\"span\",{className:\"service-name\",children:service.name}),service.status==='active'&&/*#__PURE__*/_jsx(Circle,{size:8,fill:\"#10b981\",className:\"status-indicator\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"service-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"service-description\",children:service.description}),isAIAssistant&&/*#__PURE__*/_jsxs(\"div\",{className:\"ai-assistant-interface\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"messages-mini\",children:messages.slice(-3).map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:\"message-mini \".concat(msg.type),children:[msg.content.substring(0,100),\"...\"]},msg.id))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"ai-input-mini\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Ask me anything...\",disabled:loading}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:/*#__PURE__*/_jsx(Send,{size:14})})]})]}),!isAIAssistant&&/*#__PURE__*/_jsx(\"div\",{className:\"service-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"service-action\",children:service.status==='active'?'Open':'Configure'})})]})]},service.id);})]}),selectedService&&selectedService.id==='content-generator'&&/*#__PURE__*/_jsx(\"div\",{className:\"service-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedService.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedService(null),className:\"close-button\",children:/*#__PURE__*/_jsx(X,{size:20})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsx(ContentGeneratorModule,{onAIMessage:handleContentGeneratorMessage,generatedContent:generatedContent,onContentUpdate:handleContentUpdate,currentContentType:currentContentType})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"canvas-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"control-button\",title:\"Reset Layout\",children:/*#__PURE__*/_jsx(RefreshCw,{size:16})}),/*#__PURE__*/_jsx(\"button\",{className:\"control-button\",title:\"Zoom In\",children:/*#__PURE__*/_jsx(ZoomIn,{size:16})}),/*#__PURE__*/_jsx(\"button\",{className:\"control-button\",title:\"Zoom Out\",children:/*#__PURE__*/_jsx(ZoomOut,{size:16})})]})]});};// Add missing imports\nconst RefreshCw=()=>/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M23 4v6h-6M1 20v-6h6M3.51 9a9 9 0 0114.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0020.49 15\"})});const ZoomIn=()=>/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"11\",cy:\"11\",r:\"8\"}),/*#__PURE__*/_jsx(\"path\",{d:\"m21 21-4.35-4.35M11 8v6M8 11h6\"})]});const ZoomOut=()=>/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"11\",cy:\"11\",r:\"8\"}),/*#__PURE__*/_jsx(\"path\",{d:\"m21 21-4.35-4.35M8 11h6\"})]});export default RailwayCanvas;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}