{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{supabase}from'../config/supabase';import{Send,Bot,User,Loader,FileText,CheckCircle,AlertCircle,Edit3,Eye,Download,Save}from'lucide-react';import'./NivRealtimeChat.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NivDatabaseChat=()=>{// State management\nconst[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[artifacts,setArtifacts]=useState([]);const[isLoading,setIsLoading]=useState(false);const[sessionId]=useState(\"session-\".concat(Date.now()));const[selectedArtifact,setSelectedArtifact]=useState(null);const[connectionStatus,setConnectionStatus]=useState('connected');const[error,setError]=useState(null);// Refs\nconst messagesEndRef=useRef(null);const pollingInterval=useRef(null);// Initialize and load data\nuseEffect(()=>{loadSessionData();// Poll for updates every 2 seconds when loading\nif(isLoading){pollingInterval.current=setInterval(()=>{loadSessionData();},2000);}return()=>{if(pollingInterval.current){clearInterval(pollingInterval.current);}};},[sessionId,isLoading]);// Auto-scroll to bottom when messages update\nuseEffect(()=>{scrollToBottom();},[messages]);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};const loadSessionData=async()=>{try{// Load existing conversations\nconst{data:convos,error:convoError}=await supabase.from('niv_conversations').select('*').eq('session_id',sessionId).order('created_at',{ascending:true});if(convoError){console.error('Error loading conversations:',convoError);setError(\"Failed to load conversations: \".concat(convoError.message));}else if(convos){setMessages(convos);}// Load existing artifacts\nconst{data:arts,error:artError}=await supabase.from('niv_artifacts').select('*').eq('session_id',sessionId).order('created_at',{ascending:true});if(artError){console.error('Error loading artifacts:',artError);setError(\"Failed to load artifacts: \".concat(artError.message));}else if(arts){setArtifacts(arts);}}catch(err){console.error('Error in loadSessionData:',err);setError(\"Failed to load data: \".concat(err.message));}};const saveMessageToDatabase=async function(role,content){let artifactId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{const{data,error}=await supabase.from('niv_conversations').insert({session_id:sessionId,role:role,content:content,artifact_id:artifactId,mcps_used:[]}).select().single();if(error){console.error('Error saving message:',error);setError(\"Failed to save message: \".concat(error.message));return null;}return data;}catch(err){console.error('Error in saveMessageToDatabase:',err);setError(\"Failed to save message: \".concat(err.message));return null;}};const createArtifact=async(type,title,content)=>{try{const{data,error}=await supabase.from('niv_artifacts').insert({session_id:sessionId,type:type,title:title,content:content,metadata:{},mcp_sources:[],status:'draft'}).select().single();if(error){console.error('Error creating artifact:',error);setError(\"Failed to create artifact: \".concat(error.message));return null;}return data;}catch(err){console.error('Error in createArtifact:',err);setError(\"Failed to create artifact: \".concat(err.message));return null;}};const handleSendMessage=async()=>{if(!message.trim())return;const userMessage=message.trim();setMessage('');setIsLoading(true);setError(null);// Save user message to database\nconst savedUserMessage=await saveMessageToDatabase('user',userMessage);if(savedUserMessage){setMessages(prev=>[...prev,savedUserMessage]);}try{// Call the Edge Function\nconst{data,error}=await supabase.functions.invoke('niv-database',{body:{message:userMessage,sessionId:sessionId,conversationHistory:messages.map(m=>({role:m.role,content:m.content}))}});if(error){console.error('Edge function error:',error);setError(\"Failed to get response: \".concat(error.message));const errorMessage=await saveMessageToDatabase('assistant',\"Sorry, I encountered an error: \".concat(error.message));if(errorMessage){setMessages(prev=>[...prev,errorMessage]);}}else if(data){// Save assistant response\nconst assistantMessage=await saveMessageToDatabase('assistant',data.response||data.message||'I processed your request.');if(assistantMessage){setMessages(prev=>[...prev,assistantMessage]);}// Create artifacts if any\nif(data.artifacts&&Array.isArray(data.artifacts)){for(const artifact of data.artifacts){const createdArtifact=await createArtifact(artifact.type||'document',artifact.title||'Untitled',artifact.content||{});if(createdArtifact){setArtifacts(prev=>[...prev,createdArtifact]);showNotification(\"\\u2728 Created: \".concat(createdArtifact.title),'success');}}}// Check for save button content\nif(data.saveButton||data.shouldSave){const saveArtifact=await createArtifact('document','Strategic Content',{text:data.response||data.message});if(saveArtifact){setArtifacts(prev=>[...prev,saveArtifact]);showNotification('ðŸ’¾ Content saved to workspace','success');}}}}catch(err){console.error('Error calling edge function:',err);setError(\"Failed to process request: \".concat(err.message));const errorMessage=await saveMessageToDatabase('assistant',\"Sorry, I couldn't process your request: \".concat(err.message));if(errorMessage){setMessages(prev=>[...prev,errorMessage]);}}finally{setIsLoading(false);// Reload data to ensure sync\nawait loadSessionData();}};const showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';// Simple console notification for now\nconsole.log(\"[\".concat(type.toUpperCase(),\"] \").concat(message));};const openArtifactInWorkspace=artifact=>{setSelectedArtifact(artifact);// You can implement workspace opening logic here\nconsole.log('Opening artifact in workspace:',artifact);};const updateArtifact=async(artifactId,updates)=>{try{const{data,error}=await supabase.from('niv_artifacts').update(updates).eq('id',artifactId).select().single();if(error){console.error('Error updating artifact:',error);setError(\"Failed to update artifact: \".concat(error.message));return null;}// Update local state\nsetArtifacts(prev=>prev.map(a=>a.id===artifactId?data:a));showNotification(\"\\uD83D\\uDCDD Updated: \".concat(data.title),'success');return data;}catch(err){console.error('Error in updateArtifact:',err);setError(\"Failed to update artifact: \".concat(err.message));return null;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"niv-realtime-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"niv-chat-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"niv-chat-header\",children:[/*#__PURE__*/_jsx(Bot,{className:\"niv-header-icon\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Niv - Your AI PR Strategist\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"connection-status \".concat(connectionStatus),children:[connectionStatus==='connected'?/*#__PURE__*/_jsx(CheckCircle,{size:16}):/*#__PURE__*/_jsx(AlertCircle,{size:16}),connectionStatus]})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-banner\",children:[/*#__PURE__*/_jsx(AlertCircle,{size:16}),error,/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"niv-messages\",children:[messages.map((msg,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"niv-message \".concat(msg.role),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:msg.role==='user'?/*#__PURE__*/_jsx(User,{size:20}):/*#__PURE__*/_jsx(Bot,{size:20})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:msg.content}),msg.artifact_id&&/*#__PURE__*/_jsxs(\"div\",{className:\"message-artifact-link\",children:[/*#__PURE__*/_jsx(FileText,{size:14}),/*#__PURE__*/_jsx(\"span\",{children:\"Artifact created\"})]})]})]},msg.id||idx)),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"niv-message assistant\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-icon\",children:/*#__PURE__*/_jsx(Bot,{size:20})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsx(Loader,{className:\"spinner\",size:20}),/*#__PURE__*/_jsx(\"span\",{children:\"Niv is thinking...\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"niv-input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&!isLoading&&handleSendMessage(),placeholder:\"Ask Niv about PR strategy, media lists, or content creation...\",disabled:isLoading}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:isLoading||!message.trim(),className:\"send-button\",children:/*#__PURE__*/_jsx(Send,{size:20})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"niv-artifacts-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"artifacts-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Artifacts\"}),/*#__PURE__*/_jsx(\"span\",{className:\"artifact-count\",children:artifacts.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"artifacts-list\",children:artifacts.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-artifacts\",children:[/*#__PURE__*/_jsx(FileText,{size:32}),/*#__PURE__*/_jsx(\"p\",{children:\"No artifacts yet\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Artifacts will appear here when Niv creates content\"})]}):artifacts.map(artifact=>/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-header\",children:[/*#__PURE__*/_jsx(FileText,{size:16}),/*#__PURE__*/_jsx(\"span\",{className:\"artifact-type\",children:artifact.type})]}),/*#__PURE__*/_jsx(\"h4\",{children:artifact.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-meta\",children:[/*#__PURE__*/_jsx(\"span\",{children:new Date(artifact.created_at).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"artifact-status\",children:artifact.status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>openArtifactInWorkspace(artifact),children:[/*#__PURE__*/_jsx(Eye,{size:14}),\" View\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>openArtifactInWorkspace(artifact),children:[/*#__PURE__*/_jsx(Edit3,{size:14}),\" Edit\"]}),/*#__PURE__*/_jsxs(\"button\",{children:[/*#__PURE__*/_jsx(Download,{size:14}),\" Export\"]})]})]},artifact.id))})]}),selectedArtifact&&/*#__PURE__*/_jsxs(\"div\",{className:\"artifact-workspace-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"workspace-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:selectedArtifact.title}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedArtifact(null),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"workspace-content\",children:/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(selectedArtifact.content,null,2)})}),/*#__PURE__*/_jsx(\"div\",{className:\"workspace-actions\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>updateArtifact(selectedArtifact.id,{status:'published'}),children:[/*#__PURE__*/_jsx(Save,{size:16}),\" Save Changes\"]})})]})]});};export default NivDatabaseChat;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}