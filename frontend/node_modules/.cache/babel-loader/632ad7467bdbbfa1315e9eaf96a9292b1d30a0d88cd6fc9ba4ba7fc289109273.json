{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/pages/NivSimple.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NivLayout from '../components/niv-simple/NivLayout';\nimport supabaseApiService from '../services/supabaseApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NivSimple = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [artifacts, setArtifacts] = useState([]);\n  const [selectedArtifact, setSelectedArtifact] = useState(null);\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  const [loading, setLoading] = useState(false);\n\n  // Add welcome message when component mounts\n  useEffect(() => {\n    setMessages([{\n      role: 'assistant',\n      content: \"Hi! I'm Niv, your PR strategist. I can help you create media lists, press releases, strategic plans, social content, key messaging, and FAQ documents. What would you like to work on today?\"\n    }]);\n  }, []);\n  const handleSendMessage = async messageText => {\n    setLoading(true);\n    try {\n      var _session$user;\n      // Add user message to chat\n      const userMessage = {\n        role: 'user',\n        content: messageText\n      };\n      const updatedMessages = [...messages, userMessage];\n      setMessages(updatedMessages);\n\n      // Get current session\n      const session = await supabaseApiService.getSession();\n\n      // Call niv-simple edge function\n      const response = await supabaseApiService.callEdgeFunction('niv-simple', {\n        message: messageText,\n        conversationHistory: messages,\n        userId: (session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.id) || 'anonymous',\n        sessionId\n      });\n\n      // Add assistant response to chat\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.chatMessage\n      };\n      setMessages([...updatedMessages, assistantMessage]);\n\n      // If an artifact was created, add it to the artifacts list\n      if (response.artifact) {\n        console.log('ðŸ“¦ NivSimple: Received artifact from backend:', response.artifact);\n        console.log('ðŸ“¦ NivSimple: Artifact content:', response.artifact.content);\n        setArtifacts(prev => [response.artifact, ...prev]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n\n      // Add error message to chat\n      const errorMessage = {\n        role: 'assistant',\n        content: \"I'm sorry, I encountered an error processing your request. Please try again.\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveAsArtifact = artifact => {\n    console.log('ðŸ’¾ NivSimple: Saving message as artifact:', artifact);\n    setArtifacts(prev => [artifact, ...prev]);\n    // Optionally auto-select the new artifact\n    setSelectedArtifact(artifact);\n  };\n  const handleArtifactSelect = artifact => {\n    setSelectedArtifact(artifact);\n  };\n  const handleArtifactUpdate = updatedArtifact => {\n    setArtifacts(prev => prev.map(artifact => artifact.id === updatedArtifact.id ? updatedArtifact : artifact));\n    setSelectedArtifact(updatedArtifact);\n  };\n  const handleArtifactDelete = artifactId => {\n    setArtifacts(prev => prev.filter(artifact => artifact.id !== artifactId));\n    if ((selectedArtifact === null || selectedArtifact === void 0 ? void 0 : selectedArtifact.id) === artifactId) {\n      setSelectedArtifact(null);\n    }\n  };\n  const handleCloseWorkspace = () => {\n    setSelectedArtifact(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: /*#__PURE__*/_jsxDEV(NivLayout, {\n      messages: messages,\n      artifacts: artifacts,\n      selectedArtifact: selectedArtifact,\n      loading: loading,\n      onSendMessage: handleSendMessage,\n      onSaveAsArtifact: handleSaveAsArtifact,\n      onArtifactSelect: handleArtifactSelect,\n      onArtifactUpdate: handleArtifactUpdate,\n      onArtifactDelete: handleArtifactDelete,\n      onCloseWorkspace: handleCloseWorkspace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(NivSimple, \"D4HHrG+LQgKAFCyxnHNbOw8eMt8=\");\n_c = NivSimple;\nexport default NivSimple;\nvar _c;\n$RefreshReg$(_c, \"NivSimple\");","map":{"version":3,"names":["React","useState","useEffect","NivLayout","supabaseApiService","jsxDEV","_jsxDEV","NivSimple","_s","messages","setMessages","artifacts","setArtifacts","selectedArtifact","setSelectedArtifact","sessionId","Date","now","Math","random","toString","substr","loading","setLoading","role","content","handleSendMessage","messageText","_session$user","userMessage","updatedMessages","session","getSession","response","callEdgeFunction","message","conversationHistory","userId","user","id","assistantMessage","chatMessage","artifact","console","log","prev","error","errorMessage","handleSaveAsArtifact","handleArtifactSelect","handleArtifactUpdate","updatedArtifact","map","handleArtifactDelete","artifactId","filter","handleCloseWorkspace","style","height","display","flexDirection","children","onSendMessage","onSaveAsArtifact","onArtifactSelect","onArtifactUpdate","onArtifactDelete","onCloseWorkspace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/pages/NivSimple.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport NivLayout from '../components/niv-simple/NivLayout';\nimport supabaseApiService from '../services/supabaseApiService';\n\nconst NivSimple = () => {\n  const [messages, setMessages] = useState([]);\n  const [artifacts, setArtifacts] = useState([]);\n  const [selectedArtifact, setSelectedArtifact] = useState(null);\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  const [loading, setLoading] = useState(false);\n\n  // Add welcome message when component mounts\n  useEffect(() => {\n    setMessages([\n      {\n        role: 'assistant',\n        content: \"Hi! I'm Niv, your PR strategist. I can help you create media lists, press releases, strategic plans, social content, key messaging, and FAQ documents. What would you like to work on today?\"\n      }\n    ]);\n  }, []);\n\n  const handleSendMessage = async (messageText) => {\n    setLoading(true);\n    \n    try {\n      // Add user message to chat\n      const userMessage = { role: 'user', content: messageText };\n      const updatedMessages = [...messages, userMessage];\n      setMessages(updatedMessages);\n\n      // Get current session\n      const session = await supabaseApiService.getSession();\n      \n      // Call niv-simple edge function\n      const response = await supabaseApiService.callEdgeFunction('niv-simple', {\n        message: messageText,\n        conversationHistory: messages,\n        userId: session?.user?.id || 'anonymous',\n        sessionId\n      });\n\n      // Add assistant response to chat\n      const assistantMessage = { role: 'assistant', content: response.chatMessage };\n      setMessages([...updatedMessages, assistantMessage]);\n\n      // If an artifact was created, add it to the artifacts list\n      if (response.artifact) {\n        console.log('ðŸ“¦ NivSimple: Received artifact from backend:', response.artifact);\n        console.log('ðŸ“¦ NivSimple: Artifact content:', response.artifact.content);\n        setArtifacts(prev => [response.artifact, ...prev]);\n      }\n\n    } catch (error) {\n      console.error('Error sending message:', error);\n      \n      // Add error message to chat\n      const errorMessage = { \n        role: 'assistant', \n        content: \"I'm sorry, I encountered an error processing your request. Please try again.\" \n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveAsArtifact = (artifact) => {\n    console.log('ðŸ’¾ NivSimple: Saving message as artifact:', artifact);\n    setArtifacts(prev => [artifact, ...prev]);\n    // Optionally auto-select the new artifact\n    setSelectedArtifact(artifact);\n  };\n\n  const handleArtifactSelect = (artifact) => {\n    setSelectedArtifact(artifact);\n  };\n\n  const handleArtifactUpdate = (updatedArtifact) => {\n    setArtifacts(prev => \n      prev.map(artifact => \n        artifact.id === updatedArtifact.id ? updatedArtifact : artifact\n      )\n    );\n    setSelectedArtifact(updatedArtifact);\n  };\n\n  const handleArtifactDelete = (artifactId) => {\n    setArtifacts(prev => prev.filter(artifact => artifact.id !== artifactId));\n    if (selectedArtifact?.id === artifactId) {\n      setSelectedArtifact(null);\n    }\n  };\n\n  const handleCloseWorkspace = () => {\n    setSelectedArtifact(null);\n  };\n\n  return (\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <NivLayout\n        messages={messages}\n        artifacts={artifacts}\n        selectedArtifact={selectedArtifact}\n        loading={loading}\n        onSendMessage={handleSendMessage}\n        onSaveAsArtifact={handleSaveAsArtifact}\n        onArtifactSelect={handleArtifactSelect}\n        onArtifactUpdate={handleArtifactUpdate}\n        onArtifactDelete={handleArtifactDelete}\n        onCloseWorkspace={handleCloseWorkspace}\n      />\n    </div>\n  );\n};\n\nexport default NivSimple;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}