{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect,useCallback}from\"react\";import{useNavigate}from\"react-router-dom\";import{supabase}from'../config/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext({});export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[session,setSession]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[token,setToken]=useState(null);// For compatibility\nconst navigate=useNavigate();useEffect(()=>{// Check active session\nsupabase.auth.getSession().then(_ref2=>{var _session$user,_session$access_token;let{data:{session}}=_ref2;setSession(session);setUser((_session$user=session===null||session===void 0?void 0:session.user)!==null&&_session$user!==void 0?_session$user:null);setToken((_session$access_token=session===null||session===void 0?void 0:session.access_token)!==null&&_session$access_token!==void 0?_session$access_token:null);setLoading(false);});// Listen for auth changes\nconst{data:{subscription}}=supabase.auth.onAuthStateChange((_event,session)=>{var _session$user2,_session$access_token2;setSession(session);setUser((_session$user2=session===null||session===void 0?void 0:session.user)!==null&&_session$user2!==void 0?_session$user2:null);setToken((_session$access_token2=session===null||session===void 0?void 0:session.access_token)!==null&&_session$access_token2!==void 0?_session$access_token2:null);});return()=>subscription.unsubscribe();},[]);const login=async(email,password)=>{try{setError(null);console.log('[Auth] Attempting Supabase login for:',email);const{data,error}=await supabase.auth.signInWithPassword({email,password});if(error){console.error('[Auth] Supabase login error:',error);throw error;}console.log('[Auth] Supabase login successful');// Navigate based on App.js routes\nnavigate(\"/projects/demo-project\");return{success:true};}catch(err){const errorMessage=err.message||\"Login failed\";console.error('[Auth] Login error:',errorMessage);setError(errorMessage);return{success:false,error:errorMessage};}};const logout=async()=>{await supabase.auth.signOut();setUser(null);setSession(null);setToken(null);navigate(\"/login\");};const isAuthenticated=useCallback(()=>{return!!session;},[session]);const value={user,session,token,login,logout,loading,error,isAuthenticated,checkAuth:()=>{}// For compatibility\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}