{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/RailwayCanvas.js\",\n  _s = $RefreshSig$();\n// RailwayCanvas.js - True Railway-style canvas interface with draggable service cards\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useProject } from '../contexts/ProjectContext';\nimport ContentGeneratorModule from './ContentGeneratorModule';\nimport API_BASE_URL from '../config/api';\nimport { Bot, Brain, FileText, Users, TrendingUp, AlertTriangle, BarChart3, Archive, Send, ChevronLeft, ChevronRight, X, Sparkles, MessageSquare, Shield, Target, Menu, GripVertical, Maximize2, Minimize2, Move, GitBranch, Activity, Database, Circle, Square } from 'lucide-react';\nimport './RailwayCanvas.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RailwayCanvas = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    activeProject\n  } = useProject();\n  const messagesEndRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Canvas state\n  const [services, setServices] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [selectedService, setSelectedService] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedService, setDraggedService] = useState(null);\n  const [dragOffset, setDragOffset] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // AI Assistant state - PRESERVING ALL FUNCTIONALITY\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditingMode, setIsEditingMode] = useState(false);\n\n  // Content Generator state - PRESERVING ALL FUNCTIONALITY\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [currentContentType, setCurrentContentType] = useState(null);\n\n  // Service definitions as cards on canvas\n  const serviceDefinitions = [{\n    id: 'ai-assistant',\n    name: 'Adaptive AI Assistant',\n    icon: Bot,\n    color: '#8b5cf6',\n    description: 'Your intelligent co-pilot',\n    position: {\n      x: 50,\n      y: 50\n    },\n    type: 'core',\n    status: 'active'\n  }, {\n    id: 'content-generator',\n    name: 'Content Generator',\n    icon: FileText,\n    color: '#10b981',\n    description: 'AI-powered content creation',\n    position: {\n      x: 400,\n      y: 50\n    },\n    type: 'feature',\n    status: 'active',\n    component: ContentGeneratorModule\n  }, {\n    id: 'media-intelligence',\n    name: 'Media Intelligence',\n    icon: Users,\n    color: '#3b82f6',\n    description: 'Journalist discovery & outreach',\n    position: {\n      x: 750,\n      y: 50\n    },\n    type: 'feature',\n    status: 'pending',\n    path: `/projects/${projectId}/media-list`\n  }, {\n    id: 'campaign-intelligence',\n    name: 'Campaign Intelligence',\n    icon: Brain,\n    color: '#f59e0b',\n    description: 'Strategic campaign planning',\n    position: {\n      x: 400,\n      y: 250\n    },\n    type: 'feature',\n    status: 'pending',\n    path: `/projects/${projectId}/campaign-intelligence-enhanced`\n  }, {\n    id: 'memory-vault',\n    name: 'Memory Vault',\n    icon: Database,\n    color: '#6366f1',\n    description: 'Project knowledge base',\n    position: {\n      x: 50,\n      y: 250\n    },\n    type: 'storage',\n    status: 'active',\n    path: `/projects/${projectId}`\n  }, {\n    id: 'stakeholder-intelligence',\n    name: 'Stakeholder Intelligence',\n    icon: TrendingUp,\n    color: '#ec4899',\n    description: 'Stakeholder monitoring',\n    position: {\n      x: 750,\n      y: 250\n    },\n    type: 'feature',\n    status: 'pending',\n    path: `/projects/${projectId}/stakeholder-intelligence`\n  }, {\n    id: 'crisis-command',\n    name: 'Crisis Command',\n    icon: AlertTriangle,\n    color: '#ef4444',\n    description: 'Crisis management',\n    position: {\n      x: 400,\n      y: 450\n    },\n    type: 'feature',\n    status: 'pending',\n    path: `/projects/${projectId}/crisis-command`\n  }];\n\n  // Initialize services and connections on mount\n  useEffect(() => {\n    // Load saved positions or use defaults\n    const savedPositions = localStorage.getItem('railwayCanvasPositions');\n    const positions = savedPositions ? JSON.parse(savedPositions) : {};\n    const initialServices = serviceDefinitions.map(service => ({\n      ...service,\n      position: positions[service.id] || service.position\n    }));\n    setServices(initialServices);\n\n    // Define connections between services (Railway-style tracks)\n    setConnections([{\n      from: 'ai-assistant',\n      to: 'content-generator',\n      type: 'bidirectional'\n    }, {\n      from: 'ai-assistant',\n      to: 'memory-vault',\n      type: 'data'\n    }, {\n      from: 'memory-vault',\n      to: 'content-generator',\n      type: 'context'\n    }, {\n      from: 'content-generator',\n      to: 'media-intelligence',\n      type: 'output'\n    }, {\n      from: 'campaign-intelligence',\n      to: 'content-generator',\n      type: 'strategy'\n    }, {\n      from: 'memory-vault',\n      to: 'campaign-intelligence',\n      type: 'data'\n    }, {\n      from: 'stakeholder-intelligence',\n      to: 'crisis-command',\n      type: 'alert'\n    }]);\n\n    // Initialize AI Assistant\n    setMessages([{\n      id: Date.now(),\n      type: 'assistant',\n      content: 'Welcome to SignalDesk Canvas! Drag services to arrange your workspace. Click on services to activate them. I can control all connected services.',\n      timestamp: new Date()\n    }]);\n  }, []);\n\n  // Save positions when services move\n  const savePositions = useCallback(() => {\n    const positions = {};\n    services.forEach(service => {\n      positions[service.id] = service.position;\n    });\n    localStorage.setItem('railwayCanvasPositions', JSON.stringify(positions));\n  }, [services]);\n\n  // Handle drag start\n  const handleDragStart = (e, service) => {\n    setIsDragging(true);\n    setDraggedService(service);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle drag move\n  const handleDragMove = useCallback(e => {\n    if (!isDragging || !draggedService) return;\n    const canvasRect = canvasRef.current.getBoundingClientRect();\n    const newPosition = {\n      x: e.clientX - canvasRect.left - dragOffset.x,\n      y: e.clientY - canvasRect.top - dragOffset.y\n    };\n    setServices(prev => prev.map(service => service.id === draggedService.id ? {\n      ...service,\n      position: newPosition\n    } : service));\n  }, [isDragging, draggedService, dragOffset]);\n\n  // Handle drag end\n  const handleDragEnd = useCallback(() => {\n    if (isDragging) {\n      savePositions();\n    }\n    setIsDragging(false);\n    setDraggedService(null);\n  }, [isDragging, savePositions]);\n\n  // Mouse event handlers\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleDragMove);\n      window.addEventListener('mouseup', handleDragEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleDragMove);\n        window.removeEventListener('mouseup', handleDragEnd);\n      };\n    }\n  }, [isDragging, handleDragMove, handleDragEnd]);\n\n  // Handle service selection\n  const handleServiceClick = service => {\n    if (isDragging) return;\n    if (service.status === 'pending' && service.path) {\n      navigate(service.path);\n      return;\n    }\n    setSelectedService(service);\n\n    // Inform AI Assistant about service activation\n    const contextMsg = {\n      id: Date.now(),\n      type: 'system',\n      content: `Activated ${service.name}. ${service.description}`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, contextMsg]);\n  };\n\n  // CRITICAL: Handle messages from Content Generator - EXACT RESTORATION\n  const handleContentGeneratorMessage = msg => {\n    console.log('RailwayCanvas: Received message from ContentGenerator:', msg);\n    if (msg.type === 'edit_request') {\n      setIsEditingMode(true);\n      handleEditRequest(msg);\n    } else if (msg.type === 'user' && msg.content) {\n      const userMsg = {\n        id: Date.now(),\n        type: 'user',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMsg]);\n      sendMessage(msg.content);\n    }\n  };\n\n  // CRITICAL: Handle edit requests - EXACT RESTORATION\n  const handleEditRequest = async request => {\n    const {\n      content: editPrompt,\n      currentContent,\n      metadata\n    } = request;\n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: `Please edit this content: \"${editPrompt}\"`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai/unified-chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          message: `Edit the following content based on this request: \"${editPrompt}\"\\n\\nCurrent content:\\n${currentContent}`,\n          mode: 'content',\n          context: {\n            folder: 'content-generator',\n            editing: true,\n            contentType: metadata === null || metadata === void 0 ? void 0 : metadata.contentType,\n            tone: metadata === null || metadata === void 0 ? void 0 : metadata.tone\n          }\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const aiMsg = {\n          id: Date.now(),\n          type: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMsg]);\n        setGeneratedContent(data.response);\n      }\n    } catch (error) {\n      console.error('Error processing edit:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to process edit request. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CRITICAL: Send message to AI - EXACT RESTORATION\n  const sendMessage = async text => {\n    if (!(text !== null && text !== void 0 && text.trim())) return;\n    setLoading(true);\n    try {\n      const isEditing = isEditingMode && generatedContent;\n      const response = await fetch(`${API_BASE_URL}/ai/unified-chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          message: isEditing ? `Continue editing this content based on: \"${text}\"\\n\\nCurrent content:\\n${generatedContent}` : text,\n          mode: (selectedService === null || selectedService === void 0 ? void 0 : selectedService.id) === 'content-generator' ? 'content' : 'general',\n          context: {\n            folder: selectedService === null || selectedService === void 0 ? void 0 : selectedService.id,\n            editing: isEditing\n          }\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        const aiMsg = {\n          id: Date.now(),\n          type: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMsg]);\n\n        // Check if content was generated\n        if (isActualGeneratedContent(data.response)) {\n          setGeneratedContent(data.response);\n          detectContentType(data.response);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to send message. Please check your connection.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    sendMessage(message);\n    setMessage('');\n  };\n\n  // Check if response is actual generated content\n  const isActualGeneratedContent = text => {\n    if (!text || text.length < 100) return false;\n    const indicators = ['FOR IMMEDIATE RELEASE', 'Dear ', 'Subject:', 'Q:', 'Question:', '#', 'We are pleased'];\n    return indicators.some(indicator => text.includes(indicator));\n  };\n\n  // Detect content type\n  const detectContentType = text => {\n    if (text.includes('FOR IMMEDIATE RELEASE')) {\n      setCurrentContentType('press-release');\n    } else if (text.includes('Q:') || text.includes('Question:')) {\n      setCurrentContentType('qa-doc');\n    } else if (text.includes('#')) {\n      setCurrentContentType('social-post');\n    }\n  };\n\n  // Update content from Content Generator\n  const handleContentUpdate = newContent => {\n    setGeneratedContent(newContent);\n    if (newContent && !isEditingMode) {\n      setIsEditingMode(false);\n    }\n  };\n\n  // Auto-scroll messages\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Render connection lines between services\n  const renderConnections = () => {\n    return connections.map((conn, idx) => {\n      const fromService = services.find(s => s.id === conn.from);\n      const toService = services.find(s => s.id === conn.to);\n      if (!fromService || !toService) return null;\n      const x1 = fromService.position.x + 150; // Card width / 2\n      const y1 = fromService.position.y + 60; // Card height / 2\n      const x2 = toService.position.x + 150;\n      const y2 = toService.position.y + 60;\n\n      // Calculate curve control points for Railway-style tracks\n      const midX = (x1 + x2) / 2;\n      const midY = (y1 + y2) / 2;\n      const controlOffset = Math.abs(x2 - x1) * 0.1;\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"connection-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: `M ${x1} ${y1} Q ${midX} ${midY - controlOffset} ${x2} ${y2}`,\n          stroke: \"rgba(139, 92, 246, 0.3)\",\n          strokeWidth: \"2\",\n          fill: \"none\",\n          strokeDasharray: conn.type === 'bidirectional' ? '0' : '5 5'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), conn.type === 'bidirectional' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x1,\n            cy: y1,\n            r: \"4\",\n            fill: \"#8b5cf6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x2,\n            cy: y2,\n            r: \"4\",\n            fill: \"#8b5cf6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, `conn-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"railway-canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"railway-canvas\",\n      ref: canvasRef,\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections-layer\",\n        children: renderConnections()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), services.map(service => {\n        const Icon = service.icon;\n        const isSelected = (selectedService === null || selectedService === void 0 ? void 0 : selectedService.id) === service.id;\n        const isAIAssistant = service.id === 'ai-assistant';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `service-card ${service.type} ${isSelected ? 'selected' : ''} ${service.status}`,\n          style: {\n            left: `${service.position.x}px`,\n            top: `${service.position.y}px`,\n            borderColor: service.color,\n            boxShadow: isSelected ? `0 0 20px ${service.color}40` : undefined\n          },\n          onMouseDown: e => !isAIAssistant && handleDragStart(e, service),\n          onClick: () => handleServiceClick(service),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-header\",\n            style: {\n              background: `${service.color}15`\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              size: 20,\n              style: {\n                color: service.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"service-name\",\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), service.status === 'active' && /*#__PURE__*/_jsxDEV(Circle, {\n              size: 8,\n              fill: \"#10b981\",\n              className: \"status-indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"service-description\",\n              children: service.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), isAIAssistant && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ai-assistant-interface\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"messages-mini\",\n                children: messages.slice(-3).map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `message-mini ${msg.type}`,\n                  children: [msg.content.substring(0, 100), \"...\"]\n                }, msg.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"ai-input-mini\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: message,\n                  onChange: e => setMessage(e.target.value),\n                  placeholder: \"Ask me anything...\",\n                  disabled: loading\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: loading,\n                  children: /*#__PURE__*/_jsxDEV(Send, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this), !isAIAssistant && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"service-action\",\n                children: service.status === 'active' ? 'Open' : 'Configure'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)]\n        }, service.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), selectedService && selectedService.id === 'content-generator' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedService.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedService(null),\n            className: \"close-button\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(ContentGeneratorModule, {\n            onAIMessage: handleContentGeneratorMessage,\n            generatedContent: generatedContent,\n            onContentUpdate: handleContentUpdate,\n            currentContentType: currentContentType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        title: \"Reset Layout\",\n        children: /*#__PURE__*/_jsxDEV(RefreshCw, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        title: \"Zoom In\",\n        children: /*#__PURE__*/_jsxDEV(ZoomIn, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        title: \"Zoom Out\",\n        children: /*#__PURE__*/_jsxDEV(ZoomOut, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n\n// Add missing imports\n_s(RailwayCanvas, \"r2D0K5jkehM7Dj8gEfcMxohOk4Q=\", false, function () {\n  return [useParams, useNavigate, useProject];\n});\n_c = RailwayCanvas;\nconst RefreshCw = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M23 4v6h-6M1 20v-6h6M3.51 9a9 9 0 0114.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0020.49 15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 583,\n    columnNumber: 100\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 583,\n  columnNumber: 25\n}, this);\n_c2 = RefreshCw;\nconst ZoomIn = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 97\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"m21 21-4.35-4.35M11 8v6M8 11h6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 128\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 584,\n  columnNumber: 22\n}, this);\n_c3 = ZoomIn;\nconst ZoomOut = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 98\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"m21 21-4.35-4.35M8 11h6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 585,\n    columnNumber: 129\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 585,\n  columnNumber: 23\n}, this);\n_c4 = ZoomOut;\nexport default RailwayCanvas;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RailwayCanvas\");\n$RefreshReg$(_c2, \"RefreshCw\");\n$RefreshReg$(_c3, \"ZoomIn\");\n$RefreshReg$(_c4, \"ZoomOut\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useNavigate","useProject","ContentGeneratorModule","API_BASE_URL","Bot","Brain","FileText","Users","TrendingUp","AlertTriangle","BarChart3","Archive","Send","ChevronLeft","ChevronRight","X","Sparkles","MessageSquare","Shield","Target","Menu","GripVertical","Maximize2","Minimize2","Move","GitBranch","Activity","Database","Circle","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","RailwayCanvas","_s","projectId","navigate","activeProject","messagesEndRef","canvasRef","services","setServices","connections","setConnections","selectedService","setSelectedService","isDragging","setIsDragging","draggedService","setDraggedService","dragOffset","setDragOffset","x","y","message","setMessage","messages","setMessages","loading","setLoading","isEditingMode","setIsEditingMode","generatedContent","setGeneratedContent","currentContentType","setCurrentContentType","serviceDefinitions","id","name","icon","color","description","position","type","status","component","path","savedPositions","localStorage","getItem","positions","JSON","parse","initialServices","map","service","from","to","Date","now","content","timestamp","savePositions","forEach","setItem","stringify","handleDragStart","e","rect","currentTarget","getBoundingClientRect","clientX","left","clientY","top","handleDragMove","canvasRect","current","newPosition","prev","handleDragEnd","window","addEventListener","removeEventListener","handleServiceClick","contextMsg","handleContentGeneratorMessage","msg","console","log","handleEditRequest","userMsg","sendMessage","request","editPrompt","currentContent","metadata","response","fetch","method","headers","body","mode","context","folder","editing","contentType","tone","data","json","success","aiMsg","error","errorMsg","text","trim","isEditing","isActualGeneratedContent","detectContentType","handleSubmit","preventDefault","length","indicators","some","indicator","includes","handleContentUpdate","newContent","_messagesEndRef$curre","scrollIntoView","behavior","renderConnections","conn","idx","fromService","find","s","toService","x1","y1","x2","y2","midX","midY","controlOffset","Math","abs","className","children","d","stroke","strokeWidth","fill","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","cx","cy","r","ref","Icon","isSelected","isAIAssistant","style","borderColor","boxShadow","undefined","onMouseDown","onClick","background","size","slice","substring","onSubmit","value","onChange","target","placeholder","disabled","onAIMessage","onContentUpdate","title","RefreshCw","ZoomIn","ZoomOut","_c","viewBox","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/jonathanliebowitz/Desktop/SignalDesk/frontend/src/components/RailwayCanvas.js"],"sourcesContent":["// RailwayCanvas.js - True Railway-style canvas interface with draggable service cards\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useProject } from '../contexts/ProjectContext';\nimport ContentGeneratorModule from './ContentGeneratorModule';\nimport API_BASE_URL from '../config/api';\nimport {\n  Bot, Brain, FileText, Users, TrendingUp, AlertTriangle, \n  BarChart3, Archive, Send, ChevronLeft, ChevronRight, X,\n  Sparkles, MessageSquare, Shield, Target, Menu, GripVertical,\n  Maximize2, Minimize2, Move, GitBranch, Activity, Database,\n  Circle, Square\n} from 'lucide-react';\nimport './RailwayCanvas.css';\n\nconst RailwayCanvas = () => {\n  const { projectId } = useParams();\n  const navigate = useNavigate();\n  const { activeProject } = useProject();\n  const messagesEndRef = useRef(null);\n  const canvasRef = useRef(null);\n  \n  // Canvas state\n  const [services, setServices] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [selectedService, setSelectedService] = useState(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [draggedService, setDraggedService] = useState(null);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  \n  // AI Assistant state - PRESERVING ALL FUNCTIONALITY\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isEditingMode, setIsEditingMode] = useState(false);\n  \n  // Content Generator state - PRESERVING ALL FUNCTIONALITY\n  const [generatedContent, setGeneratedContent] = useState('');\n  const [currentContentType, setCurrentContentType] = useState(null);\n  \n  // Service definitions as cards on canvas\n  const serviceDefinitions = [\n    {\n      id: 'ai-assistant',\n      name: 'Adaptive AI Assistant',\n      icon: Bot,\n      color: '#8b5cf6',\n      description: 'Your intelligent co-pilot',\n      position: { x: 50, y: 50 },\n      type: 'core',\n      status: 'active'\n    },\n    {\n      id: 'content-generator',\n      name: 'Content Generator',\n      icon: FileText,\n      color: '#10b981',\n      description: 'AI-powered content creation',\n      position: { x: 400, y: 50 },\n      type: 'feature',\n      status: 'active',\n      component: ContentGeneratorModule\n    },\n    {\n      id: 'media-intelligence',\n      name: 'Media Intelligence',\n      icon: Users,\n      color: '#3b82f6',\n      description: 'Journalist discovery & outreach',\n      position: { x: 750, y: 50 },\n      type: 'feature',\n      status: 'pending',\n      path: `/projects/${projectId}/media-list`\n    },\n    {\n      id: 'campaign-intelligence',\n      name: 'Campaign Intelligence',\n      icon: Brain,\n      color: '#f59e0b',\n      description: 'Strategic campaign planning',\n      position: { x: 400, y: 250 },\n      type: 'feature',\n      status: 'pending',\n      path: `/projects/${projectId}/campaign-intelligence-enhanced`\n    },\n    {\n      id: 'memory-vault',\n      name: 'Memory Vault',\n      icon: Database,\n      color: '#6366f1',\n      description: 'Project knowledge base',\n      position: { x: 50, y: 250 },\n      type: 'storage',\n      status: 'active',\n      path: `/projects/${projectId}`\n    },\n    {\n      id: 'stakeholder-intelligence',\n      name: 'Stakeholder Intelligence',\n      icon: TrendingUp,\n      color: '#ec4899',\n      description: 'Stakeholder monitoring',\n      position: { x: 750, y: 250 },\n      type: 'feature',\n      status: 'pending',\n      path: `/projects/${projectId}/stakeholder-intelligence`\n    },\n    {\n      id: 'crisis-command',\n      name: 'Crisis Command',\n      icon: AlertTriangle,\n      color: '#ef4444',\n      description: 'Crisis management',\n      position: { x: 400, y: 450 },\n      type: 'feature',\n      status: 'pending',\n      path: `/projects/${projectId}/crisis-command`\n    }\n  ];\n\n  // Initialize services and connections on mount\n  useEffect(() => {\n    // Load saved positions or use defaults\n    const savedPositions = localStorage.getItem('railwayCanvasPositions');\n    const positions = savedPositions ? JSON.parse(savedPositions) : {};\n    \n    const initialServices = serviceDefinitions.map(service => ({\n      ...service,\n      position: positions[service.id] || service.position\n    }));\n    \n    setServices(initialServices);\n    \n    // Define connections between services (Railway-style tracks)\n    setConnections([\n      { from: 'ai-assistant', to: 'content-generator', type: 'bidirectional' },\n      { from: 'ai-assistant', to: 'memory-vault', type: 'data' },\n      { from: 'memory-vault', to: 'content-generator', type: 'context' },\n      { from: 'content-generator', to: 'media-intelligence', type: 'output' },\n      { from: 'campaign-intelligence', to: 'content-generator', type: 'strategy' },\n      { from: 'memory-vault', to: 'campaign-intelligence', type: 'data' },\n      { from: 'stakeholder-intelligence', to: 'crisis-command', type: 'alert' }\n    ]);\n    \n    // Initialize AI Assistant\n    setMessages([{\n      id: Date.now(),\n      type: 'assistant',\n      content: 'Welcome to SignalDesk Canvas! Drag services to arrange your workspace. Click on services to activate them. I can control all connected services.',\n      timestamp: new Date()\n    }]);\n  }, []);\n\n  // Save positions when services move\n  const savePositions = useCallback(() => {\n    const positions = {};\n    services.forEach(service => {\n      positions[service.id] = service.position;\n    });\n    localStorage.setItem('railwayCanvasPositions', JSON.stringify(positions));\n  }, [services]);\n\n  // Handle drag start\n  const handleDragStart = (e, service) => {\n    setIsDragging(true);\n    setDraggedService(service);\n    const rect = e.currentTarget.getBoundingClientRect();\n    setDragOffset({\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    });\n  };\n\n  // Handle drag move\n  const handleDragMove = useCallback((e) => {\n    if (!isDragging || !draggedService) return;\n    \n    const canvasRect = canvasRef.current.getBoundingClientRect();\n    const newPosition = {\n      x: e.clientX - canvasRect.left - dragOffset.x,\n      y: e.clientY - canvasRect.top - dragOffset.y\n    };\n    \n    setServices(prev => prev.map(service => \n      service.id === draggedService.id\n        ? { ...service, position: newPosition }\n        : service\n    ));\n  }, [isDragging, draggedService, dragOffset]);\n\n  // Handle drag end\n  const handleDragEnd = useCallback(() => {\n    if (isDragging) {\n      savePositions();\n    }\n    setIsDragging(false);\n    setDraggedService(null);\n  }, [isDragging, savePositions]);\n\n  // Mouse event handlers\n  useEffect(() => {\n    if (isDragging) {\n      window.addEventListener('mousemove', handleDragMove);\n      window.addEventListener('mouseup', handleDragEnd);\n      return () => {\n        window.removeEventListener('mousemove', handleDragMove);\n        window.removeEventListener('mouseup', handleDragEnd);\n      };\n    }\n  }, [isDragging, handleDragMove, handleDragEnd]);\n\n  // Handle service selection\n  const handleServiceClick = (service) => {\n    if (isDragging) return;\n    \n    if (service.status === 'pending' && service.path) {\n      navigate(service.path);\n      return;\n    }\n    \n    setSelectedService(service);\n    \n    // Inform AI Assistant about service activation\n    const contextMsg = {\n      id: Date.now(),\n      type: 'system',\n      content: `Activated ${service.name}. ${service.description}`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, contextMsg]);\n  };\n\n  // CRITICAL: Handle messages from Content Generator - EXACT RESTORATION\n  const handleContentGeneratorMessage = (msg) => {\n    console.log('RailwayCanvas: Received message from ContentGenerator:', msg);\n    \n    if (msg.type === 'edit_request') {\n      setIsEditingMode(true);\n      handleEditRequest(msg);\n    } else if (msg.type === 'user' && msg.content) {\n      const userMsg = {\n        id: Date.now(),\n        type: 'user',\n        content: msg.content,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, userMsg]);\n      sendMessage(msg.content);\n    }\n  };\n\n  // CRITICAL: Handle edit requests - EXACT RESTORATION\n  const handleEditRequest = async (request) => {\n    const { content: editPrompt, currentContent, metadata } = request;\n    \n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: `Please edit this content: \"${editPrompt}\"`,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    \n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai/unified-chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          message: `Edit the following content based on this request: \"${editPrompt}\"\\n\\nCurrent content:\\n${currentContent}`,\n          mode: 'content',\n          context: {\n            folder: 'content-generator',\n            editing: true,\n            contentType: metadata?.contentType,\n            tone: metadata?.tone\n          }\n        })\n      });\n\n      const data = await response.json();\n      \n      if (data.success) {\n        const aiMsg = {\n          id: Date.now(),\n          type: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMsg]);\n        setGeneratedContent(data.response);\n      }\n    } catch (error) {\n      console.error('Error processing edit:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to process edit request. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CRITICAL: Send message to AI - EXACT RESTORATION\n  const sendMessage = async (text) => {\n    if (!text?.trim()) return;\n\n    setLoading(true);\n    \n    try {\n      const isEditing = isEditingMode && generatedContent;\n      \n      const response = await fetch(`${API_BASE_URL}/ai/unified-chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          message: isEditing ? \n            `Continue editing this content based on: \"${text}\"\\n\\nCurrent content:\\n${generatedContent}` : \n            text,\n          mode: selectedService?.id === 'content-generator' ? 'content' : 'general',\n          context: {\n            folder: selectedService?.id,\n            editing: isEditing\n          }\n        })\n      });\n\n      const data = await response.json();\n      \n      if (data.success) {\n        const aiMsg = {\n          id: Date.now(),\n          type: 'assistant',\n          content: data.response,\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, aiMsg]);\n        \n        // Check if content was generated\n        if (isActualGeneratedContent(data.response)) {\n          setGeneratedContent(data.response);\n          detectContentType(data.response);\n        }\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMsg = {\n        id: Date.now(),\n        type: 'error',\n        content: 'Failed to send message. Please check your connection.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!message.trim() || loading) return;\n\n    const userMsg = {\n      id: Date.now(),\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMsg]);\n    \n    sendMessage(message);\n    setMessage('');\n  };\n\n  // Check if response is actual generated content\n  const isActualGeneratedContent = (text) => {\n    if (!text || text.length < 100) return false;\n    \n    const indicators = [\n      'FOR IMMEDIATE RELEASE',\n      'Dear ',\n      'Subject:',\n      'Q:',\n      'Question:',\n      '#',\n      'We are pleased'\n    ];\n    \n    return indicators.some(indicator => text.includes(indicator));\n  };\n\n  // Detect content type\n  const detectContentType = (text) => {\n    if (text.includes('FOR IMMEDIATE RELEASE')) {\n      setCurrentContentType('press-release');\n    } else if (text.includes('Q:') || text.includes('Question:')) {\n      setCurrentContentType('qa-doc');\n    } else if (text.includes('#')) {\n      setCurrentContentType('social-post');\n    }\n  };\n\n  // Update content from Content Generator\n  const handleContentUpdate = (newContent) => {\n    setGeneratedContent(newContent);\n    if (newContent && !isEditingMode) {\n      setIsEditingMode(false);\n    }\n  };\n\n  // Auto-scroll messages\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Render connection lines between services\n  const renderConnections = () => {\n    return connections.map((conn, idx) => {\n      const fromService = services.find(s => s.id === conn.from);\n      const toService = services.find(s => s.id === conn.to);\n      \n      if (!fromService || !toService) return null;\n      \n      const x1 = fromService.position.x + 150; // Card width / 2\n      const y1 = fromService.position.y + 60; // Card height / 2\n      const x2 = toService.position.x + 150;\n      const y2 = toService.position.y + 60;\n      \n      // Calculate curve control points for Railway-style tracks\n      const midX = (x1 + x2) / 2;\n      const midY = (y1 + y2) / 2;\n      const controlOffset = Math.abs(x2 - x1) * 0.1;\n      \n      return (\n        <g key={`conn-${idx}`} className=\"connection-line\">\n          <path\n            d={`M ${x1} ${y1} Q ${midX} ${midY - controlOffset} ${x2} ${y2}`}\n            stroke=\"rgba(139, 92, 246, 0.3)\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n            strokeDasharray={conn.type === 'bidirectional' ? '0' : '5 5'}\n          />\n          {conn.type === 'bidirectional' && (\n            <>\n              <circle cx={x1} cy={y1} r=\"4\" fill=\"#8b5cf6\" />\n              <circle cx={x2} cy={y2} r=\"4\" fill=\"#8b5cf6\" />\n            </>\n          )}\n        </g>\n      );\n    });\n  };\n\n  return (\n    <div className=\"railway-canvas-container\">\n      {/* Canvas Area */}\n      <div className=\"railway-canvas\" ref={canvasRef}>\n        {/* Connection Lines SVG */}\n        <svg className=\"connections-layer\">\n          {renderConnections()}\n        </svg>\n        \n        {/* Service Cards */}\n        {services.map(service => {\n          const Icon = service.icon;\n          const isSelected = selectedService?.id === service.id;\n          const isAIAssistant = service.id === 'ai-assistant';\n          \n          return (\n            <div\n              key={service.id}\n              className={`service-card ${service.type} ${isSelected ? 'selected' : ''} ${service.status}`}\n              style={{\n                left: `${service.position.x}px`,\n                top: `${service.position.y}px`,\n                borderColor: service.color,\n                boxShadow: isSelected ? `0 0 20px ${service.color}40` : undefined\n              }}\n              onMouseDown={(e) => !isAIAssistant && handleDragStart(e, service)}\n              onClick={() => handleServiceClick(service)}\n            >\n              {/* Service Header */}\n              <div className=\"service-header\" style={{ background: `${service.color}15` }}>\n                <Icon size={20} style={{ color: service.color }} />\n                <span className=\"service-name\">{service.name}</span>\n                {service.status === 'active' && (\n                  <Circle size={8} fill=\"#10b981\" className=\"status-indicator\" />\n                )}\n              </div>\n              \n              {/* Service Content */}\n              <div className=\"service-content\">\n                <p className=\"service-description\">{service.description}</p>\n                \n                {/* AI Assistant Interface - IN THE CARD */}\n                {isAIAssistant && (\n                  <div className=\"ai-assistant-interface\">\n                    <div className=\"messages-mini\">\n                      {messages.slice(-3).map(msg => (\n                        <div key={msg.id} className={`message-mini ${msg.type}`}>\n                          {msg.content.substring(0, 100)}...\n                        </div>\n                      ))}\n                    </div>\n                    <form onSubmit={handleSubmit} className=\"ai-input-mini\">\n                      <input\n                        type=\"text\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        placeholder=\"Ask me anything...\"\n                        disabled={loading}\n                      />\n                      <button type=\"submit\" disabled={loading}>\n                        <Send size={14} />\n                      </button>\n                    </form>\n                  </div>\n                )}\n                \n                {/* Service Actions */}\n                {!isAIAssistant && (\n                  <div className=\"service-actions\">\n                    <button className=\"service-action\">\n                      {service.status === 'active' ? 'Open' : 'Configure'}\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      \n      {/* Expanded Service Modal */}\n      {selectedService && selectedService.id === 'content-generator' && (\n        <div className=\"service-modal\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h2>{selectedService.name}</h2>\n              <button onClick={() => setSelectedService(null)} className=\"close-button\">\n                <X size={20} />\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <ContentGeneratorModule\n                onAIMessage={handleContentGeneratorMessage}\n                generatedContent={generatedContent}\n                onContentUpdate={handleContentUpdate}\n                currentContentType={currentContentType}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Canvas Controls */}\n      <div className=\"canvas-controls\">\n        <button className=\"control-button\" title=\"Reset Layout\">\n          <RefreshCw size={16} />\n        </button>\n        <button className=\"control-button\" title=\"Zoom In\">\n          <ZoomIn size={16} />\n        </button>\n        <button className=\"control-button\" title=\"Zoom Out\">\n          <ZoomOut size={16} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Add missing imports\nconst RefreshCw = () => <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><path d=\"M23 4v6h-6M1 20v-6h6M3.51 9a9 9 0 0114.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0020.49 15\"/></svg>;\nconst ZoomIn = () => <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><path d=\"m21 21-4.35-4.35M11 8v6M8 11h6\"/></svg>;\nconst ZoomOut = () => <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><circle cx=\"11\" cy=\"11\" r=\"8\"/><path d=\"m21 21-4.35-4.35M8 11h6\"/></svg>;\n\nexport default RailwayCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}